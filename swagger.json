{
  "swagger" : "2.0",
  "info" : {
    "description" : "\n<p>Unite US API.</p>\n&copy; 2020 Unite US, Inc. All Rights Reserved.",
    "version" : "3",
    "title" : "Unite US API (params in:body)",
    "x-copyright" : "&copy; 2020 Unite US, Inc. All Rights Reserved."
  },
  "host" : "localhost:3000",
  "basePath" : "/api",
  "tags" : [ {
    "name" : "API: Bootstrap",
    "description" : ""
  }, {
    "name" : "API: Status",
    "description" : ""
  }, {
    "name" : "Address Book Groups",
    "description" : ""
  }, {
    "name" : "All-Time Reports: Actionables Summary",
    "description" : ""
  }, {
    "name" : "All-Time Reports: Counts Summary",
    "description" : ""
  }, {
    "name" : "Area to Accept Consent Requests that are created via Attestation",
    "description" : ""
  }, {
    "name" : "Area to Reject Consent Requests that are created via Attestation",
    "description" : ""
  }, {
    "name" : "Assistance Requests: Filter Timeline Events",
    "description" : ""
  }, {
    "name" : "Assistance Requests: Timeline Events",
    "description" : ""
  }, {
    "name" : "Authentication: Validate Token",
    "description" : ""
  }, {
    "name" : "Back Office: Duplicate a form and all associations",
    "description" : ""
  }, {
    "name" : "Back Office: Duplicate a section and all its children",
    "description" : ""
  }, {
    "name" : "Back Office: Forms",
    "description" : ""
  }, {
    "name" : "Back Office: Forms -> Questions",
    "description" : ""
  }, {
    "name" : "Back Office: Forms -> Questions -> Input Options",
    "description" : ""
  }, {
    "name" : "Back Office: Forms -> Questions -> Validators",
    "description" : ""
  }, {
    "name" : "Back Office: Forms -> Sections",
    "description" : ""
  }, {
    "name" : "Back Office: Forms Publish",
    "description" : ""
  }, {
    "name" : "Back Office: Global Questions Search",
    "description" : ""
  }, {
    "name" : "Back Office: Universal Search",
    "description" : ""
  }, {
    "name" : "Back Office: Update a Questions Section.  Move a question to a nother section",
    "description" : ""
  }, {
    "name" : "Back Office: Use Forms",
    "description" : ""
  }, {
    "name" : "Care Coordinators",
    "description" : ""
  }, {
    "name" : "Care Team Members: Addresses",
    "description" : ""
  }, {
    "name" : "Care Team Members: Email Addresses",
    "description" : ""
  }, {
    "name" : "Care Team Members: Phone Numbers",
    "description" : ""
  }, {
    "name" : "Cases",
    "description" : ""
  }, {
    "name" : "Cases: Assessments/Forms",
    "description" : ""
  }, {
    "name" : "Cases: Documents",
    "description" : ""
  }, {
    "name" : "Cases: Primary Case Worker",
    "description" : ""
  }, {
    "name" : "Client Gender by Age",
    "description" : ""
  }, {
    "name" : "Client Military Affiliation by Gender",
    "description" : ""
  }, {
    "name" : "Client Military Branch of Service by Gender",
    "description" : ""
  }, {
    "name" : "Client Military Service Era by Branch of Service",
    "description" : ""
  }, {
    "name" : "Client Military Service Era by Gender",
    "description" : ""
  }, {
    "name" : "Client Military Transition Status by Branch of Service",
    "description" : ""
  }, {
    "name" : "Client Military Transitioning by Gender",
    "description" : ""
  }, {
    "name" : "Client Race by Ethnicity",
    "description" : ""
  }, {
    "name" : "Clients Military Status by Gender",
    "description" : ""
  }, {
    "name" : "Clients by Age",
    "description" : ""
  }, {
    "name" : "Clients by Ethnicity",
    "description" : ""
  }, {
    "name" : "Clients by Gender",
    "description" : ""
  }, {
    "name" : "Clients by Military Affiliation",
    "description" : ""
  }, {
    "name" : "Clients by Military Branch of Service",
    "description" : ""
  }, {
    "name" : "Clients by Military Deployment",
    "description" : ""
  }, {
    "name" : "Clients by Military Discharge",
    "description" : ""
  }, {
    "name" : "Clients by Military Service Era",
    "description" : ""
  }, {
    "name" : "Clients by Military Status",
    "description" : ""
  }, {
    "name" : "Clients by Military Transitioning Status",
    "description" : ""
  }, {
    "name" : "Clients by Race",
    "description" : ""
  }, {
    "name" : "Closed Service Cases by Service Type",
    "description" : ""
  }, {
    "name" : "Closed Service Cases by Service Type and Outcome",
    "description" : ""
  }, {
    "name" : "Closed Service Cases by Sub Types of Service Type",
    "description" : ""
  }, {
    "name" : "Confirming Two-Factor Authentication (2FA) Registration",
    "description" : "\n<p>Confirm 2FA verification code for a Unite US user account.</p>\n"
  }, {
    "name" : "Contact: Care Team",
    "description" : ""
  }, {
    "name" : "Contacts",
    "description" : ""
  }, {
    "name" : "Contacts Gender by Age Report",
    "description" : ""
  }, {
    "name" : "Contacts with Intakes",
    "description" : ""
  }, {
    "name" : "Contacts: Addresses",
    "description" : ""
  }, {
    "name" : "Contacts: Consents - Create an email consent request",
    "description" : ""
  }, {
    "name" : "Contacts: Consents - Create an sms consent request",
    "description" : ""
  }, {
    "name" : "Contacts: Consents - Create and accept a document consent request",
    "description" : ""
  }, {
    "name" : "Contacts: Consents - Create consent request URL",
    "description" : ""
  }, {
    "name" : "Contacts: Documents",
    "description" : ""
  }, {
    "name" : "Contacts: Email Addresses",
    "description" : ""
  }, {
    "name" : "Contacts: Filter Timeline Events",
    "description" : ""
  }, {
    "name" : "Contacts: Filter by Primary Worker",
    "description" : ""
  }, {
    "name" : "Contacts: Forms",
    "description" : ""
  }, {
    "name" : "Contacts: Interactions",
    "description" : ""
  }, {
    "name" : "Contacts: Phone Numbers",
    "description" : ""
  }, {
    "name" : "Contacts: Program Enrollment",
    "description" : ""
  }, {
    "name" : "Contacts: Referrals",
    "description" : ""
  }, {
    "name" : "Contacts: Respond to Form",
    "description" : ""
  }, {
    "name" : "Contacts: Select/Use by Group",
    "description" : ""
  }, {
    "name" : "Contacts: Timeline Events",
    "description" : ""
  }, {
    "name" : "Controller for Revoking Consent for a Client",
    "description" : ""
  }, {
    "name" : "Document Deletion",
    "description" : ""
  }, {
    "name" : "Documents",
    "description" : ""
  }, {
    "name" : "EMR Context",
    "description" : ""
  }, {
    "name" : "EMR Patient Contact Information",
    "description" : ""
  }, {
    "name" : "EMR Patient Contact association",
    "description" : ""
  }, {
    "name" : "Exports",
    "description" : ""
  }, {
    "name" : "Global Contact Notification Settings for Users",
    "description" : ""
  }, {
    "name" : "Global Notification Settings for Users",
    "description" : ""
  }, {
    "name" : "Group Cases: Enrollment",
    "description" : ""
  }, {
    "name" : "Group sharing",
    "description" : ""
  }, {
    "name" : "Groups",
    "description" : ""
  }, {
    "name" : "Groups -> Assistance Requests: Forms",
    "description" : ""
  }, {
    "name" : "Groups Service Types: Outcomes",
    "description" : ""
  }, {
    "name" : "Groups: Assistance Request Form Config",
    "description" : ""
  }, {
    "name" : "Groups: Assistance Requests",
    "description" : ""
  }, {
    "name" : "Groups: Cases",
    "description" : ""
  }, {
    "name" : "Groups: Cases Converted from Sent Referrals",
    "description" : ""
  }, {
    "name" : "Groups: Closed Referrals",
    "description" : ""
  }, {
    "name" : "Groups: Draft Referrals",
    "description" : ""
  }, {
    "name" : "Groups: Filter Timeline Events",
    "description" : ""
  }, {
    "name" : "Groups: Forms Available for Use",
    "description" : ""
  }, {
    "name" : "Groups: Forms Returns a form with a single question containing only the questions marked as intake",
    "description" : ""
  }, {
    "name" : "Groups: Hours of Operation",
    "description" : ""
  }, {
    "name" : "Groups: Open Channel referrals",
    "description" : ""
  }, {
    "name" : "Groups: Program Users",
    "description" : ""
  }, {
    "name" : "Groups: Programs",
    "description" : ""
  }, {
    "name" : "Groups: Referral Contact",
    "description" : ""
  }, {
    "name" : "Groups: Referral Contact Forms",
    "description" : ""
  }, {
    "name" : "Groups: Referral Contact Program Enrollment",
    "description" : ""
  }, {
    "name" : "Groups: Referral Contact Respond to Form",
    "description" : ""
  }, {
    "name" : "Groups: Referrals",
    "description" : ""
  }, {
    "name" : "Groups: Referrals Received",
    "description" : ""
  }, {
    "name" : "Groups: Referrals Sent",
    "description" : ""
  }, {
    "name" : "Groups: Screenings",
    "description" : ""
  }, {
    "name" : "Groups: Search -> Global Contacts",
    "description" : ""
  }, {
    "name" : "Groups: Service Case Contact Forms",
    "description" : ""
  }, {
    "name" : "Groups: Service Case Contact Respond to Form",
    "description" : ""
  }, {
    "name" : "Groups: Service Types Offered",
    "description" : ""
  }, {
    "name" : "Groups: Service Types Offered along with Outcomes scope to the Group",
    "description" : ""
  }, {
    "name" : "Groups: Service Types Offered: Sub-Types",
    "description" : ""
  }, {
    "name" : "Groups: Timeline Events",
    "description" : ""
  }, {
    "name" : "Groups: UniteUs Partcipation Agreements",
    "description" : "\n<p>Organization Administrators Accept Participation Agreement on Behalf of a\nGroup</p>\n"
  }, {
    "name" : "Groups: User Invitation Reminders",
    "description" : ""
  }, {
    "name" : "Groups: User Invitations",
    "description" : ""
  }, {
    "name" : "Groups: Users",
    "description" : ""
  }, {
    "name" : "Groups: Users - System Roles",
    "description" : ""
  }, {
    "name" : "Groups: Users With Contacts",
    "description" : ""
  }, {
    "name" : "Groups::Contacts::Cases: Filter Timeline Events",
    "description" : ""
  }, {
    "name" : "Groups::Contacts::Cases: Timeline Events",
    "description" : ""
  }, {
    "name" : "Groups::Contacts::Households::Members",
    "description" : ""
  }, {
    "name" : "Groups::Contacts::Households::MembersCounts",
    "description" : ""
  }, {
    "name" : "Groups::Contacts::Households::MembersCounts::Disable",
    "description" : ""
  }, {
    "name" : "Groups::Contacts::Households::MembersCounts::Enable",
    "description" : ""
  }, {
    "name" : "Groups::Referrals: Hold",
    "description" : ""
  }, {
    "name" : "Groups::Referrals: Reassign Program",
    "description" : ""
  }, {
    "name" : "Groups::Referrals: Recall",
    "description" : ""
  }, {
    "name" : "Groups::Users: Connections",
    "description" : ""
  }, {
    "name" : "Ingestions",
    "description" : ""
  }, {
    "name" : "Intake: Documents",
    "description" : ""
  }, {
    "name" : "Invitations: User",
    "description" : ""
  }, {
    "name" : "Network Client Military Affiliation by Gender",
    "description" : ""
  }, {
    "name" : "Network Client Military Branch of Service by Gender",
    "description" : ""
  }, {
    "name" : "Network Client Military Service Era by Branch of Service",
    "description" : ""
  }, {
    "name" : "Network Client Military Service Era by Gender",
    "description" : ""
  }, {
    "name" : "Network Client Military Transition Status by Branch of Service",
    "description" : ""
  }, {
    "name" : "Network Client Military Transitioning by Gender",
    "description" : ""
  }, {
    "name" : "Network Clients Military Status by Gender",
    "description" : ""
  }, {
    "name" : "Network Clients by Military Affiliation",
    "description" : ""
  }, {
    "name" : "Network Clients by Military Branch of Service",
    "description" : ""
  }, {
    "name" : "Network Clients by Military Deployment",
    "description" : ""
  }, {
    "name" : "Network Clients by Military Discharge",
    "description" : ""
  }, {
    "name" : "Network Clients by Military Service Era",
    "description" : ""
  }, {
    "name" : "Network Clients by Military Status",
    "description" : ""
  }, {
    "name" : "Network Clients by Military Transitioning Status",
    "description" : ""
  }, {
    "name" : "Network Contacts By Age Report",
    "description" : ""
  }, {
    "name" : "Network Contacts By Ethnicity Report",
    "description" : ""
  }, {
    "name" : "Network Contacts By Gender Report",
    "description" : ""
  }, {
    "name" : "Network Contacts By Race Report",
    "description" : ""
  }, {
    "name" : "Networks Service Types: Outcomes",
    "description" : ""
  }, {
    "name" : "Networks: Groups",
    "description" : ""
  }, {
    "name" : "Networks: Groups by Referral Scope",
    "description" : ""
  }, {
    "name" : "Networks: Service Types",
    "description" : ""
  }, {
    "name" : "Networks: Service Types Offered",
    "description" : ""
  }, {
    "name" : "Networks: Service Types Offered along with Outcomes scope to the Network",
    "description" : ""
  }, {
    "name" : "Networks: Users/Collaborators by Referral Scopes",
    "description" : ""
  }, {
    "name" : "Notification Preferences for a Group that a User belongs to",
    "description" : ""
  }, {
    "name" : "Notification Preferences for a Network that a User belongs to",
    "description" : ""
  }, {
    "name" : "Notifications: Email Unsubscribe",
    "description" : ""
  }, {
    "name" : "Organization Service Cases",
    "description" : ""
  }, {
    "name" : "Public: area to Accept Consent Requests that are created via SMS or Email",
    "description" : ""
  }, {
    "name" : "Public: area to Reject Consent Requests that are created via SMS or Email",
    "description" : ""
  }, {
    "name" : "Public: area to accept/reject consents that are created via SMS or Email",
    "description" : ""
  }, {
    "name" : "Received Referrals by Organization",
    "description" : ""
  }, {
    "name" : "Referral: Forms Available for Use",
    "description" : ""
  }, {
    "name" : "Referrals: Documents",
    "description" : ""
  }, {
    "name" : "Referrals: Filter Timeline Events",
    "description" : ""
  }, {
    "name" : "Referrals: Primary Referral Worker",
    "description" : ""
  }, {
    "name" : "Referrals: Timeline Events",
    "description" : ""
  }, {
    "name" : "Screenings: Fetch screenings for contact",
    "description" : ""
  }, {
    "name" : "Screenings: Respond to Screening",
    "description" : ""
  }, {
    "name" : "Search",
    "description" : ""
  }, {
    "name" : "Sent Referrals by Organization",
    "description" : ""
  }, {
    "name" : "Service Cases by Service Type",
    "description" : ""
  }, {
    "name" : "Service Cases by Source",
    "description" : ""
  }, {
    "name" : "Service Cases by Status",
    "description" : ""
  }, {
    "name" : "Service Cases by Sub Types of Service Type",
    "description" : ""
  }, {
    "name" : "Unique Network Contacts Report",
    "description" : ""
  }, {
    "name" : "Unique Network Organizations Report",
    "description" : ""
  }, {
    "name" : "Unique Network Users Report",
    "description" : ""
  }, {
    "name" : "Unique Organization Clients Report",
    "description" : ""
  }, {
    "name" : "User Confirmation",
    "description" : ""
  }, {
    "name" : "User Registration",
    "description" : ""
  }, {
    "name" : "Users",
    "description" : ""
  }, {
    "name" : "Users: Active Session Management",
    "description" : "\n<p>Manage active user sessions (tokens) registered with the API.</p>\n"
  }, {
    "name" : "Users: Addresses",
    "description" : ""
  }, {
    "name" : "Users: License Agreements (EULA)",
    "description" : "\n<p>Accepts license agreement for a user to access the software. UU3-1307</p>\n"
  }, {
    "name" : "Users: Two-Factor Authentication (2FA)",
    "description" : "\n<p>Enable and disable 2FA for a Unite US user account.</p>\n"
  }, {
    "name" : "Users: Zendesk Support",
    "description" : ""
  }, {
    "name" : "Widgets: Assistance Requests",
    "description" : ""
  } ],
  "consumes" : [ "application/json" ],
  "paths" : {
    "/" : {
      "get" : {
        "tags" : [ "API: Status" ],
        "summary" : "Checks the status of the Unite US API.",
        "description" : "",
        "operationId" : "get",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms" : {
      "get" : {
        "tags" : [ "Back Office: Forms" ],
        "summary" : "Returns a list of forms available.",
        "description" : "",
        "operationId" : "get_back-office_api_forms",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Back Office: Forms" ],
        "summary" : "Create a new form for the group.",
        "description" : "\n<p>Create a new group form.</p>\n",
        "operationId" : "post_back-office_api_forms",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "form[name]",
          "in" : "formData",
          "description" : "Name of the form.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "form[notes_text]",
          "in" : "formData",
          "description" : "Additional notes or description to help identify the form.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "form[is_active]",
          "in" : "formData",
          "description" : "Is the form active or inactive.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/use-by/groups/{group_id}/programs/{id}" : {
      "get" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "List forms used by the object.",
        "description" : "",
        "operationId" : "get_back-office_api_forms_use-by_groups_group_id_programs_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "use_type",
          "in" : "query",
          "description" : "How should the form be used.",
          "required" : false,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "service_types",
          "in" : "query",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/use-by/groups/{id}" : {
      "get" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "List forms used by the object.",
        "description" : "",
        "operationId" : "get_back-office_api_forms_use-by_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "use_type",
          "in" : "query",
          "description" : "How should the form be used.",
          "required" : false,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "service_types",
          "in" : "query",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/use-by/networks/{id}" : {
      "get" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "List forms used by the object.",
        "description" : "",
        "operationId" : "get_back-office_api_forms_use-by_networks_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "use_type",
          "in" : "query",
          "description" : "How should the form be used.",
          "required" : false,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "service_types",
          "in" : "query",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/duplicate" : {
      "post" : {
        "tags" : [ "Back Office: Duplicate a form and all associations" ],
        "summary" : "Duplicate the specified form and return the duplicated form.",
        "description" : "",
        "operationId" : "post_back-office_api_forms_form_id_duplicate",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/questions" : {
      "post" : {
        "tags" : [ "Back Office: Forms -> Questions" ],
        "summary" : "Creates a new question on the selected form.",
        "description" : "\n<p>Create a new question and adds it to the selected form.</p>\n",
        "operationId" : "post_back-office_api_forms_form_id_questions",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "question[conditional_display][show_or_hide_question_id]",
          "in" : "formData",
          "description" : "Identifier of the question to be shown or hide.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question[conditional_display][show_or_hide]",
          "in" : "formData",
          "description" : "Show or hide the specified question based on the conditions.",
          "required" : true,
          "type" : "string",
          "enum" : [ "show", "hide" ]
        }, {
          "name" : "question[display_order]",
          "in" : "formData",
          "description" : "The position of the question within the question list display. If within a section, the order is scoped.",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "question[label_text]",
          "in" : "formData",
          "description" : "The label text to be displayed for the question.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question[section_id]",
          "in" : "formData",
          "description" : "Identifier of the form section this question belongs to",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[placeholder_text]",
          "in" : "formData",
          "description" : "Placeholder text to be displayed within the input, if supported by the browser.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[help_text]",
          "in" : "formData",
          "description" : "Help text to be displayed with the question.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[help_text_position]",
          "in" : "formData",
          "description" : "Where to position the help text, if help text is provided.",
          "required" : false,
          "type" : "string",
          "enum" : [ "before_input", "after_input" ]
        }, {
          "name" : "question[is_required]",
          "in" : "formData",
          "description" : "Is this question required to be completed?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "question[min_selections]",
          "in" : "formData",
          "description" : "If the question is a selection-based question (drop-down, checkbox list, etc.), what is the minimum number of selections that must be made.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "question[max_selections]",
          "in" : "formData",
          "description" : "If the question is a selection-based question (drop-down, checkbox list, etc.), what is the maximum number of selections that may be made.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "question[input_options]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "question[conditional_display][and_conditions]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "question[conditional_display][or_conditions]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/questions/{id}" : {
      "put" : {
        "tags" : [ "Back Office: Forms -> Questions" ],
        "summary" : "Update an existing question on the form.",
        "description" : "\n<p>Update an existing question. Performing an update does not change any\nexisting responses to the question.</p>\n",
        "operationId" : "put_back-office_api_forms_form_id_questions_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question[section_id]",
          "in" : "formData",
          "description" : "Identifier of the form section this question belongs to",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[label_text]",
          "in" : "formData",
          "description" : "The label text to be displayed for the question.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[placeholder_text]",
          "in" : "formData",
          "description" : "Placeholder text to be displayed within the input, if supported by the browser.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[help_text]",
          "in" : "formData",
          "description" : "Help text to be displayed with the question.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[help_text_position]",
          "in" : "formData",
          "description" : "Where to position the help text, if help text is provided.",
          "required" : false,
          "type" : "string",
          "enum" : [ "before_input", "after_input" ]
        }, {
          "name" : "question[display_order]",
          "in" : "formData",
          "description" : "The position of the question within the question list display. If within a section, the order is scoped.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "question[is_required]",
          "in" : "formData",
          "description" : "Is this question required to be completed?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "question[min_selections]",
          "in" : "formData",
          "description" : "If the question is a selection-based question (drop-down, checkbox list, etc.), what is the minimum number of selections that must be made.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "question[max_selections]",
          "in" : "formData",
          "description" : "If the question is a selection-based question (drop-down, checkbox list, etc.), what is the maximum number of selections that may be made.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "question[input_options]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "question[conditional_display][show_or_hide]",
          "in" : "formData",
          "description" : "Show or hide the specified question based on the conditions.",
          "required" : false,
          "type" : "string",
          "enum" : [ "show", "hide" ]
        }, {
          "name" : "question[conditional_display][show_or_hide_question_id]",
          "in" : "formData",
          "description" : "Identifier of the question to be shown or hide.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[conditional_display][and_conditions]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "question[conditional_display][or_conditions]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Back Office: Forms -> Questions" ],
        "summary" : "Update an existing question on the form.",
        "description" : "\n<p>Update an existing question. Performing an update does not change any\nexisting responses to the question.</p>\n",
        "operationId" : "patch_back-office_api_forms_form_id_questions_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question[section_id]",
          "in" : "formData",
          "description" : "Identifier of the form section this question belongs to",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[label_text]",
          "in" : "formData",
          "description" : "The label text to be displayed for the question.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[placeholder_text]",
          "in" : "formData",
          "description" : "Placeholder text to be displayed within the input, if supported by the browser.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[help_text]",
          "in" : "formData",
          "description" : "Help text to be displayed with the question.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[help_text_position]",
          "in" : "formData",
          "description" : "Where to position the help text, if help text is provided.",
          "required" : false,
          "type" : "string",
          "enum" : [ "before_input", "after_input" ]
        }, {
          "name" : "question[display_order]",
          "in" : "formData",
          "description" : "The position of the question within the question list display. If within a section, the order is scoped.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "question[is_required]",
          "in" : "formData",
          "description" : "Is this question required to be completed?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "question[min_selections]",
          "in" : "formData",
          "description" : "If the question is a selection-based question (drop-down, checkbox list, etc.), what is the minimum number of selections that must be made.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "question[max_selections]",
          "in" : "formData",
          "description" : "If the question is a selection-based question (drop-down, checkbox list, etc.), what is the maximum number of selections that may be made.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "question[input_options]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "question[conditional_display][show_or_hide]",
          "in" : "formData",
          "description" : "Show or hide the specified question based on the conditions.",
          "required" : false,
          "type" : "string",
          "enum" : [ "show", "hide" ]
        }, {
          "name" : "question[conditional_display][show_or_hide_question_id]",
          "in" : "formData",
          "description" : "Identifier of the question to be shown or hide.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "question[conditional_display][and_conditions]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "question[conditional_display][or_conditions]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/questions/{question_id}/input-options" : {
      "get" : {
        "tags" : [ "Back Office: Forms -> Questions -> Input Options" ],
        "summary" : "Returns the input options available for the selected question.",
        "description" : "",
        "operationId" : "get_back-office_api_forms_form_id_questions_question_id_input-options",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Back Office: Forms -> Questions -> Input Options" ],
        "summary" : "Add a new input option to the selected question.",
        "description" : "",
        "operationId" : "post_back-office_api_forms_form_id_questions_question_id_input-options",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "input_option[display_order]",
          "in" : "formData",
          "description" : "The position within the form that this section should appear.",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "input_option[base_input_option_id]",
          "in" : "formData",
          "description" : "Identifier of the base input option from the global repository. Required for non create actions.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "input_option[option_label]",
          "in" : "formData",
          "description" : "The label to be displayed to users completing a form with this question and input option.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/questions/{question_id}/input-options/{id}" : {
      "get" : {
        "tags" : [ "Back Office: Forms -> Questions -> Input Options" ],
        "summary" : "Return details of a single input option.",
        "description" : "",
        "operationId" : "get_back-office_api_forms_form_id_questions_question_id_input-options_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Back Office: Forms -> Questions -> Input Options" ],
        "summary" : "Update an existing input option.",
        "description" : "",
        "operationId" : "put_back-office_api_forms_form_id_questions_question_id_input-options_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "input_option[display_order]",
          "in" : "formData",
          "description" : "The position within the form that this section should appear.",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "input_option[base_input_option_id]",
          "in" : "formData",
          "description" : "Identifier of the base input option from the global repository. Required for non create actions.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "input_option[option_label]",
          "in" : "formData",
          "description" : "The label to be displayed to users completing a form with this question and input option.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Back Office: Forms -> Questions -> Input Options" ],
        "summary" : "Destroy an existing input option.",
        "description" : "",
        "operationId" : "delete_back-office_api_forms_form_id_questions_question_id_input-options_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Back Office: Forms -> Questions -> Input Options" ],
        "summary" : "Update an existing input option.",
        "description" : "",
        "operationId" : "patch_back-office_api_forms_form_id_questions_question_id_input-options_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "input_option[display_order]",
          "in" : "formData",
          "description" : "The position within the form that this section should appear.",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "input_option[base_input_option_id]",
          "in" : "formData",
          "description" : "Identifier of the base input option from the global repository. Required for non create actions.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "input_option[option_label]",
          "in" : "formData",
          "description" : "The label to be displayed to users completing a form with this question and input option.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/questions/{question_id}/update-section" : {
      "post" : {
        "tags" : [ "Back Office: Update a Questions Section.  Move a question to a nother section" ],
        "summary" : "Moves the question from its current section to the new one specified.",
        "description" : "",
        "operationId" : "post_back-office_api_forms_form_id_questions_question_id_update-section",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "question[section_id]",
          "in" : "formData",
          "description" : "The new section ID that we are moving the question to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/questions/{question_id}/validators" : {
      "post" : {
        "tags" : [ "Back Office: Forms -> Questions -> Validators" ],
        "summary" : "Creates a new validator for the question.",
        "description" : "",
        "operationId" : "post_back-office_api_forms_form_id_questions_question_id_validators",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/questions/{question_id}/validators/{id}" : {
      "put" : {
        "tags" : [ "Back Office: Forms -> Questions -> Validators" ],
        "summary" : "Updates a question validator. The validator type cannot be changed via this method.",
        "description" : "",
        "operationId" : "put_back-office_api_forms_form_id_questions_question_id_validators_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Back Office: Forms -> Questions -> Validators" ],
        "summary" : "Permanently delete a validator from a question.",
        "description" : "",
        "operationId" : "delete_back-office_api_forms_form_id_questions_question_id_validators_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Back Office: Forms -> Questions -> Validators" ],
        "summary" : "Updates a question validator. The validator type cannot be changed via this method.",
        "description" : "",
        "operationId" : "patch_back-office_api_forms_form_id_questions_question_id_validators_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "question_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/sections" : {
      "post" : {
        "tags" : [ "Back Office: Forms -> Sections" ],
        "summary" : "Add a new section to the selected form.",
        "description" : "",
        "operationId" : "post_back-office_api_forms_form_id_sections",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "section[display_order]",
          "in" : "formData",
          "description" : "The position within the form that this section should appear.",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "section[display_name]",
          "in" : "formData",
          "description" : "Should the name of the section be displayed to the user.",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "section[name]",
          "in" : "formData",
          "description" : "The name of the section.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "section[section_type]",
          "in" : "formData",
          "description" : "The type of the section. A break would typically appear as a horizontal rule or similar on a form.",
          "required" : false,
          "type" : "string",
          "enum" : [ "form_group", "break" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/sections/{id}" : {
      "put" : {
        "tags" : [ "Back Office: Forms -> Sections" ],
        "summary" : "Update an existing form section.",
        "description" : "",
        "operationId" : "put_back-office_api_forms_form_id_sections_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "section[display_order]",
          "in" : "formData",
          "description" : "The position within the form that this section should appear.",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "section[display_name]",
          "in" : "formData",
          "description" : "Should the name of the section be displayed to the user.",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "section[name]",
          "in" : "formData",
          "description" : "The name of the section.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "section[section_type]",
          "in" : "formData",
          "description" : "The type of the section. A break would typically appear as a horizontal rule or similar on a form.",
          "required" : false,
          "type" : "string",
          "enum" : [ "form_group", "break" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Back Office: Forms -> Sections" ],
        "summary" : "Remove a section from the selected form.",
        "description" : "\n<p>Deletes the section from the form, but does NOT delete the questions from\nthe form. Questions contained within a deleted section will be categorized\nas not in a section.</p>\n",
        "operationId" : "delete_back-office_api_forms_form_id_sections_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Back Office: Forms -> Sections" ],
        "summary" : "Update an existing form section.",
        "description" : "",
        "operationId" : "patch_back-office_api_forms_form_id_sections_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "section[display_order]",
          "in" : "formData",
          "description" : "The position within the form that this section should appear.",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "section[display_name]",
          "in" : "formData",
          "description" : "Should the name of the section be displayed to the user.",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "section[name]",
          "in" : "formData",
          "description" : "The name of the section.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "section[section_type]",
          "in" : "formData",
          "description" : "The type of the section. A break would typically appear as a horizontal rule or similar on a form.",
          "required" : false,
          "type" : "string",
          "enum" : [ "form_group", "break" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/sections/{id}/duplicate" : {
      "post" : {
        "tags" : [ "Back Office: Duplicate a section and all its children" ],
        "summary" : "Duplicate the specified form and return the duplicated form.",
        "description" : "",
        "operationId" : "post_back-office_api_forms_form_id_sections_id_duplicate",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/use-by/groups/{group_id}/programs/{id}" : {
      "post" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Add the selected form to the object.",
        "description" : "",
        "operationId" : "post_back-office_api_forms_form_id_use-by_groups_group_id_programs_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "usage[use_type]",
          "in" : "formData",
          "description" : "How should the form be used.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "usage[service_types]",
          "in" : "formData",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Add the selected form to the object.",
        "description" : "",
        "operationId" : "put_back-office_api_forms_form_id_use-by_groups_group_id_programs_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "usage[use_type]",
          "in" : "formData",
          "description" : "How should the form be used now.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "usage[current_use_type]",
          "in" : "formData",
          "description" : "How should the form is currently being used.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "usage[service_types]",
          "in" : "formData",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Remove the selected form from the object.",
        "description" : "",
        "operationId" : "delete_back-office_api_forms_form_id_use-by_groups_group_id_programs_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "use_type",
          "in" : "formData",
          "description" : "How should the form be used.",
          "required" : false,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Add the selected form to the object.",
        "description" : "",
        "operationId" : "patch_back-office_api_forms_form_id_use-by_groups_group_id_programs_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "usage[use_type]",
          "in" : "formData",
          "description" : "How should the form be used now.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "usage[current_use_type]",
          "in" : "formData",
          "description" : "How should the form is currently being used.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "usage[service_types]",
          "in" : "formData",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/use-by/groups/{id}" : {
      "post" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Add the selected form to the object.",
        "description" : "",
        "operationId" : "post_back-office_api_forms_form_id_use-by_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "usage[use_type]",
          "in" : "formData",
          "description" : "How should the form be used.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "usage[service_types]",
          "in" : "formData",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Add the selected form to the object.",
        "description" : "",
        "operationId" : "put_back-office_api_forms_form_id_use-by_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "usage[use_type]",
          "in" : "formData",
          "description" : "How should the form be used now.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "usage[current_use_type]",
          "in" : "formData",
          "description" : "How should the form is currently being used.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "usage[service_types]",
          "in" : "formData",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Remove the selected form from the object.",
        "description" : "",
        "operationId" : "delete_back-office_api_forms_form_id_use-by_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "use_type",
          "in" : "formData",
          "description" : "How should the form be used.",
          "required" : false,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Add the selected form to the object.",
        "description" : "",
        "operationId" : "patch_back-office_api_forms_form_id_use-by_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "usage[use_type]",
          "in" : "formData",
          "description" : "How should the form be used now.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "usage[current_use_type]",
          "in" : "formData",
          "description" : "How should the form is currently being used.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "usage[service_types]",
          "in" : "formData",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{form_id}/use-by/networks/{id}" : {
      "post" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Add the selected form to the object.",
        "description" : "",
        "operationId" : "post_back-office_api_forms_form_id_use-by_networks_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "usage[use_type]",
          "in" : "formData",
          "description" : "How should the form be used.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "usage[service_types]",
          "in" : "formData",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Add the selected form to the object.",
        "description" : "",
        "operationId" : "put_back-office_api_forms_form_id_use-by_networks_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "usage[use_type]",
          "in" : "formData",
          "description" : "How should the form be used now.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "usage[current_use_type]",
          "in" : "formData",
          "description" : "How should the form is currently being used.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "usage[service_types]",
          "in" : "formData",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Remove the selected form from the object.",
        "description" : "",
        "operationId" : "delete_back-office_api_forms_form_id_use-by_networks_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "use_type",
          "in" : "formData",
          "description" : "How should the form be used.",
          "required" : false,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Back Office: Use Forms" ],
        "summary" : "Add the selected form to the object.",
        "description" : "",
        "operationId" : "patch_back-office_api_forms_form_id_use-by_networks_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "usage[use_type]",
          "in" : "formData",
          "description" : "How should the form be used now.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "usage[current_use_type]",
          "in" : "formData",
          "description" : "How should the form is currently being used.",
          "required" : true,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "usage[service_types]",
          "in" : "formData",
          "description" : "An array of Service Type identifiers that the form usage should be associated with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{id}" : {
      "get" : {
        "tags" : [ "Back Office: Forms" ],
        "summary" : "Returns details of the selected form.",
        "description" : "",
        "operationId" : "get_back-office_api_forms_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Back Office: Forms" ],
        "summary" : "Update an existing form.",
        "description" : "\n<p>Apply an update to an existing group form.</p>\n",
        "operationId" : "put_back-office_api_forms_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form[name]",
          "in" : "formData",
          "description" : "Name of the form.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "form[notes_text]",
          "in" : "formData",
          "description" : "Additional notes or description to help identify the form.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "form[is_active]",
          "in" : "formData",
          "description" : "Is the form active or inactive.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Back Office: Forms" ],
        "summary" : "Update an existing form.",
        "description" : "\n<p>Apply an update to an existing group form.</p>\n",
        "operationId" : "patch_back-office_api_forms_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form[name]",
          "in" : "formData",
          "description" : "Name of the form.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "form[notes_text]",
          "in" : "formData",
          "description" : "Additional notes or description to help identify the form.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "form[is_active]",
          "in" : "formData",
          "description" : "Is the form active or inactive.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/forms/{id}/publish" : {
      "put" : {
        "tags" : [ "Back Office: Forms Publish" ],
        "summary" : "Touch a form.",
        "description" : "\n<p>Touch a form in order to make sure that the cache is current.</p>\n",
        "operationId" : "put_back-office_api_forms_id_publish",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Back Office: Forms Publish" ],
        "summary" : "Touch a form.",
        "description" : "\n<p>Touch a form in order to make sure that the cache is current.</p>\n",
        "operationId" : "patch_back-office_api_forms_id_publish",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/questions/search/global" : {
      "post" : {
        "tags" : [ "Back Office: Global Questions Search" ],
        "summary" : "Returns results from question repository.",
        "description" : "",
        "operationId" : "post_back-office_api_questions_search_global",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "q[text]",
          "in" : "formData",
          "description" : "The keyword or phrase to use when searching the questions repository.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[search_core]",
          "in" : "formData",
          "description" : "T/F for if we are searching Forms::Core or Forms::Forms",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/back-office/api/search/universal" : {
      "post" : {
        "tags" : [ "Back Office: Universal Search" ],
        "summary" : "Returns results from",
        "description" : "",
        "operationId" : "post_back-office_api_search_universal",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "q[search_term]",
          "in" : "formData",
          "description" : "The keyword or phrase to search for",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[limit_to_attributes]",
          "in" : "formData",
          "description" : "An array of strings of attributes to constraint the search by. ['email', 'name']. Can be nil",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[return_attributes]",
          "in" : "formData",
          "description" : "Array of attributes to return in the serialization of the results. ['name', 'id']",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "take",
          "in" : "formData",
          "description" : "The maximum number of results to be returned. Can be nil.",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/groups/{id}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Returns details about the selected Group.",
        "description" : "",
        "operationId" : "get_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/ingestions/{source}/data" : {
      "post" : {
        "tags" : [ "Ingestions" ],
        "summary" : "Add new draft data to the ingestions queue.",
        "description" : "",
        "operationId" : "post_ingestions_source_data",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/networks/{network_id}/groups" : {
      "get" : {
        "tags" : [ "Networks: Groups" ],
        "summary" : "Returns a list of groups that are participating in the selected Network.",
        "description" : "",
        "operationId" : "get_networks_network_id_groups",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "q[coordinates][lon]",
          "in" : "query",
          "description" : "Longitude Coordinate",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "q[coordinates][lat]",
          "in" : "query",
          "description" : "Latitude Coordinate",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "q[text]",
          "in" : "query",
          "description" : "Text to search the index for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[service_type_ids]",
          "in" : "query",
          "description" : "An array of service type IDs to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[distance]",
          "in" : "query",
          "description" : "Either a distance w/ unit OR no distance IOT fetch `any` distance",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[delivery_options]",
          "in" : "query",
          "description" : "An array of Program Delivery Method names to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[languages]",
          "in" : "query",
          "description" : "An array of Program Lanugage names to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[accessibility_options]",
          "in" : "query",
          "description" : "An array of Program Accessibility Option names to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[payment_options]",
          "in" : "query",
          "description" : "An array of Program Fee payment options to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[transportation_options]",
          "in" : "query",
          "description" : "An array of Program Transportation Option names to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[caters_to]",
          "in" : "query",
          "description" : "An array of Program Catered To Population names to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[restricted_to]",
          "in" : "query",
          "description" : "An array of Program Restricted To Population names to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[include_unlicensed_providers]",
          "in" : "query",
          "description" : "Optionally include unlicensed providers",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/networks/{network_id}/groups/{id}" : {
      "get" : {
        "tags" : [ "Networks: Groups" ],
        "summary" : "Returns details about the selected Network group.",
        "description" : "",
        "operationId" : "get_networks_network_id_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/networks/{network_id}/service_types" : {
      "get" : {
        "tags" : [ "Networks: Service Types" ],
        "summary" : "Returns a list of service types that the network supports",
        "description" : "",
        "operationId" : "get_networks_network_id_service_types",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/notifications/unsubscribe" : {
      "get" : {
        "tags" : [ "Notifications: Email Unsubscribe" ],
        "summary" : "Attempt to unsubscribe an email from notifications",
        "description" : "",
        "operationId" : "get_notifications_unsubscribe",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "email_digest",
          "in" : "query",
          "description" : "HMAC digest (sha-256) of notification unsubscribe private key with email wishing to unsubscribe",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Email wishing to unsubscribe",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/system/bootstrap" : {
      "get" : {
        "tags" : [ "API: Bootstrap" ],
        "summary" : "Returns server-side defined bootstrap configuration options for use with client applications.",
        "description" : "",
        "operationId" : "get_system_bootstrap",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/system/bootstrap/service-types" : {
      "get" : {
        "tags" : [ "API: Bootstrap" ],
        "summary" : "Returns server-side defined service types for use with client applications.",
        "description" : "",
        "operationId" : "get_system_bootstrap_service-types",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "flattened",
          "in" : "query",
          "description" : "Optionally return a flattened list of service types",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/system/health" : {
      "get" : {
        "tags" : [ "API: Status" ],
        "summary" : "Checks the status of the Unite US API.",
        "description" : "",
        "operationId" : "get_system_health",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/confirmation" : {
      "get" : {
        "tags" : [ "User Confirmation" ],
        "summary" : "Confirm a user account.",
        "description" : "\n<p>Confirms a user account using the provided confirmation token. A\nsuccessfully confirmed account will result in a <code>200 OK</code>\nresponse.</p>\n",
        "operationId" : "get_v3_confirmation",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "confirmation_token",
          "in" : "query",
          "description" : "Confirmation token delivered to the email address of user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/consent/{consent_token}/accept" : {
      "post" : {
        "tags" : [ "Public: area to Accept Consent Requests that are created via SMS or Email" ],
        "summary" : "Accepts consent and stores captured signature",
        "description" : "",
        "operationId" : "post_v3_consent_consent_token_accept",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "consent_token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "consent[signature_image]",
          "in" : "formData",
          "description" : "Base64 of the signature image",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/consent/{consent_token}/reject" : {
      "post" : {
        "tags" : [ "Public: area to Reject Consent Requests that are created via SMS or Email" ],
        "summary" : "Rejects consent request that is found",
        "description" : "",
        "operationId" : "post_v3_consent_consent_token_reject",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "consent_token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/consent/{token}" : {
      "get" : {
        "tags" : [ "Public: area to accept/reject consents that are created via SMS or Email" ],
        "summary" : "Returns 200 if the consent request is present and not accepted/rejected.",
        "description" : "",
        "operationId" : "get_v3_consent_token",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/emr/groups/{group_id}/contacts/update-info-with-patient" : {
      "put" : {
        "tags" : [ "EMR Patient Contact Information" ],
        "summary" : "Update contact information using the current patient's information",
        "description" : "",
        "operationId" : "put_v3_emr_groups_group_id_contacts_update-info-with-patient",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/emr/groups/{group_id}/contacts/{contact_id}/associate" : {
      "post" : {
        "tags" : [ "EMR Patient Contact association" ],
        "summary" : "Associates an existing contact with an emr patient",
        "description" : "",
        "operationId" : "post_v3_emr_groups_group_id_contacts_contact_id_associate",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/emr/groups/{group_id}/patient" : {
      "get" : {
        "tags" : [ "EMR Context" ],
        "summary" : "Return patient context",
        "description" : "",
        "operationId" : "get_v3_emr_groups_group_id_patient",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/accept-unite-us-participation-agreements" : {
      "post" : {
        "tags" : [ "Groups: UniteUs Partcipation Agreements" ],
        "summary" : "Accept participation agreement for an organization.",
        "description" : "\n<p>Accepts the participation agreement for a group. A successful acceptance\nwill return a <code>201 CREATED</code> response to the client.</p>\n",
        "operationId" : "post_v3_groups_group_id_accept-unite-us-participation-agreements",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/activity-stream/events" : {
      "get" : {
        "tags" : [ "Groups: Timeline Events" ],
        "summary" : "Returns a list of events for the selected Contact.",
        "description" : "\n<p>Activity Stream or Timeline events are returned loosely based on the\nActivity Stream specification (<a\nhref=\"http://activitystrea.ms\">activitystrea.ms</a>).</p>\n\n<p>Available <code>verb</code> values include: <code>accept</code>,\n<code>add</code>, <code>assign</code>, <code>close</code>,\n<code>complete</code>, <code>create</code>, <code>delete</code>,\n<code>deny</code>, <code>join</code>, <code>leave</code>,\n<code>open</code>, <code>post</code>, <code>replace</code>,\n<code>retract</code>, <code>save</code>, <code>send</code>, and\n<code>update</code>.</p>\n\n<p>Use the verb, object, and target values to determine the event that\noccurred.</p>\n",
        "operationId" : "get_v3_groups_group_id_activity-stream_events",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/activity-stream/events/filter" : {
      "post" : {
        "tags" : [ "Groups: Filter Timeline Events" ],
        "summary" : "Returns a list of filtered events.",
        "description" : "\n<p>Filtered activity stream or timeline events are returned loosely based on\nthe Activity Stream specification (<a\nhref=\"http://activitystrea.ms\">activitystrea.ms</a>).</p>\n\n<p>Available <code>verb</code> values include: <code>accept</code>,\n<code>add</code>, <code>assign</code>, <code>close</code>,\n<code>complete</code>, <code>create</code>, <code>delete</code>,\n<code>deny</code>, <code>join</code>, <code>leave</code>,\n<code>open</code>, <code>post</code>, <code>replace</code>,\n<code>retract</code>, <code>save</code>, <code>send</code>, and\n<code>update</code>.</p>\n\n<p>Use the verb, object, and target values to determine the event that\noccurred.</p>\n",
        "operationId" : "post_v3_groups_group_id_activity-stream_events_filter",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[filter_names]",
          "in" : "formData",
          "description" : "Name of filter to be appliied",
          "required" : false,
          "type" : "string",
          "enum" : [ "client_updates", "closed_records", "notes", "record_updates", "network_updates", "care_team" ]
        }, {
          "name" : "page",
          "in" : "formData",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "formData",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "formData",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "formData",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/address-books/groups" : {
      "post" : {
        "tags" : [ "Address Book Groups" ],
        "summary" : "Create a new address book group profile.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_address-books_groups",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "phone_numbers[phone_number][phone_number]",
          "in" : "formData",
          "description" : "The phone number itself. Minimum 7 digits, only numbers will be stored.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group[name]",
          "in" : "formData",
          "description" : "The name of the address book group.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[description]",
          "in" : "formData",
          "description" : "Description of the address book group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[founded_year]",
          "in" : "formData",
          "description" : "The year the group was founded.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "group[status]",
          "in" : "formData",
          "description" : "Status of the address book group",
          "required" : false,
          "type" : "string",
          "enum" : [ "draft", "in_review", "published", "archived" ]
        }, {
          "name" : "group[primary_contact_name]",
          "in" : "formData",
          "description" : "Primary contact name of the address book group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email_addresses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "addresses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "phone_numbers[phone_number][is_primary]",
          "in" : "formData",
          "description" : "Is this phone number the group's primary group number",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_numbers[phone_number][phone_type]",
          "in" : "formData",
          "description" : "Type of phone number.",
          "required" : false,
          "type" : "string",
          "enum" : [ "work", "mobile", "fax", "unknown" ]
        }, {
          "name" : "phone_numbers[phone_number][can_sms]",
          "in" : "formData",
          "description" : "Can this phone number receive SMS?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_numbers[phone_number][country_code]",
          "in" : "formData",
          "description" : "Country code for the phone number. Defaults to <tt>1</tt>, if not specified.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schedule[week]",
          "in" : "formData",
          "description" : "The hours of operation for the provided day",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "service_types",
          "in" : "formData",
          "description" : "The uuids of the service type(s)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/address-books/groups/{id}" : {
      "put" : {
        "tags" : [ "Address Book Groups" ],
        "summary" : "Update an address book group profile.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_address-books_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "phone_numbers[phone_number][phone_number]",
          "in" : "formData",
          "description" : "The phone number itself. Minimum 7 digits, only numbers will be stored.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group[name]",
          "in" : "formData",
          "description" : "The name of the address book group.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[description]",
          "in" : "formData",
          "description" : "Description of the address book group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[founded_year]",
          "in" : "formData",
          "description" : "The year the group was founded.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "group[status]",
          "in" : "formData",
          "description" : "Status of the address book group",
          "required" : false,
          "type" : "string",
          "enum" : [ "draft", "in_review", "published", "archived" ]
        }, {
          "name" : "group[primary_contact_name]",
          "in" : "formData",
          "description" : "Primary contact name of the address book group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email_addresses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "addresses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "phone_numbers[phone_number][is_primary]",
          "in" : "formData",
          "description" : "Is this phone number the group's primary group number",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_numbers[phone_number][phone_type]",
          "in" : "formData",
          "description" : "Type of phone number.",
          "required" : false,
          "type" : "string",
          "enum" : [ "work", "mobile", "fax", "unknown" ]
        }, {
          "name" : "phone_numbers[phone_number][can_sms]",
          "in" : "formData",
          "description" : "Can this phone number receive SMS?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_numbers[phone_number][country_code]",
          "in" : "formData",
          "description" : "Country code for the phone number. Defaults to <tt>1</tt>, if not specified.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schedule[week]",
          "in" : "formData",
          "description" : "The hours of operation for the provided day",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "service_types",
          "in" : "formData",
          "description" : "The uuids of the service type(s)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Address Book Groups" ],
        "summary" : "Update an address book group profile.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_address-books_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "phone_numbers[phone_number][phone_number]",
          "in" : "formData",
          "description" : "The phone number itself. Minimum 7 digits, only numbers will be stored.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group[name]",
          "in" : "formData",
          "description" : "The name of the address book group.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[description]",
          "in" : "formData",
          "description" : "Description of the address book group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[founded_year]",
          "in" : "formData",
          "description" : "The year the group was founded.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "group[status]",
          "in" : "formData",
          "description" : "Status of the address book group",
          "required" : false,
          "type" : "string",
          "enum" : [ "draft", "in_review", "published", "archived" ]
        }, {
          "name" : "group[primary_contact_name]",
          "in" : "formData",
          "description" : "Primary contact name of the address book group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email_addresses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "addresses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "phone_numbers[phone_number][is_primary]",
          "in" : "formData",
          "description" : "Is this phone number the group's primary group number",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_numbers[phone_number][phone_type]",
          "in" : "formData",
          "description" : "Type of phone number.",
          "required" : false,
          "type" : "string",
          "enum" : [ "work", "mobile", "fax", "unknown" ]
        }, {
          "name" : "phone_numbers[phone_number][can_sms]",
          "in" : "formData",
          "description" : "Can this phone number receive SMS?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_numbers[phone_number][country_code]",
          "in" : "formData",
          "description" : "Country code for the phone number. Defaults to <tt>1</tt>, if not specified.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schedule[week]",
          "in" : "formData",
          "description" : "The hours of operation for the provided day",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "service_types",
          "in" : "formData",
          "description" : "The uuids of the service type(s)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests" : {
      "get" : {
        "tags" : [ "Groups: Assistance Requests" ],
        "summary" : "Returns a list of assistance requests sent to selected Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_assistance-requests",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type IDs to filter results by.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/accepted" : {
      "get" : {
        "tags" : [ "Groups: Assistance Requests" ],
        "summary" : "Returns a list of assistance requests sent to selected Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_assistance-requests_accepted",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type IDs to filter results by.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/archived" : {
      "get" : {
        "tags" : [ "Groups: Assistance Requests" ],
        "summary" : "Returns a list of assistance requests sent to selected Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_assistance-requests_archived",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type IDs to filter results by.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/closed" : {
      "get" : {
        "tags" : [ "Groups: Assistance Requests" ],
        "summary" : "Returns a list of assistance requests sent to selected Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_assistance-requests_closed",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type IDs to filter results by.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/config" : {
      "get" : {
        "tags" : [ "Groups: Assistance Request Form Config" ],
        "summary" : "Shows the assistance request form configuration for the selected group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_assistance-requests_config",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/in-review" : {
      "get" : {
        "tags" : [ "Groups: Assistance Requests" ],
        "summary" : "Returns a list of assistance requests sent to selected Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_assistance-requests_in-review",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type IDs to filter results by.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/pending" : {
      "get" : {
        "tags" : [ "Groups: Assistance Requests" ],
        "summary" : "Returns a list of assistance requests sent to selected Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_assistance-requests_pending",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type IDs to filter results by.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/{assistance_request_id}/activity-stream/events" : {
      "get" : {
        "tags" : [ "Assistance Requests: Timeline Events" ],
        "summary" : "Returns a list of events for the selected Contact.",
        "description" : "\n<p>Activity Stream or Timeline events are returned loosely based on the\nActivity Stream specification (<a\nhref=\"http://activitystrea.ms\">activitystrea.ms</a>).</p>\n\n<p>Available <code>verb</code> values include: <code>accept</code>,\n<code>add</code>, <code>assign</code>, <code>close</code>,\n<code>complete</code>, <code>create</code>, <code>delete</code>,\n<code>deny</code>, <code>join</code>, <code>leave</code>,\n<code>open</code>, <code>post</code>, <code>replace</code>,\n<code>retract</code>, <code>save</code>, <code>send</code>, and\n<code>update</code>.</p>\n\n<p>Use the verb, object, and target values to determine the event that\noccurred.</p>\n",
        "operationId" : "get_v3_groups_group_id_assistance-requests_assistance_request_id_activity-stream_events",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "assistance_request_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/{assistance_request_id}/activity-stream/events/filter" : {
      "post" : {
        "tags" : [ "Assistance Requests: Filter Timeline Events" ],
        "summary" : "Returns a list of filtered events.",
        "description" : "\n<p>Filtered activity stream or timeline events are returned loosely based on\nthe Activity Stream specification (<a\nhref=\"http://activitystrea.ms\">activitystrea.ms</a>).</p>\n\n<p>Available <code>verb</code> values include: <code>accept</code>,\n<code>add</code>, <code>assign</code>, <code>close</code>,\n<code>complete</code>, <code>create</code>, <code>delete</code>,\n<code>deny</code>, <code>join</code>, <code>leave</code>,\n<code>open</code>, <code>post</code>, <code>replace</code>,\n<code>retract</code>, <code>save</code>, <code>send</code>, and\n<code>update</code>.</p>\n\n<p>Use the verb, object, and target values to determine the event that\noccurred.</p>\n",
        "operationId" : "post_v3_groups_group_id_assistance-requests_assistance_request_id_activity-stream_events_filter",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "assistance_request_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[filter_names]",
          "in" : "formData",
          "description" : "Name of filter to be appliied",
          "required" : false,
          "type" : "string",
          "enum" : [ "client_updates", "closed_records", "notes", "record_updates", "network_updates", "care_team" ]
        }, {
          "name" : "page",
          "in" : "formData",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "formData",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "formData",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "formData",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/{assistance_request_id}/close" : {
      "put" : {
        "tags" : [ "Apiv3groupsassistance requestsclosings" ],
        "summary" : "Set the selected case to closed and create a closing node",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_assistance-requests_assistance_request_id_close",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "exited_at",
          "in" : "formData",
          "description" : "The date the assistance request was closed",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "outcome_id",
          "in" : "formData",
          "description" : "The id of the outcome this closing is associated with",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resolved",
          "in" : "formData",
          "description" : "The status of the case",
          "required" : true,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "assistance_request_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "note",
          "in" : "formData",
          "description" : "A note pertaining to the closing",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Apiv3groupsassistance requestsclosings" ],
        "summary" : "Set the selected case to closed and create a closing node",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_assistance-requests_assistance_request_id_close",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "exited_at",
          "in" : "formData",
          "description" : "The date the assistance request was closed",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "outcome_id",
          "in" : "formData",
          "description" : "The id of the outcome this closing is associated with",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resolved",
          "in" : "formData",
          "description" : "The status of the case",
          "required" : true,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "assistance_request_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "note",
          "in" : "formData",
          "description" : "A note pertaining to the closing",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/{assistance_request_id}/form" : {
      "get" : {
        "tags" : [ "Groups -> Assistance Requests: Forms" ],
        "summary" : "Returns form details with any existing responses spliced into the question.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_assistance-requests_assistance_request_id_form",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "assistance_request_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/{assistance_request_id}/forms" : {
      "get" : {
        "tags" : [ "Groups -> Assistance Requests: Forms" ],
        "summary" : "Returns forms available to the selected assistance request.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_assistance-requests_assistance_request_id_forms",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "assistance_request_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/assistance-requests/{id}" : {
      "get" : {
        "tags" : [ "Groups: Assistance Requests" ],
        "summary" : "Returns details for the selected assistance request.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_assistance-requests_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/cases" : {
      "get" : {
        "tags" : [ "Groups: Cases" ],
        "summary" : "Returns a list of Cases serviced by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_cases",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "closed",
          "in" : "query",
          "description" : "Boolean value to hide or show only closed cases. Omit for open and closed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "primary_data_source",
          "in" : "query",
          "description" : "Boolean to disable performance optimization for retrieving service cases.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[groups]",
          "in" : "query",
          "description" : "Array of group uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[networks]",
          "in" : "query",
          "description" : "Array of network uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[programs]",
          "in" : "query",
          "description" : "Array of program uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[care_coordinator_users]",
          "in" : "query",
          "description" : "Array of user uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[primary_worker_users]",
          "in" : "query",
          "description" : "Array of user uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[resolved]",
          "in" : "query",
          "description" : "Boolean value - true for resolved, false for unresolved. Omit for all.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[network_inclusion_scope]",
          "in" : "query",
          "description" : "Cases in or out of network. Omit for both.",
          "required" : false,
          "type" : "string",
          "enum" : [ "in", "out" ]
        }, {
          "name" : "q[provider_scope]",
          "in" : "query",
          "description" : "Case manged by a network or group. Omit for both.",
          "required" : false,
          "type" : "string",
          "enum" : [ "group", "network" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/cases/closed" : {
      "get" : {
        "tags" : [ "Groups: Cases" ],
        "summary" : "Returns a list of Cases serviced by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_cases_closed",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "closed",
          "in" : "query",
          "description" : "Boolean value to hide or show only closed cases. Omit for open and closed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "primary_data_source",
          "in" : "query",
          "description" : "Boolean to disable performance optimization for retrieving service cases.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[groups]",
          "in" : "query",
          "description" : "Array of group uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[networks]",
          "in" : "query",
          "description" : "Array of network uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[programs]",
          "in" : "query",
          "description" : "Array of program uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[care_coordinator_users]",
          "in" : "query",
          "description" : "Array of user uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[primary_worker_users]",
          "in" : "query",
          "description" : "Array of user uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[resolved]",
          "in" : "query",
          "description" : "Boolean value - true for resolved, false for unresolved. Omit for all.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[network_inclusion_scope]",
          "in" : "query",
          "description" : "Cases in or out of network. Omit for both.",
          "required" : false,
          "type" : "string",
          "enum" : [ "in", "out" ]
        }, {
          "name" : "q[provider_scope]",
          "in" : "query",
          "description" : "Case manged by a network or group. Omit for both.",
          "required" : false,
          "type" : "string",
          "enum" : [ "group", "network" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/cases/converted" : {
      "get" : {
        "tags" : [ "Groups: Cases Converted from Sent Referrals" ],
        "summary" : "Returns a list of Cases converted from Referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_cases_converted",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "closed",
          "in" : "query",
          "description" : "Boolean value to hide or show only closed cases. Omit for open and closed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[referral_sender_users]",
          "in" : "query",
          "description" : "Array of referral sending user uuids.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type uuids.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[resolved]",
          "in" : "query",
          "description" : "Boolean value - true for resolved, false for unresolved. Omit for all.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/cases/open" : {
      "get" : {
        "tags" : [ "Groups: Cases" ],
        "summary" : "Returns a list of Cases serviced by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_cases_open",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "closed",
          "in" : "query",
          "description" : "Boolean value to hide or show only closed cases. Omit for open and closed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "primary_data_source",
          "in" : "query",
          "description" : "Boolean to disable performance optimization for retrieving service cases.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[groups]",
          "in" : "query",
          "description" : "Array of group uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[networks]",
          "in" : "query",
          "description" : "Array of network uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[programs]",
          "in" : "query",
          "description" : "Array of program uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[care_coordinator_users]",
          "in" : "query",
          "description" : "Array of user uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[primary_worker_users]",
          "in" : "query",
          "description" : "Array of user uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[resolved]",
          "in" : "query",
          "description" : "Boolean value - true for resolved, false for unresolved. Omit for all.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[network_inclusion_scope]",
          "in" : "query",
          "description" : "Cases in or out of network. Omit for both.",
          "required" : false,
          "type" : "string",
          "enum" : [ "in", "out" ]
        }, {
          "name" : "q[provider_scope]",
          "in" : "query",
          "description" : "Case manged by a network or group. Omit for both.",
          "required" : false,
          "type" : "string",
          "enum" : [ "group", "network" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/cases/resolved" : {
      "get" : {
        "tags" : [ "Groups: Cases" ],
        "summary" : "Returns a list of Cases serviced by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_cases_resolved",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "closed",
          "in" : "query",
          "description" : "Boolean value to hide or show only closed cases. Omit for open and closed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "primary_data_source",
          "in" : "query",
          "description" : "Boolean to disable performance optimization for retrieving service cases.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[groups]",
          "in" : "query",
          "description" : "Array of group uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[networks]",
          "in" : "query",
          "description" : "Array of network uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[programs]",
          "in" : "query",
          "description" : "Array of program uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[care_coordinator_users]",
          "in" : "query",
          "description" : "Array of user uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[primary_worker_users]",
          "in" : "query",
          "description" : "Array of user uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[resolved]",
          "in" : "query",
          "description" : "Boolean value - true for resolved, false for unresolved. Omit for all.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[network_inclusion_scope]",
          "in" : "query",
          "description" : "Cases in or out of network. Omit for both.",
          "required" : false,
          "type" : "string",
          "enum" : [ "in", "out" ]
        }, {
          "name" : "q[provider_scope]",
          "in" : "query",
          "description" : "Case manged by a network or group. Omit for both.",
          "required" : false,
          "type" : "string",
          "enum" : [ "group", "network" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/cases/unresolved" : {
      "get" : {
        "tags" : [ "Groups: Cases" ],
        "summary" : "Returns a list of Cases serviced by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_cases_unresolved",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "closed",
          "in" : "query",
          "description" : "Boolean value to hide or show only closed cases. Omit for open and closed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "primary_data_source",
          "in" : "query",
          "description" : "Boolean to disable performance optimization for retrieving service cases.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[service_types]",
          "in" : "query",
          "description" : "Array of service type uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[groups]",
          "in" : "query",
          "description" : "Array of group uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[networks]",
          "in" : "query",
          "description" : "Array of network uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[programs]",
          "in" : "query",
          "description" : "Array of program uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[care_coordinator_users]",
          "in" : "query",
          "description" : "Array of user uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[primary_worker_users]",
          "in" : "query",
          "description" : "Array of user uuids on which to filter.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[resolved]",
          "in" : "query",
          "description" : "Boolean value - true for resolved, false for unresolved. Omit for all.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[network_inclusion_scope]",
          "in" : "query",
          "description" : "Cases in or out of network. Omit for both.",
          "required" : false,
          "type" : "string",
          "enum" : [ "in", "out" ]
        }, {
          "name" : "q[provider_scope]",
          "in" : "query",
          "description" : "Case manged by a network or group. Omit for both.",
          "required" : false,
          "type" : "string",
          "enum" : [ "group", "network" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/cases/{service_case_id}/forms/{form_id}/response" : {
      "put" : {
        "tags" : [ "Groups: Service Case Contact Respond to Form" ],
        "summary" : "Upserts a contact's response to the specified form/assessment.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_cases_service_case_id_forms_form_id_response",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups: Service Case Contact Respond to Form" ],
        "summary" : "Upserts a contact's response to the specified form/assessment.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_cases_service_case_id_forms_form_id_response",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/cases/{service_case_id}/forms/{id}" : {
      "get" : {
        "tags" : [ "Groups: Service Case Contact Forms" ],
        "summary" : "Returns form details with any existing responses spliced into the question.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_cases_service_case_id_forms_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Returns a list of accessible contacts for the selected Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Creates a new contact for the group and, optionally, network.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact[last_name]",
          "in" : "formData",
          "description" : "Contact's last name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact[first_name]",
          "in" : "formData",
          "description" : "Contact's first name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "formData",
          "description" : "The identifier of the Network the contact is participating in.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will cause the API to attempt to transfer data from the assistance request requestor to the Contact.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[email]",
          "in" : "formData",
          "description" : "Contact's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[date_of_birth]",
          "in" : "formData",
          "description" : "Unix (epoch) timestamp representing the contact's date of birth.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[gender]",
          "in" : "formData",
          "description" : "Contact's specified gender.",
          "required" : false,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "contact[citizenship]",
          "in" : "formData",
          "description" : "Contact's specified citizenship.",
          "required" : false,
          "type" : "string",
          "enum" : [ "us-citizen", "us-national", "lawful-permanent-resident", "other", "undisclosed" ]
        }, {
          "name" : "contact[ethnicity]",
          "in" : "formData",
          "description" : "Contact's specified ethnicity.",
          "required" : false,
          "type" : "string",
          "enum" : [ "hispanic-or-latino", "not-hispanic-or-latino", "undisclosed" ]
        }, {
          "name" : "contact[marital_status]",
          "in" : "formData",
          "description" : "Contact's specified marital status.",
          "required" : false,
          "type" : "string",
          "enum" : [ "divorced", "domestic_partner", "married-civil-union", "single/never-married", "separated", "undisclosed", "widowed" ]
        }, {
          "name" : "contact[race]",
          "in" : "formData",
          "description" : "Contact's specified race.",
          "required" : false,
          "type" : "string",
          "enum" : [ "american-indian-alaska-native", "asian", "black-african-american", "native-hawaiian-or-pacific-islander", "other-race", "undisclosed", "white" ]
        }, {
          "name" : "contact[email_address]",
          "in" : "formData",
          "description" : "Contact's primary email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[preferred_first_name]",
          "in" : "formData",
          "description" : "Contact's preferred first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[title]",
          "in" : "formData",
          "description" : "Contact's title.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Mr.", "Miss", "Mrs.", "Ms.", "Dr." ]
        }, {
          "name" : "contact[middle_name_initial]",
          "in" : "formData",
          "description" : "Contact's middle name or initial.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[suffix]",
          "in" : "formData",
          "description" : "Contact's suffix.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Jr.", "Sr.", "III", "IV", "V", "Esq.", "Ph.D" ]
        }, {
          "name" : "contact[nicknames]",
          "in" : "formData",
          "description" : "Contact's nicknames.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[preferred_communication_method]",
          "in" : "formData",
          "description" : "Preferred communication method",
          "required" : false,
          "type" : "string",
          "enum" : [ "phone_call", "sms", "email", "no_preference" ]
        }, {
          "name" : "contact[preferred_communication_time_of_day]",
          "in" : "formData",
          "description" : "Preferred communication time of day",
          "required" : false,
          "type" : "string",
          "enum" : [ "any_time", "morning", "afternoon", "evening" ]
        }, {
          "name" : "contact[addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[email_addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[phone_numbers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[military][affiliation]",
          "in" : "formData",
          "description" : "Military affiliation",
          "required" : false,
          "type" : "string",
          "enum" : [ "military_member_or_veteran", "spouse", "widow", "family_member", "caregiver", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][current_status]",
          "in" : "formData",
          "description" : "Current military status",
          "required" : false,
          "type" : "string",
          "enum" : [ "active_duty", "national_guard", "reserve", "retiree", "veteran", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][currently_transitioning]",
          "in" : "formData",
          "description" : "Is the contact currently transitioning?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes_12mos_before", "yes_12mos_after", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][at_least_one_day_active_duty]",
          "in" : "formData",
          "description" : "Has at least one day of active duty outside of basic training?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][branch]",
          "in" : "formData",
          "description" : "Branch of service",
          "required" : false,
          "type" : "string",
          "enum" : [ "air_force", "army", "coast_guard", "marines", "navy", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_era]",
          "in" : "formData",
          "description" : "Service era",
          "required" : false,
          "type" : "string",
          "enum" : [ "post_911", "persian_gulf", "post_vietnam", "vietnam", "post_korean", "korean_war", "pre_korean", "ww2", "merchant_marine", "ww1", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][entry_date]",
          "in" : "formData",
          "description" : "Date of entry",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][exit_date]",
          "in" : "formData",
          "description" : "Date of exit",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][deployed]",
          "in" : "formData",
          "description" : "Deployed?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][deployment_starts_at]",
          "in" : "formData",
          "description" : "Deployment start date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][deployment_ends_at]",
          "in" : "formData",
          "description" : "Deployment end date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][discharge_type]",
          "in" : "formData",
          "description" : "Discharge type",
          "required" : false,
          "type" : "string",
          "enum" : [ "honorable", "general", "other_than_honorable", "bad_conduct", "dishonorable", "uncharacterized", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][discharged_due_to_disability]",
          "in" : "formData",
          "description" : "Discharged or retired from military service for a disability incurred in the line of duty?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_connected_disability]",
          "in" : "formData",
          "description" : "Has VA-rated Service-Connected Disability?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_connected_disability_rating]",
          "in" : "formData",
          "description" : "Service-Connected Disability Rating",
          "required" : false,
          "type" : "string",
          "enum" : [ "0", "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][proof_of_veteran_status]",
          "in" : "formData",
          "description" : "Have proof of veteran status?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][proof_type]",
          "in" : "formData",
          "description" : "Proof type",
          "required" : false,
          "type" : "string",
          "enum" : [ "dd214", "va_id", "statement_of_service", "retiree_id", "drivers_license", "military_id", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[insurance_ids]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/filtered/primary-workers/me" : {
      "get" : {
        "tags" : [ "Contacts: Filter by Primary Worker" ],
        "summary" : "Returns a list of accessible contacts for which the specified user is the primary worker.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_filtered_primary-workers_me",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/filtered/primary-workers/{user_id}" : {
      "get" : {
        "tags" : [ "Contacts: Filter by Primary Worker" ],
        "summary" : "Returns a list of accessible contacts for which the specified user is the primary worker.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_filtered_primary-workers_user_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/with-intakes" : {
      "get" : {
        "tags" : [ "Contacts with Intakes" ],
        "summary" : "Returns a list of accessible contacts with intakes for the selected Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_with-intakes",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/activity-stream/events" : {
      "get" : {
        "tags" : [ "Contacts: Timeline Events" ],
        "summary" : "Returns a list of events for the selected Contact.",
        "description" : "\n<p>Activity Stream or Timeline events are returned loosely based on the\nActivity Stream specification (<a\nhref=\"http://activitystrea.ms\">activitystrea.ms</a>).</p>\n\n<p>Available <code>verb</code> values include: <code>accept</code>,\n<code>add</code>, <code>assign</code>, <code>close</code>,\n<code>complete</code>, <code>create</code>, <code>delete</code>,\n<code>deny</code>, <code>join</code>, <code>leave</code>,\n<code>open</code>, <code>post</code>, <code>replace</code>,\n<code>retract</code>, <code>save</code>, <code>send</code>, and\n<code>update</code>.</p>\n\n<p>Use the verb, object, and target values to determine the event that\noccurred.</p>\n",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_activity-stream_events",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/activity-stream/events/filter" : {
      "post" : {
        "tags" : [ "Contacts: Filter Timeline Events" ],
        "summary" : "Returns a list of filtered events.",
        "description" : "\n<p>Filtered activity stream or timeline events are returned loosely based on\nthe Activity Stream specification (<a\nhref=\"http://activitystrea.ms\">activitystrea.ms</a>).</p>\n\n<p>Available <code>verb</code> values include: <code>accept</code>,\n<code>add</code>, <code>assign</code>, <code>close</code>,\n<code>complete</code>, <code>create</code>, <code>delete</code>,\n<code>deny</code>, <code>join</code>, <code>leave</code>,\n<code>open</code>, <code>post</code>, <code>replace</code>,\n<code>retract</code>, <code>save</code>, <code>send</code>, and\n<code>update</code>.</p>\n\n<p>Use the verb, object, and target values to determine the event that\noccurred.</p>\n",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_activity-stream_events_filter",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[filter_names]",
          "in" : "formData",
          "description" : "Name of filter to be appliied",
          "required" : false,
          "type" : "string",
          "enum" : [ "client_updates", "closed_records", "notes", "record_updates", "network_updates", "care_team" ]
        }, {
          "name" : "page",
          "in" : "formData",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "formData",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "formData",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "formData",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/addresses" : {
      "post" : {
        "tags" : [ "Contacts: Addresses" ],
        "summary" : "Add a new address to the selected Contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_addresses",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "address[state]",
          "in" : "formData",
          "description" : "State or province for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[postal_code]",
          "in" : "formData",
          "description" : "Postal or ZIP code for the address. Minimum 5 characters in length, maximum 15.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[city]",
          "in" : "formData",
          "description" : "City or town of the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[address_type]",
          "in" : "formData",
          "description" : "Type of address.",
          "required" : true,
          "type" : "string",
          "enum" : [ "home", "mailing", "work", "unknown" ]
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[line_1]",
          "in" : "formData",
          "description" : "Address line 1",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[line_2]",
          "in" : "formData",
          "description" : "Additional address details, ex. apartment, suite, etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[country]",
          "in" : "formData",
          "description" : "Country for the address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[is_mailing_address]",
          "in" : "formData",
          "description" : "Is this a mailing address.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/addresses/{id}" : {
      "put" : {
        "tags" : [ "Contacts: Addresses" ],
        "summary" : "Update an existing Contact address.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "address[state]",
          "in" : "formData",
          "description" : "State or province for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[postal_code]",
          "in" : "formData",
          "description" : "Postal or ZIP code for the address. Minimum 5 characters in length, maximum 15.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[city]",
          "in" : "formData",
          "description" : "City or town of the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[address_type]",
          "in" : "formData",
          "description" : "Type of address.",
          "required" : true,
          "type" : "string",
          "enum" : [ "home", "mailing", "work", "unknown" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[line_1]",
          "in" : "formData",
          "description" : "Address line 1",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[line_2]",
          "in" : "formData",
          "description" : "Additional address details, ex. apartment, suite, etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[country]",
          "in" : "formData",
          "description" : "Country for the address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[is_mailing_address]",
          "in" : "formData",
          "description" : "Is this a mailing address.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Contacts: Addresses" ],
        "summary" : "Remove an existing Contact address.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Contacts: Addresses" ],
        "summary" : "Update an existing Contact address.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "address[state]",
          "in" : "formData",
          "description" : "State or province for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[postal_code]",
          "in" : "formData",
          "description" : "Postal or ZIP code for the address. Minimum 5 characters in length, maximum 15.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[city]",
          "in" : "formData",
          "description" : "City or town of the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[address_type]",
          "in" : "formData",
          "description" : "Type of address.",
          "required" : true,
          "type" : "string",
          "enum" : [ "home", "mailing", "work", "unknown" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[line_1]",
          "in" : "formData",
          "description" : "Address line 1",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[line_2]",
          "in" : "formData",
          "description" : "Additional address details, ex. apartment, suite, etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[country]",
          "in" : "formData",
          "description" : "Country for the address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[is_mailing_address]",
          "in" : "formData",
          "description" : "Is this a mailing address.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/care-coordinators" : {
      "put" : {
        "tags" : [ "Care Coordinators" ],
        "summary" : "Updates the assigned Care Coordinator to a Contact",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_care-coordinators",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Care Coordinators" ],
        "summary" : "Updates the assigned Care Coordinator to a Contact",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_care-coordinators",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/care-team/members" : {
      "get" : {
        "tags" : [ "Contact: Care Team" ],
        "summary" : "Returns the care team members for the selected contact.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_care-team_members",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Contact: Care Team" ],
        "summary" : "Create a new ad-hoc Care Team member for the selected contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_care-team_members",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "member[last_name]",
          "in" : "formData",
          "description" : "Team member's last name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member[first_name]",
          "in" : "formData",
          "description" : "Team member's first name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member[email]",
          "in" : "formData",
          "description" : "Team member's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "member[relation_to_contact]",
          "in" : "formData",
          "description" : "Team member's relation to the contact.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "member[addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "member[email_addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "member[phone_numbers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/care-team/members/{id}" : {
      "put" : {
        "tags" : [ "Contact: Care Team" ],
        "summary" : "Updates an existing ad-hoc Care Team member for the selected contact.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_care-team_members_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member[first_name]",
          "in" : "formData",
          "description" : "Team member's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "member[last_name]",
          "in" : "formData",
          "description" : "Team member's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "member[email]",
          "in" : "formData",
          "description" : "Team member's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "member[relation_to_contact]",
          "in" : "formData",
          "description" : "Team member's relation to the contact.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "member[addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "member[email_addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "member[phone_numbers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Contact: Care Team" ],
        "summary" : "Removes an ad-hoc Care Team member from the selected contact.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_care-team_members_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Contact: Care Team" ],
        "summary" : "Updates an existing ad-hoc Care Team member for the selected contact.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_care-team_members_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member[first_name]",
          "in" : "formData",
          "description" : "Team member's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "member[last_name]",
          "in" : "formData",
          "description" : "Team member's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "member[email]",
          "in" : "formData",
          "description" : "Team member's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "member[relation_to_contact]",
          "in" : "formData",
          "description" : "Team member's relation to the contact.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "member[addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "member[email_addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "member[phone_numbers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/care-team/members/{member_id}/addresses" : {
      "post" : {
        "tags" : [ "Care Team Members: Addresses" ],
        "summary" : "Add a new address to the selected Care Team Member.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_addresses",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "address[country]",
          "in" : "formData",
          "description" : "Country for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[state]",
          "in" : "formData",
          "description" : "State or province for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[postal_code]",
          "in" : "formData",
          "description" : "Postal or ZIP code for the address. Minimum 5 characters in length, maximum 15.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[city]",
          "in" : "formData",
          "description" : "City or town of the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[address_type]",
          "in" : "formData",
          "description" : "Type of address.",
          "required" : true,
          "type" : "string",
          "enum" : [ "home", "mailing", "work", "unknown" ]
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[line_1]",
          "in" : "formData",
          "description" : "Address line 1",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[line_2]",
          "in" : "formData",
          "description" : "Additional address details, ex. apartment, suite, etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[is_mailing_address]",
          "in" : "formData",
          "description" : "Is this a mailing address.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/care-team/members/{member_id}/addresses/{id}" : {
      "put" : {
        "tags" : [ "Care Team Members: Addresses" ],
        "summary" : "Update an existing Care Team Member address.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "address[country]",
          "in" : "formData",
          "description" : "Country for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[state]",
          "in" : "formData",
          "description" : "State or province for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[postal_code]",
          "in" : "formData",
          "description" : "Postal or ZIP code for the address. Minimum 5 characters in length, maximum 15.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[city]",
          "in" : "formData",
          "description" : "City or town of the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[address_type]",
          "in" : "formData",
          "description" : "Type of address.",
          "required" : true,
          "type" : "string",
          "enum" : [ "home", "mailing", "work", "unknown" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[line_1]",
          "in" : "formData",
          "description" : "Address line 1",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[line_2]",
          "in" : "formData",
          "description" : "Additional address details, ex. apartment, suite, etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[is_mailing_address]",
          "in" : "formData",
          "description" : "Is this a mailing address.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Care Team Members: Addresses" ],
        "summary" : "Remove an existing Care Team Member address.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Care Team Members: Addresses" ],
        "summary" : "Update an existing Care Team Member address.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "address[country]",
          "in" : "formData",
          "description" : "Country for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[state]",
          "in" : "formData",
          "description" : "State or province for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[postal_code]",
          "in" : "formData",
          "description" : "Postal or ZIP code for the address. Minimum 5 characters in length, maximum 15.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[city]",
          "in" : "formData",
          "description" : "City or town of the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[address_type]",
          "in" : "formData",
          "description" : "Type of address.",
          "required" : true,
          "type" : "string",
          "enum" : [ "home", "mailing", "work", "unknown" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address[line_1]",
          "in" : "formData",
          "description" : "Address line 1",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[line_2]",
          "in" : "formData",
          "description" : "Additional address details, ex. apartment, suite, etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address[is_mailing_address]",
          "in" : "formData",
          "description" : "Is this a mailing address.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/care-team/members/{member_id}/email-addresses" : {
      "post" : {
        "tags" : [ "Care Team Members: Email Addresses" ],
        "summary" : "Add a new email address to the selected Care Team Member.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_email-addresses",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "email_address[email_address]",
          "in" : "formData",
          "description" : "A valid email address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email_address[is_primary]",
          "in" : "formData",
          "description" : "Is this email address the primary one for the care team member.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/care-team/members/{member_id}/email-addresses/{id}" : {
      "put" : {
        "tags" : [ "Care Team Members: Email Addresses" ],
        "summary" : "Update an existing Care Team Member email address.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_email-addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "email_address[email_address]",
          "in" : "formData",
          "description" : "A valid email address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email_address[is_primary]",
          "in" : "formData",
          "description" : "Is this email address the primary one for the care team member.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Care Team Members: Email Addresses" ],
        "summary" : "Remove an existing Care Team Member email address.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_email-addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Care Team Members: Email Addresses" ],
        "summary" : "Update an existing Care Team Member email address.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_email-addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "email_address[email_address]",
          "in" : "formData",
          "description" : "A valid email address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email_address[is_primary]",
          "in" : "formData",
          "description" : "Is this email address the primary one for the care team member.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/care-team/members/{member_id}/phone-numbers" : {
      "post" : {
        "tags" : [ "Care Team Members: Phone Numbers" ],
        "summary" : "Add a new phone number to the selected Care Team Member.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_phone-numbers",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "phone_number[phone_number]",
          "in" : "formData",
          "description" : "The phone number itself. Minimum 7 digits, only numbers will be stored.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "phone_number[is_primary]",
          "in" : "formData",
          "description" : "Is this phone number the care team member's primary contact number.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[phone_type]",
          "in" : "formData",
          "description" : "Type of phone number.",
          "required" : false,
          "type" : "string",
          "enum" : [ "mobile", "home", "work", "fax", "unknown" ]
        }, {
          "name" : "phone_number[can_sms]",
          "in" : "formData",
          "description" : "Can this phone number receive SMS?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[country_code]",
          "in" : "formData",
          "description" : "Country code for the phone number. Defaults to <tt>1</tt>, if not specified.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/care-team/members/{member_id}/phone-numbers/{id}" : {
      "put" : {
        "tags" : [ "Care Team Members: Phone Numbers" ],
        "summary" : "Update an existing Care Team Member phone number.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_phone-numbers_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "phone_number[phone_number]",
          "in" : "formData",
          "description" : "The phone number itself. Minimum 7 digits, only numbers will be stored.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "phone_number[is_primary]",
          "in" : "formData",
          "description" : "Is this phone number the care team member's primary contact number.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[phone_type]",
          "in" : "formData",
          "description" : "Type of phone number.",
          "required" : false,
          "type" : "string",
          "enum" : [ "mobile", "home", "work", "fax", "unknown" ]
        }, {
          "name" : "phone_number[can_sms]",
          "in" : "formData",
          "description" : "Can this phone number receive SMS?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[country_code]",
          "in" : "formData",
          "description" : "Country code for the phone number. Defaults to <tt>1</tt>, if not specified.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Care Team Members: Phone Numbers" ],
        "summary" : "Remove an existing Care Team Member phone number.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_phone-numbers_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Care Team Members: Phone Numbers" ],
        "summary" : "Update an existing Care Team Member phone number.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_care-team_members_member_id_phone-numbers_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "phone_number[phone_number]",
          "in" : "formData",
          "description" : "The phone number itself. Minimum 7 digits, only numbers will be stored.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "phone_number[is_primary]",
          "in" : "formData",
          "description" : "Is this phone number the care team member's primary contact number.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[phone_type]",
          "in" : "formData",
          "description" : "Type of phone number.",
          "required" : false,
          "type" : "string",
          "enum" : [ "mobile", "home", "work", "fax", "unknown" ]
        }, {
          "name" : "phone_number[can_sms]",
          "in" : "formData",
          "description" : "Can this phone number receive SMS?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[country_code]",
          "in" : "formData",
          "description" : "Country code for the phone number. Defaults to <tt>1</tt>, if not specified.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/cases" : {
      "get" : {
        "tags" : [ "Cases" ],
        "summary" : "Return cases for the selected contact.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_cases",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Cases" ],
        "summary" : "Create a new case for the selected contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_cases",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "program[program_id]",
          "in" : "formData",
          "description" : "The identifier of the Program the contact and case is being enrolled in.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_type_id",
          "in" : "formData",
          "description" : "The identifier of the requested service type (need).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will connect the originating assistance request to the case.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_case[description]",
          "in" : "formData",
          "description" : "The full-text details or description of the case.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_case[primary_worker_id]",
          "in" : "formData",
          "description" : "The user ID of the primary case worker.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_case[documents]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "service_case[out_of_network_providers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "primary_data_source",
          "in" : "formData",
          "description" : "Boolean to disable performance optimization for retrieving service cases.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "network_id",
          "in" : "formData",
          "description" : "The identifier of the Network that is managing the case.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "program[entry_date]",
          "in" : "formData",
          "description" : "Timestamp representing the enrollment date.",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/cases/{id}" : {
      "get" : {
        "tags" : [ "Cases" ],
        "summary" : "Return details for the selected case.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_cases_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Cases" ],
        "summary" : "Update a case for the selected contact.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_cases_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will connect the originating assistance request to the case.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_type_id",
          "in" : "formData",
          "description" : "The identifier of the requested service type (need).",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_case[description]",
          "in" : "formData",
          "description" : "The full-text details or description of the case.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_case[primary_worker_id]",
          "in" : "formData",
          "description" : "The user ID of the primary case worker.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_case[documents]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "service_case[out_of_network_providers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "primary_data_source",
          "in" : "formData",
          "description" : "Boolean to disable performance optimization for retrieving service cases.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "network_id",
          "in" : "formData",
          "description" : "The identifier of the Network that is managing the case.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "program[program_id]",
          "in" : "formData",
          "description" : "The identifier of the Program the contact and case is being enrolled in.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "program[entry_date]",
          "in" : "formData",
          "description" : "Timestamp representing the enrollment date.",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Cases" ],
        "summary" : "Update a case for the selected contact.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_cases_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will connect the originating assistance request to the case.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_type_id",
          "in" : "formData",
          "description" : "The identifier of the requested service type (need).",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_case[description]",
          "in" : "formData",
          "description" : "The full-text details or description of the case.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_case[primary_worker_id]",
          "in" : "formData",
          "description" : "The user ID of the primary case worker.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service_case[documents]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "service_case[out_of_network_providers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "primary_data_source",
          "in" : "formData",
          "description" : "Boolean to disable performance optimization for retrieving service cases.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "network_id",
          "in" : "formData",
          "description" : "The identifier of the Network that is managing the case.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "program[program_id]",
          "in" : "formData",
          "description" : "The identifier of the Program the contact and case is being enrolled in.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "program[entry_date]",
          "in" : "formData",
          "description" : "Timestamp representing the enrollment date.",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/cases/{service_case_id}/activity-stream/events" : {
      "get" : {
        "tags" : [ "Groups::Contacts::Cases: Timeline Events" ],
        "summary" : "Returns a list of events for the selected Contact.",
        "description" : "\n<p>Activity Stream or Timeline events are returned loosely based on the\nActivity Stream specification (<a\nhref=\"http://activitystrea.ms\">activitystrea.ms</a>).</p>\n\n<p>Available <code>verb</code> values include: <code>accept</code>,\n<code>add</code>, <code>assign</code>, <code>close</code>,\n<code>complete</code>, <code>create</code>, <code>delete</code>,\n<code>deny</code>, <code>join</code>, <code>leave</code>,\n<code>open</code>, <code>post</code>, <code>replace</code>,\n<code>retract</code>, <code>save</code>, <code>send</code>, and\n<code>update</code>.</p>\n\n<p>Use the verb, object, and target values to determine the event that\noccurred.</p>\n",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_cases_service_case_id_activity-stream_events",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/cases/{service_case_id}/activity-stream/events/filter" : {
      "post" : {
        "tags" : [ "Groups::Contacts::Cases: Filter Timeline Events" ],
        "summary" : "Returns a list of filtered events.",
        "description" : "\n<p>Filtered activity stream or timeline events are returned loosely based on\nthe Activity Stream specification (<a\nhref=\"http://activitystrea.ms\">activitystrea.ms</a>).</p>\n\n<p>Available <code>verb</code> values include: <code>accept</code>,\n<code>add</code>, <code>assign</code>, <code>close</code>,\n<code>complete</code>, <code>create</code>, <code>delete</code>,\n<code>deny</code>, <code>join</code>, <code>leave</code>,\n<code>open</code>, <code>post</code>, <code>replace</code>,\n<code>retract</code>, <code>save</code>, <code>send</code>, and\n<code>update</code>.</p>\n\n<p>Use the verb, object, and target values to determine the event that\noccurred.</p>\n",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_cases_service_case_id_activity-stream_events_filter",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[filter_names]",
          "in" : "formData",
          "description" : "Name of filter to be appliied",
          "required" : false,
          "type" : "string",
          "enum" : [ "client_updates", "closed_records", "notes", "record_updates", "network_updates", "care_team" ]
        }, {
          "name" : "page",
          "in" : "formData",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "formData",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "formData",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "formData",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/cases/{service_case_id}/case-workers/primary" : {
      "get" : {
        "tags" : [ "Cases: Primary Case Worker" ],
        "summary" : "Show the primary case worker for the selected case.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_cases_service_case_id_case-workers_primary",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Cases: Primary Case Worker" ],
        "summary" : "Update the primary case worker for the selected case.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_cases_service_case_id_case-workers_primary",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "formData",
          "description" : "The ID of the user to be set as the primary case worker.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Cases: Primary Case Worker" ],
        "summary" : "Update the primary case worker for the selected case.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_cases_service_case_id_case-workers_primary",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "formData",
          "description" : "The ID of the user to be set as the primary case worker.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/cases/{service_case_id}/close" : {
      "put" : {
        "tags" : [ "Apiv3groupscontactscasesservice casesclosings" ],
        "summary" : "Set the selected case to closed and create a closing node",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_cases_service_case_id_close",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "outcome_id",
          "in" : "formData",
          "description" : "The id of the outcome this closing is associated with",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "formData",
          "description" : "The status of the case; either `resolved` or `unresolved`.",
          "required" : true,
          "type" : "string",
          "enum" : [ "resolved", "unresolved" ]
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "note",
          "in" : "formData",
          "description" : "A note pertaining to the closing",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Apiv3groupscontactscasesservice casesclosings" ],
        "summary" : "Set the selected case to closed and create a closing node",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_cases_service_case_id_close",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "outcome_id",
          "in" : "formData",
          "description" : "The id of the outcome this closing is associated with",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "formData",
          "description" : "The status of the case; either `resolved` or `unresolved`.",
          "required" : true,
          "type" : "string",
          "enum" : [ "resolved", "unresolved" ]
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "note",
          "in" : "formData",
          "description" : "A note pertaining to the closing",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/cases/{service_case_id}/documents" : {
      "get" : {
        "tags" : [ "Cases: Documents" ],
        "summary" : "Displays a list of all the documents attached.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_cases_service_case_id_documents",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/cases/{service_case_id}/documents/{id}" : {
      "get" : {
        "tags" : [ "Cases: Documents" ],
        "summary" : "Displays a single document.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_cases_service_case_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Cases: Documents" ],
        "summary" : "Updates a document.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_cases_service_case_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "document[title]",
          "in" : "formData",
          "description" : "The name associated with the document",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attach_to_id",
          "in" : "formData",
          "description" : "The ID of the object to change the document attachment to.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Cases: Documents" ],
        "summary" : "Deletes an attached document.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_cases_service_case_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Cases: Documents" ],
        "summary" : "Updates a document.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_cases_service_case_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "document[title]",
          "in" : "formData",
          "description" : "The name associated with the document",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attach_to_id",
          "in" : "formData",
          "description" : "The ID of the object to change the document attachment to.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/cases/{service_case_id}/enrollment" : {
      "put" : {
        "tags" : [ "Group Cases: Enrollment" ],
        "summary" : "Updates the case program enrollment",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_cases_service_case_id_enrollment",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "enrollment[referred_to]",
          "in" : "formData",
          "description" : "Freeform text for information about where the client was referred",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "enrollment[enrolled_at]",
          "in" : "formData",
          "description" : "Timestamp representing the enrollment date.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "enrollment[exited_at]",
          "in" : "formData",
          "description" : "Timestamp representing the exit date.",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Group Cases: Enrollment" ],
        "summary" : "Updates the case program enrollment",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_cases_service_case_id_enrollment",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "enrollment[referred_to]",
          "in" : "formData",
          "description" : "Freeform text for information about where the client was referred",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "enrollment[enrolled_at]",
          "in" : "formData",
          "description" : "Timestamp representing the enrollment date.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "enrollment[exited_at]",
          "in" : "formData",
          "description" : "Timestamp representing the exit date.",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/cases/{service_case_id}/forms" : {
      "get" : {
        "tags" : [ "Cases: Assessments/Forms" ],
        "summary" : "Returns forms that have been completed (at least one response) for the specified case (uses service type).",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_cases_service_case_id_forms",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_case_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/consents/documents" : {
      "post" : {
        "tags" : [ "Contacts: Consents - Create and accept a document consent request" ],
        "summary" : "Create and Accepts a new document consent request for the selected contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_consents_documents",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "consents[documents]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/consents/emails" : {
      "post" : {
        "tags" : [ "Contacts: Consents - Create an email consent request" ],
        "summary" : "Create new email consent request for the selected contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_consents_emails",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "consents[email_address]",
          "in" : "formData",
          "description" : "Email you would like to deliver the consent request to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/consents/immediate/accept" : {
      "post" : {
        "tags" : [ "Area to Accept Consent Requests that are created via Attestation" ],
        "summary" : "Accepts consent and stores captured signature",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_consents_immediate_accept",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "consent[signature_image]",
          "in" : "formData",
          "description" : "Base64 of the signature image",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/consents/immediate/reject" : {
      "post" : {
        "tags" : [ "Area to Reject Consent Requests that are created via Attestation" ],
        "summary" : "Rejects consent request that is found",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_consents_immediate_reject",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/consents/revoke-consent" : {
      "post" : {
        "tags" : [ "Controller for Revoking Consent for a Client" ],
        "summary" : "Updates consent request status for a user",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_consents_revoke-consent",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/consents/sms" : {
      "post" : {
        "tags" : [ "Contacts: Consents - Create an sms consent request" ],
        "summary" : "Create new sms consent request for the selected contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_consents_sms",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "consents[phone_number]",
          "in" : "formData",
          "description" : "Phone number to deliver the consent request to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/consents/web" : {
      "post" : {
        "tags" : [ "Contacts: Consents - Create consent request URL" ],
        "summary" : "Create new consent request URL for the selected contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_consents_web",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/documents" : {
      "get" : {
        "tags" : [ "Contacts: Documents" ],
        "summary" : "Displays a list of all the documents attached.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_documents",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/documents/assign" : {
      "post" : {
        "tags" : [ "Documents" ],
        "summary" : "Assign existing documents to provided resources",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_documents_assign",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "options[attach_to_contact]",
          "in" : "formData",
          "description" : "A boolean specifying whether to attach documents to the contact",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "options[resource_ids]",
          "in" : "formData",
          "description" : "An array of ids for cases, referrals, intakes for a contact",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "document_ids",
          "in" : "formData",
          "description" : "The ids of existing documents",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/documents/remove" : {
      "post" : {
        "tags" : [ "Document Deletion" ],
        "summary" : "Create new documents for provided resources",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_documents_remove",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "resource_ids",
          "in" : "formData",
          "description" : "The ids of the resources from which the document will be removed",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "document_id",
          "in" : "formData",
          "description" : "The id of the document to remove",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/documents/{id}" : {
      "get" : {
        "tags" : [ "Contacts: Documents" ],
        "summary" : "Displays a single document.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Contacts: Documents" ],
        "summary" : "Updates a document.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "document[title]",
          "in" : "formData",
          "description" : "The name associated with the document",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attach_to_id",
          "in" : "formData",
          "description" : "The ID of the object to change the document attachment to.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Contacts: Documents" ],
        "summary" : "Deletes an attached document.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Contacts: Documents" ],
        "summary" : "Updates a document.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "document[title]",
          "in" : "formData",
          "description" : "The name associated with the document",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attach_to_id",
          "in" : "formData",
          "description" : "The ID of the object to change the document attachment to.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/email-addresses" : {
      "post" : {
        "tags" : [ "Contacts: Email Addresses" ],
        "summary" : "Add a new email address to the selected Contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_email-addresses",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "email_address[email_address]",
          "in" : "formData",
          "description" : "A valid email address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email_address[is_primary]",
          "in" : "formData",
          "description" : "Is this email address the primary one for the contact.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "email_address[acceptable_communication_types]",
          "in" : "formData",
          "description" : "Acceptable methods by which to contact the user at this email",
          "required" : false,
          "type" : "string",
          "enum" : [ "message", "notification" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/email-addresses/{id}" : {
      "put" : {
        "tags" : [ "Contacts: Email Addresses" ],
        "summary" : "Update an existing Contact email address.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_email-addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "email_address[email_address]",
          "in" : "formData",
          "description" : "A valid email address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email_address[is_primary]",
          "in" : "formData",
          "description" : "Is this email address the primary one for the contact.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "email_address[acceptable_communication_types]",
          "in" : "formData",
          "description" : "Acceptable methods by which to contact the user at this email",
          "required" : false,
          "type" : "string",
          "enum" : [ "message", "notification" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Contacts: Email Addresses" ],
        "summary" : "Remove an existing Contact email address.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_email-addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Contacts: Email Addresses" ],
        "summary" : "Update an existing Contact email address.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_email-addresses_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "email_address[email_address]",
          "in" : "formData",
          "description" : "A valid email address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email_address[is_primary]",
          "in" : "formData",
          "description" : "Is this email address the primary one for the contact.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "email_address[acceptable_communication_types]",
          "in" : "formData",
          "description" : "Acceptable methods by which to contact the user at this email",
          "required" : false,
          "type" : "string",
          "enum" : [ "message", "notification" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/forms" : {
      "get" : {
        "tags" : [ "Contacts: Forms" ],
        "summary" : "Returns forms available to the selected contact.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_forms",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/forms/{form_id}/response" : {
      "put" : {
        "tags" : [ "Contacts: Respond to Form" ],
        "summary" : "Upserts a contact's response to the specified form/assessment.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_forms_form_id_response",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Contacts: Respond to Form" ],
        "summary" : "Upserts a contact's response to the specified form/assessment.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_forms_form_id_response",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/forms/{form_id}/screenings" : {
      "get" : {
        "tags" : [ "Screenings: Respond to Screening" ],
        "summary" : "Displays an index of screenings",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_forms_form_id_screenings",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Screenings: Respond to Screening" ],
        "summary" : "Creates a new screening",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_forms_form_id_screenings",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/forms/{form_id}/screenings/{id}" : {
      "put" : {
        "tags" : [ "Screenings: Respond to Screening" ],
        "summary" : "Upserts a contact's response to the specified screening",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_forms_form_id_screenings_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Screenings: Respond to Screening" ],
        "summary" : "Upserts a contact's response to the specified screening",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_forms_form_id_screenings_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/forms/{id}" : {
      "get" : {
        "tags" : [ "Contacts: Forms" ],
        "summary" : "Returns form details with any existing responses spliced into the question.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_forms_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/households/members" : {
      "get" : {
        "tags" : [ "Groups::Contacts::Households::Members" ],
        "summary" : "Returns a list of household members for the select contact",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_households_members",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Groups::Contacts::Households::Members" ],
        "summary" : "Creates a new household member for a contact. If the new member is not marked as the head_of_household, the parent contact will become the head_of_household",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_households_members",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "household_member[last_name]",
          "in" : "formData",
          "description" : "Household Member's last name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "household_member[first_name]",
          "in" : "formData",
          "description" : "Household Member's first name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "household_member[gender]",
          "in" : "formData",
          "description" : "Household Member's specified gender.",
          "required" : false,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "household_member[title]",
          "in" : "formData",
          "description" : "Household Member's title.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Mr.", "Miss", "Mrs.", "Ms.", "Dr." ]
        }, {
          "name" : "household_member[suffix]",
          "in" : "formData",
          "description" : "Household Member's suffix.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Jr.", "Sr.", "III", "IV", "V", "Esq.", "Ph.D" ]
        }, {
          "name" : "household_member[relation_to_primary]",
          "in" : "formData",
          "description" : "Household Member's relationship to the Contact",
          "required" : false,
          "type" : "string",
          "enum" : [ "self", "child", "spouse", "parent", "partner", "other-relation", "non-relation" ]
        }, {
          "name" : "household_member[date_of_birth]",
          "in" : "formData",
          "description" : "Unix (epoch) timestamp representing the contact's date of birth.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "household_member[head_of_household]",
          "in" : "formData",
          "description" : "Is the household member the head of the household?",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/households/members-counts" : {
      "get" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts" ],
        "summary" : "Get the household count",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_households_members-counts",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts" ],
        "summary" : "Update a household count",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_households_members-counts",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "total",
          "in" : "formData",
          "description" : "Total number of members in the Household",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "children",
          "in" : "formData",
          "description" : "Number of children in the Household",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "adults",
          "in" : "formData",
          "description" : "Number of adults in the Household",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "should_enable",
          "in" : "formData",
          "description" : "Should the `static_count` be enabled?",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts" ],
        "summary" : "Update a household count",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_households_members-counts",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "total",
          "in" : "formData",
          "description" : "Total number of members in the Household",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "children",
          "in" : "formData",
          "description" : "Number of children in the Household",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "adults",
          "in" : "formData",
          "description" : "Number of adults in the Household",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "should_enable",
          "in" : "formData",
          "description" : "Should the `static_count` be enabled?",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/households/members-counts/disable" : {
      "put" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts::Disable" ],
        "summary" : "Sets Household count to come dynamically from the number of related Members",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_households_members-counts_disable",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts::Disable" ],
        "summary" : "Sets Household count to come dynamically from the number of related Members",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_households_members-counts_disable",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/households/members-counts/dynamic-count" : {
      "put" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts::Disable" ],
        "summary" : "Sets Household count to come dynamically from the number of related Members",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_households_members-counts_dynamic-count",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts::Disable" ],
        "summary" : "Sets Household count to come dynamically from the number of related Members",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_households_members-counts_dynamic-count",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/households/members-counts/enable" : {
      "put" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts::Enable" ],
        "summary" : "Sets Household Count to come from static Households::MembersCount node",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_households_members-counts_enable",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts::Enable" ],
        "summary" : "Sets Household Count to come from static Households::MembersCount node",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_households_members-counts_enable",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/households/members-counts/static-count" : {
      "put" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts::Enable" ],
        "summary" : "Sets Household Count to come from static Households::MembersCount node",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_households_members-counts_static-count",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups::Contacts::Households::MembersCounts::Enable" ],
        "summary" : "Sets Household Count to come from static Households::MembersCount node",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_households_members-counts_static-count",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/households/members/{id}" : {
      "put" : {
        "tags" : [ "Groups::Contacts::Households::Members" ],
        "summary" : "Update a household member.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_households_members_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "household_member[first_name]",
          "in" : "formData",
          "description" : "Household Member's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "household_member[last_name]",
          "in" : "formData",
          "description" : "Household Member's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "household_member[gender]",
          "in" : "formData",
          "description" : "Household Member's specified gender.",
          "required" : false,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "household_member[title]",
          "in" : "formData",
          "description" : "Household Member's title.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Mr.", "Miss", "Mrs.", "Ms.", "Dr." ]
        }, {
          "name" : "household_member[suffix]",
          "in" : "formData",
          "description" : "Household Member's suffix.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Jr.", "Sr.", "III", "IV", "V", "Esq.", "Ph.D" ]
        }, {
          "name" : "household_member[relation_to_primary]",
          "in" : "formData",
          "description" : "Household Member's relationship to the Contact",
          "required" : false,
          "type" : "string",
          "enum" : [ "self", "child", "spouse", "parent", "partner", "other-relation", "non-relation" ]
        }, {
          "name" : "household_member[date_of_birth]",
          "in" : "formData",
          "description" : "Unix (epoch) timestamp representing the contact's date of birth.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "household_member[head_of_household]",
          "in" : "formData",
          "description" : "Is the household member the head of the household?",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups::Contacts::Households::Members" ],
        "summary" : "Destroy a household member",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_households_members_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups::Contacts::Households::Members" ],
        "summary" : "Update a household member.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_households_members_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "household_member[first_name]",
          "in" : "formData",
          "description" : "Household Member's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "household_member[last_name]",
          "in" : "formData",
          "description" : "Household Member's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "household_member[gender]",
          "in" : "formData",
          "description" : "Household Member's specified gender.",
          "required" : false,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "household_member[title]",
          "in" : "formData",
          "description" : "Household Member's title.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Mr.", "Miss", "Mrs.", "Ms.", "Dr." ]
        }, {
          "name" : "household_member[suffix]",
          "in" : "formData",
          "description" : "Household Member's suffix.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Jr.", "Sr.", "III", "IV", "V", "Esq.", "Ph.D" ]
        }, {
          "name" : "household_member[relation_to_primary]",
          "in" : "formData",
          "description" : "Household Member's relationship to the Contact",
          "required" : false,
          "type" : "string",
          "enum" : [ "self", "child", "spouse", "parent", "partner", "other-relation", "non-relation" ]
        }, {
          "name" : "household_member[date_of_birth]",
          "in" : "formData",
          "description" : "Unix (epoch) timestamp representing the contact's date of birth.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "household_member[head_of_household]",
          "in" : "formData",
          "description" : "Is the household member the head of the household?",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/intakes/{intake_id}/documents" : {
      "get" : {
        "tags" : [ "Intake: Documents" ],
        "summary" : "Displays a list of all the documents attached.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_intakes_intake_id_documents",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "intake_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/intakes/{intake_id}/documents/{id}" : {
      "get" : {
        "tags" : [ "Intake: Documents" ],
        "summary" : "Displays a single document.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_intakes_intake_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "intake_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Intake: Documents" ],
        "summary" : "Updates a document.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_intakes_intake_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "document[title]",
          "in" : "formData",
          "description" : "The name associated with the document",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "intake_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attach_to_id",
          "in" : "formData",
          "description" : "The ID of the object to change the document attachment to.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Intake: Documents" ],
        "summary" : "Deletes an attached document.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_intakes_intake_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "intake_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Intake: Documents" ],
        "summary" : "Updates a document.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_intakes_intake_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "document[title]",
          "in" : "formData",
          "description" : "The name associated with the document",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "intake_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attach_to_id",
          "in" : "formData",
          "description" : "The ID of the object to change the document attachment to.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/interactions" : {
      "post" : {
        "tags" : [ "Contacts: Interactions" ],
        "summary" : "Creates an interaction.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_interactions",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "collection_class_id",
          "in" : "formData",
          "description" : "",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "interaction[note]",
          "in" : "formData",
          "description" : "Information about the interaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/interactions/{id}" : {
      "put" : {
        "tags" : [ "Contacts: Interactions" ],
        "summary" : "Updates an interaction.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_interactions_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "collection_class_id",
          "in" : "formData",
          "description" : "",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "interaction[note]",
          "in" : "formData",
          "description" : "Information about the interaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Contacts: Interactions" ],
        "summary" : "Updates an interaction.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_interactions_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "collection_class_id",
          "in" : "formData",
          "description" : "",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "interaction[note]",
          "in" : "formData",
          "description" : "Information about the interaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/phone-numbers" : {
      "post" : {
        "tags" : [ "Contacts: Phone Numbers" ],
        "summary" : "Add a new phone number to the selected Contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_phone-numbers",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "phone_number[phone_number]",
          "in" : "formData",
          "description" : "The phone number itself. Minimum 7 digits, only numbers will be stored.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "phone_number[is_primary]",
          "in" : "formData",
          "description" : "Is this phone number the contact's primary contact number.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[phone_type]",
          "in" : "formData",
          "description" : "Type of phone number.",
          "required" : false,
          "type" : "string",
          "enum" : [ "mobile", "home", "work", "fax", "unknown" ]
        }, {
          "name" : "phone_number[can_sms]",
          "in" : "formData",
          "description" : "Can this phone number receive SMS?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[country_code]",
          "in" : "formData",
          "description" : "Country code for the phone number. Defaults to <tt>1</tt>, if not specified.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "phone_number[acceptable_communication_types]",
          "in" : "formData",
          "description" : "Acceptable methods by which to contact the user at this email",
          "required" : false,
          "type" : "string",
          "enum" : [ "phone_call", "message", "notification" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/phone-numbers/{id}" : {
      "put" : {
        "tags" : [ "Contacts: Phone Numbers" ],
        "summary" : "Update an existing Contact phone number.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_phone-numbers_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "phone_number[phone_number]",
          "in" : "formData",
          "description" : "The phone number itself. Minimum 7 digits, only numbers will be stored.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "phone_number[is_primary]",
          "in" : "formData",
          "description" : "Is this phone number the contact's primary contact number.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[phone_type]",
          "in" : "formData",
          "description" : "Type of phone number.",
          "required" : false,
          "type" : "string",
          "enum" : [ "mobile", "home", "work", "fax", "unknown" ]
        }, {
          "name" : "phone_number[can_sms]",
          "in" : "formData",
          "description" : "Can this phone number receive SMS?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[country_code]",
          "in" : "formData",
          "description" : "Country code for the phone number. Defaults to <tt>1</tt>, if not specified.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "phone_number[acceptable_communication_types]",
          "in" : "formData",
          "description" : "Acceptable methods by which to contact the user at this email",
          "required" : false,
          "type" : "string",
          "enum" : [ "phone_call", "message", "notification" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Contacts: Phone Numbers" ],
        "summary" : "Remove an existing Contact phone number.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_contact_id_phone-numbers_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Contacts: Phone Numbers" ],
        "summary" : "Update an existing Contact phone number.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_phone-numbers_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "phone_number[phone_number]",
          "in" : "formData",
          "description" : "The phone number itself. Minimum 7 digits, only numbers will be stored.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "phone_number[is_primary]",
          "in" : "formData",
          "description" : "Is this phone number the contact's primary contact number.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[phone_type]",
          "in" : "formData",
          "description" : "Type of phone number.",
          "required" : false,
          "type" : "string",
          "enum" : [ "mobile", "home", "work", "fax", "unknown" ]
        }, {
          "name" : "phone_number[can_sms]",
          "in" : "formData",
          "description" : "Can this phone number receive SMS?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "phone_number[country_code]",
          "in" : "formData",
          "description" : "Country code for the phone number. Defaults to <tt>1</tt>, if not specified.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "phone_number[acceptable_communication_types]",
          "in" : "formData",
          "description" : "Acceptable methods by which to contact the user at this email",
          "required" : false,
          "type" : "string",
          "enum" : [ "phone_call", "message", "notification" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/programs/{program_id}/enrollment" : {
      "get" : {
        "tags" : [ "Contacts: Program Enrollment" ],
        "summary" : "Returns enrollment details for the contact and the selected program.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_programs_program_id_enrollment",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "program_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/referrals" : {
      "get" : {
        "tags" : [ "Contacts: Referrals" ],
        "summary" : "Returns a list of referrals sent on behalf of the Contact.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_referrals",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts: Referrals" ],
        "summary" : "Create new referral(s) for the selected contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_referrals",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will connect the originating assistance request to the referral.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referrals",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/referrals/draft" : {
      "post" : {
        "tags" : [ "Contacts: Referrals" ],
        "summary" : "Create new referral(s) for the selected contact.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_contacts_contact_id_referrals_draft",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will connect the originating assistance request to the referral.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referrals",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/referrals/{id}" : {
      "get" : {
        "tags" : [ "Contacts: Referrals" ],
        "summary" : "Returns details for the selected referral.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_referrals_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Contacts: Referrals" ],
        "summary" : "Branchs a referral for the selected contact.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_referrals_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will connect the originating assistance request to the referral.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referrals",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Contacts: Referrals" ],
        "summary" : "Branchs a referral for the selected contact.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_referrals_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will connect the originating assistance request to the referral.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referrals",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/screenings" : {
      "get" : {
        "tags" : [ "Screenings: Fetch screenings for contact" ],
        "summary" : "Displays an index of screenings",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_contact_id_screenings",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{contact_id}/select" : {
      "put" : {
        "tags" : [ "Contacts: Select/Use by Group" ],
        "summary" : "Creates a relationship between the selected contact and the Group.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_contact_id_select",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will cause the API to attempt to transfer data from the assistance request requestor to the Contact.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Contacts: Select/Use by Group" ],
        "summary" : "Creates a relationship between the selected contact and the Group.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_contact_id_select",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will cause the API to attempt to transfer data from the assistance request requestor to the Contact.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/contacts/{id}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Returns details for the selected contact.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_contacts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "Updates a contact.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_contacts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "formData",
          "description" : "The identifier of the Network the contact is participating in.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will cause the API to attempt to transfer data from the assistance request requestor to the Contact.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[first_name]",
          "in" : "formData",
          "description" : "Contact's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[last_name]",
          "in" : "formData",
          "description" : "Contact's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[email]",
          "in" : "formData",
          "description" : "Contact's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[date_of_birth]",
          "in" : "formData",
          "description" : "Unix (epoch) timestamp representing the contact's date of birth.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[gender]",
          "in" : "formData",
          "description" : "Contact's specified gender.",
          "required" : false,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "contact[citizenship]",
          "in" : "formData",
          "description" : "Contact's specified citizenship.",
          "required" : false,
          "type" : "string",
          "enum" : [ "us-citizen", "us-national", "lawful-permanent-resident", "other", "undisclosed" ]
        }, {
          "name" : "contact[ethnicity]",
          "in" : "formData",
          "description" : "Contact's specified ethnicity.",
          "required" : false,
          "type" : "string",
          "enum" : [ "hispanic-or-latino", "not-hispanic-or-latino", "undisclosed" ]
        }, {
          "name" : "contact[marital_status]",
          "in" : "formData",
          "description" : "Contact's specified marital status.",
          "required" : false,
          "type" : "string",
          "enum" : [ "divorced", "domestic_partner", "married-civil-union", "single/never-married", "separated", "undisclosed", "widowed" ]
        }, {
          "name" : "contact[race]",
          "in" : "formData",
          "description" : "Contact's specified race.",
          "required" : false,
          "type" : "string",
          "enum" : [ "american-indian-alaska-native", "asian", "black-african-american", "native-hawaiian-or-pacific-islander", "other-race", "undisclosed", "white" ]
        }, {
          "name" : "contact[email_address]",
          "in" : "formData",
          "description" : "Contact's primary email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[preferred_first_name]",
          "in" : "formData",
          "description" : "Contact's preferred first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[title]",
          "in" : "formData",
          "description" : "Contact's title.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Mr.", "Miss", "Mrs.", "Ms.", "Dr." ]
        }, {
          "name" : "contact[middle_name_initial]",
          "in" : "formData",
          "description" : "Contact's middle name or initial.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[suffix]",
          "in" : "formData",
          "description" : "Contact's suffix.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Jr.", "Sr.", "III", "IV", "V", "Esq.", "Ph.D" ]
        }, {
          "name" : "contact[nicknames]",
          "in" : "formData",
          "description" : "Contact's nicknames.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[preferred_communication_method]",
          "in" : "formData",
          "description" : "Preferred communication method",
          "required" : false,
          "type" : "string",
          "enum" : [ "phone_call", "sms", "email", "no_preference" ]
        }, {
          "name" : "contact[preferred_communication_time_of_day]",
          "in" : "formData",
          "description" : "Preferred communication time of day",
          "required" : false,
          "type" : "string",
          "enum" : [ "any_time", "morning", "afternoon", "evening" ]
        }, {
          "name" : "contact[addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[email_addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[phone_numbers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[military][affiliation]",
          "in" : "formData",
          "description" : "Military affiliation",
          "required" : false,
          "type" : "string",
          "enum" : [ "military_member_or_veteran", "spouse", "widow", "family_member", "caregiver", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][current_status]",
          "in" : "formData",
          "description" : "Current military status",
          "required" : false,
          "type" : "string",
          "enum" : [ "active_duty", "national_guard", "reserve", "retiree", "veteran", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][currently_transitioning]",
          "in" : "formData",
          "description" : "Is the contact currently transitioning?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes_12mos_before", "yes_12mos_after", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][at_least_one_day_active_duty]",
          "in" : "formData",
          "description" : "Has at least one day of active duty outside of basic training?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][branch]",
          "in" : "formData",
          "description" : "Branch of service",
          "required" : false,
          "type" : "string",
          "enum" : [ "air_force", "army", "coast_guard", "marines", "navy", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_era]",
          "in" : "formData",
          "description" : "Service era",
          "required" : false,
          "type" : "string",
          "enum" : [ "post_911", "persian_gulf", "post_vietnam", "vietnam", "post_korean", "korean_war", "pre_korean", "ww2", "merchant_marine", "ww1", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][entry_date]",
          "in" : "formData",
          "description" : "Date of entry",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][exit_date]",
          "in" : "formData",
          "description" : "Date of exit",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][deployed]",
          "in" : "formData",
          "description" : "Deployed?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][deployment_starts_at]",
          "in" : "formData",
          "description" : "Deployment start date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][deployment_ends_at]",
          "in" : "formData",
          "description" : "Deployment end date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][discharge_type]",
          "in" : "formData",
          "description" : "Discharge type",
          "required" : false,
          "type" : "string",
          "enum" : [ "honorable", "general", "other_than_honorable", "bad_conduct", "dishonorable", "uncharacterized", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][discharged_due_to_disability]",
          "in" : "formData",
          "description" : "Discharged or retired from military service for a disability incurred in the line of duty?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_connected_disability]",
          "in" : "formData",
          "description" : "Has VA-rated Service-Connected Disability?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_connected_disability_rating]",
          "in" : "formData",
          "description" : "Service-Connected Disability Rating",
          "required" : false,
          "type" : "string",
          "enum" : [ "0", "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][proof_of_veteran_status]",
          "in" : "formData",
          "description" : "Have proof of veteran status?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][proof_type]",
          "in" : "formData",
          "description" : "Proof type",
          "required" : false,
          "type" : "string",
          "enum" : [ "dd214", "va_id", "statement_of_service", "retiree_id", "drivers_license", "military_id", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[insurance_ids]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "Destroys the contact.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_contacts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Contacts" ],
        "summary" : "Updates a contact.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_contacts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "formData",
          "description" : "The identifier of the Network the contact is participating in.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assistance_request_id",
          "in" : "formData",
          "description" : "The identifier of an assistance request submitted by the Contact. This will cause the API to attempt to transfer data from the assistance request requestor to the Contact.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[first_name]",
          "in" : "formData",
          "description" : "Contact's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[last_name]",
          "in" : "formData",
          "description" : "Contact's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[email]",
          "in" : "formData",
          "description" : "Contact's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[date_of_birth]",
          "in" : "formData",
          "description" : "Unix (epoch) timestamp representing the contact's date of birth.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[gender]",
          "in" : "formData",
          "description" : "Contact's specified gender.",
          "required" : false,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "contact[citizenship]",
          "in" : "formData",
          "description" : "Contact's specified citizenship.",
          "required" : false,
          "type" : "string",
          "enum" : [ "us-citizen", "us-national", "lawful-permanent-resident", "other", "undisclosed" ]
        }, {
          "name" : "contact[ethnicity]",
          "in" : "formData",
          "description" : "Contact's specified ethnicity.",
          "required" : false,
          "type" : "string",
          "enum" : [ "hispanic-or-latino", "not-hispanic-or-latino", "undisclosed" ]
        }, {
          "name" : "contact[marital_status]",
          "in" : "formData",
          "description" : "Contact's specified marital status.",
          "required" : false,
          "type" : "string",
          "enum" : [ "divorced", "domestic_partner", "married-civil-union", "single/never-married", "separated", "undisclosed", "widowed" ]
        }, {
          "name" : "contact[race]",
          "in" : "formData",
          "description" : "Contact's specified race.",
          "required" : false,
          "type" : "string",
          "enum" : [ "american-indian-alaska-native", "asian", "black-african-american", "native-hawaiian-or-pacific-islander", "other-race", "undisclosed", "white" ]
        }, {
          "name" : "contact[email_address]",
          "in" : "formData",
          "description" : "Contact's primary email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[preferred_first_name]",
          "in" : "formData",
          "description" : "Contact's preferred first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[title]",
          "in" : "formData",
          "description" : "Contact's title.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Mr.", "Miss", "Mrs.", "Ms.", "Dr." ]
        }, {
          "name" : "contact[middle_name_initial]",
          "in" : "formData",
          "description" : "Contact's middle name or initial.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[suffix]",
          "in" : "formData",
          "description" : "Contact's suffix.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Jr.", "Sr.", "III", "IV", "V", "Esq.", "Ph.D" ]
        }, {
          "name" : "contact[nicknames]",
          "in" : "formData",
          "description" : "Contact's nicknames.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[preferred_communication_method]",
          "in" : "formData",
          "description" : "Preferred communication method",
          "required" : false,
          "type" : "string",
          "enum" : [ "phone_call", "sms", "email", "no_preference" ]
        }, {
          "name" : "contact[preferred_communication_time_of_day]",
          "in" : "formData",
          "description" : "Preferred communication time of day",
          "required" : false,
          "type" : "string",
          "enum" : [ "any_time", "morning", "afternoon", "evening" ]
        }, {
          "name" : "contact[addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[email_addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[phone_numbers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[military][affiliation]",
          "in" : "formData",
          "description" : "Military affiliation",
          "required" : false,
          "type" : "string",
          "enum" : [ "military_member_or_veteran", "spouse", "widow", "family_member", "caregiver", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][current_status]",
          "in" : "formData",
          "description" : "Current military status",
          "required" : false,
          "type" : "string",
          "enum" : [ "active_duty", "national_guard", "reserve", "retiree", "veteran", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][currently_transitioning]",
          "in" : "formData",
          "description" : "Is the contact currently transitioning?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes_12mos_before", "yes_12mos_after", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][at_least_one_day_active_duty]",
          "in" : "formData",
          "description" : "Has at least one day of active duty outside of basic training?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][branch]",
          "in" : "formData",
          "description" : "Branch of service",
          "required" : false,
          "type" : "string",
          "enum" : [ "air_force", "army", "coast_guard", "marines", "navy", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_era]",
          "in" : "formData",
          "description" : "Service era",
          "required" : false,
          "type" : "string",
          "enum" : [ "post_911", "persian_gulf", "post_vietnam", "vietnam", "post_korean", "korean_war", "pre_korean", "ww2", "merchant_marine", "ww1", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][entry_date]",
          "in" : "formData",
          "description" : "Date of entry",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][exit_date]",
          "in" : "formData",
          "description" : "Date of exit",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][deployed]",
          "in" : "formData",
          "description" : "Deployed?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][deployment_starts_at]",
          "in" : "formData",
          "description" : "Deployment start date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][deployment_ends_at]",
          "in" : "formData",
          "description" : "Deployment end date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][discharge_type]",
          "in" : "formData",
          "description" : "Discharge type",
          "required" : false,
          "type" : "string",
          "enum" : [ "honorable", "general", "other_than_honorable", "bad_conduct", "dishonorable", "uncharacterized", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][discharged_due_to_disability]",
          "in" : "formData",
          "description" : "Discharged or retired from military service for a disability incurred in the line of duty?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_connected_disability]",
          "in" : "formData",
          "description" : "Has VA-rated Service-Connected Disability?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_connected_disability_rating]",
          "in" : "formData",
          "description" : "Service-Connected Disability Rating",
          "required" : false,
          "type" : "string",
          "enum" : [ "0", "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][proof_of_veteran_status]",
          "in" : "formData",
          "description" : "Have proof of veteran status?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][proof_type]",
          "in" : "formData",
          "description" : "Proof type",
          "required" : false,
          "type" : "string",
          "enum" : [ "dd214", "va_id", "statement_of_service", "retiree_id", "drivers_license", "military_id", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[insurance_ids]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/exports" : {
      "get" : {
        "tags" : [ "Exports" ],
        "summary" : "Retrieve a paginated list of all exports belonging to the current group",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_exports",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Exports" ],
        "summary" : "Create a new export",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_exports",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "export[send_email]",
          "in" : "formData",
          "description" : "Should send email?",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "export[time_field]",
          "in" : "formData",
          "description" : "To which timestamp field should export apply the time constraint",
          "required" : true,
          "type" : "string",
          "enum" : [ "created_at", "updated_at", "created_or_updated" ]
        }, {
          "name" : "export[type]",
          "in" : "formData",
          "description" : "Type of export that should be created",
          "required" : true,
          "type" : "string",
          "enum" : [ "assessment", "contact", "interaction", "referral", "service_case", "service_episode_raw", "service_episode_snapshot", "user" ]
        }, {
          "name" : "export[target_type]",
          "in" : "formData",
          "description" : "Type of target that is being provided",
          "required" : true,
          "type" : "string",
          "enum" : [ "network", "provider" ]
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "export[target_ids]",
          "in" : "formData",
          "description" : "Array of IDs that identify the targets of the export (ie: Group or Network IDs)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "export[start_at]",
          "in" : "formData",
          "description" : "Earliest date for export (yyyy-mm-dd)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "export[end_at]",
          "in" : "formData",
          "description" : "Ending date for export (yyyy-mm-dd)",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/forms/usage" : {
      "get" : {
        "tags" : [ "Groups: Forms Available for Use" ],
        "summary" : "Retrieve a complete group profile.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_forms_usage",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[use_type]",
          "in" : "query",
          "description" : "Limit the available forms returned to the specified use type.",
          "required" : false,
          "type" : "string",
          "enum" : [ "intake", "exit", "general", "screening", "any" ]
        }, {
          "name" : "q[service_type_ids]",
          "in" : "query",
          "description" : "Identifiers of the service type(s) being provided.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[network_ids]",
          "in" : "query",
          "description" : "Identifiers of the Network(s) being used to provide the service.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[program_id]",
          "in" : "query",
          "description" : "Identifier of the Program being used to provide the service.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[contact_id]",
          "in" : "query",
          "description" : "Identifier of the Contact that will be attached to the used forms.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/hours-of-operation" : {
      "post" : {
        "tags" : [ "Groups: Hours of Operation" ],
        "summary" : "Add hours of operation to the selected Group",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_hours-of-operation",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "schedule[week]",
          "in" : "formData",
          "description" : "The hours of operation for the provided day",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Groups: Hours of Operation" ],
        "summary" : "Update hours of operation for the selected Group",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_hours-of-operation",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "schedule[week]",
          "in" : "formData",
          "description" : "The hours of operation for the provided day",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups: Hours of Operation" ],
        "summary" : "Delete hours of operation for the selected Group",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_hours-of-operation",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "schedule[week]",
          "in" : "formData",
          "description" : "The hours of operation for the provided day",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups: Hours of Operation" ],
        "summary" : "Update hours of operation for the selected Group",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_hours-of-operation",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "schedule[week]",
          "in" : "formData",
          "description" : "The hours of operation for the provided day",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/invitations" : {
      "get" : {
        "tags" : [ "Groups: User Invitations" ],
        "summary" : "Returns a list of invitations sent by the selected group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_invitations",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Groups: User Invitations" ],
        "summary" : "Creates a new user invitation for the selected group.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_invitations",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "invitation[last_name]",
          "in" : "formData",
          "description" : "Last name of the invitation recipient.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "invitation[first_name]",
          "in" : "formData",
          "description" : "First name of the invitation recipient.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "invitation[email]",
          "in" : "formData",
          "description" : "Email address where the invitation should be delivered.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "invitation[send_immediately]",
          "in" : "formData",
          "description" : "Should the invitation be delivered immediately. Defaults to <tt>false</tt>.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/invitations/{id}" : {
      "get" : {
        "tags" : [ "Groups: User Invitations" ],
        "summary" : "Returns details for an invitation.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_invitations_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Groups: User Invitations" ],
        "summary" : "Updates an existing user invitation for the selected group.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_invitations_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "invitation[email]",
          "in" : "formData",
          "description" : "Email address where the invitation should be delivered.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invitation[first_name]",
          "in" : "formData",
          "description" : "First name of the invitation recipient.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invitation[last_name]",
          "in" : "formData",
          "description" : "Last name of the invitation recipient.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invitation[send_immediately]",
          "in" : "formData",
          "description" : "Should the invitation be delivered immediately. Defaults to <tt>false</tt>.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups: User Invitations" ],
        "summary" : "Deletes a user invitation for the selected group. Renders the invitation invalid.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_invitations_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups: User Invitations" ],
        "summary" : "Updates an existing user invitation for the selected group.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_invitations_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "invitation[email]",
          "in" : "formData",
          "description" : "Email address where the invitation should be delivered.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invitation[first_name]",
          "in" : "formData",
          "description" : "First name of the invitation recipient.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invitation[last_name]",
          "in" : "formData",
          "description" : "Last name of the invitation recipient.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invitation[send_immediately]",
          "in" : "formData",
          "description" : "Should the invitation be delivered immediately. Defaults to <tt>false</tt>.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/invitations/{invitation_id}/reminders" : {
      "post" : {
        "tags" : [ "Groups: User Invitation Reminders" ],
        "summary" : "Re-send an invitation to join the selected group.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_invitations_invitation_id_reminders",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "invitation_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/messages/share-group" : {
      "post" : {
        "tags" : [ "Group sharing" ],
        "summary" : "Sends a message in order to share a group with someone",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_messages_share-group",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "message[group_id]",
          "in" : "formData",
          "description" : "The id of the group to share",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "message[message_method]",
          "in" : "formData",
          "description" : "How the message is to be sent",
          "required" : true,
          "type" : "string",
          "enum" : [ "email", "sms" ]
        }, {
          "name" : "message[to]",
          "in" : "formData",
          "description" : "The phone number or email address of the recipient",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/programs" : {
      "get" : {
        "tags" : [ "Groups: Programs" ],
        "summary" : "Returns a list of programs available to the group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_programs",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/programs/{id}" : {
      "get" : {
        "tags" : [ "Groups: Programs" ],
        "summary" : "Returns details of the selected program.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_programs_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/programs/{program_id}/users" : {
      "get" : {
        "tags" : [ "Groups: Program Users" ],
        "summary" : "Returns a list of users with access to the program.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_programs_program_id_users",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "program_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[text]",
          "in" : "query",
          "description" : "Query to search user's first or last name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[employ_state]",
          "in" : "query",
          "description" : "Filter the results returned by the user's employment status with the group.",
          "required" : false,
          "type" : "string",
          "enum" : [ "is_active", "is_inactive", "any" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/programs/{program_id}/users/{id}" : {
      "put" : {
        "tags" : [ "Groups: Program Users" ],
        "summary" : "Updates a user's access to the selected program.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_programs_program_id_users_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "program_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups: Program Users" ],
        "summary" : "Removes a user from the selected program.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_programs_program_id_users_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "program_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups: Program Users" ],
        "summary" : "Updates a user's access to the selected program.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_programs_program_id_users_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "program_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/closed" : {
      "get" : {
        "tags" : [ "Groups: Closed Referrals" ],
        "summary" : "Return a list of closed Referrals",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_closed",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/drafts" : {
      "get" : {
        "tags" : [ "Groups: Draft Referrals" ],
        "summary" : "Returns a list of draft referrals for the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_drafts",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/drafts/{id}" : {
      "get" : {
        "tags" : [ "Groups: Draft Referrals" ],
        "summary" : "Returns details for the selected draft referral.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_drafts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Groups: Draft Referrals" ],
        "summary" : "Updates the details of the selected referral.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_referrals_drafts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral[description]",
          "in" : "formData",
          "description" : "Referral notes or description.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[referred_by_network_id]",
          "in" : "formData",
          "description" : "Network from which the referral will be sent.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[referred_to_network_id]",
          "in" : "formData",
          "description" : "Network to which the referral will be sent.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[service_type]",
          "in" : "formData",
          "description" : "Service type for the referral.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[documents]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups: Draft Referrals" ],
        "summary" : "Deletes the selected draft referral.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_referrals_drafts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups: Draft Referrals" ],
        "summary" : "Updates the details of the selected referral.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_referrals_drafts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral[description]",
          "in" : "formData",
          "description" : "Referral notes or description.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[referred_by_network_id]",
          "in" : "formData",
          "description" : "Network from which the referral will be sent.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[referred_to_network_id]",
          "in" : "formData",
          "description" : "Network to which the referral will be sent.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[service_type]",
          "in" : "formData",
          "description" : "Service type for the referral.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[documents]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel/accepted" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel_accepted",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel/auto-recalled" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel_auto-recalled",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel/awaiting-response" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel_awaiting-response",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel/closed" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel_closed",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel/declined-consent" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel_declined-consent",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel/in-review" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel_in-review",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel/pending-consent" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel_pending-consent",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel/recalled" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel_recalled",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel/recalled-or-auto-recalled" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel_recalled-or-auto-recalled",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/open-channel/rejected" : {
      "get" : {
        "tags" : [ "Groups: Open Channel referrals" ],
        "summary" : "Returns a list of referrals which were neither sent nor received by the Coordination Center.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_open-channel_rejected",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/received" : {
      "get" : {
        "tags" : [ "Groups: Referrals Received" ],
        "summary" : "Returns a list of referrals received by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_received",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/received/in-review" : {
      "get" : {
        "tags" : [ "Groups: Referrals Received" ],
        "summary" : "Returns a list of referrals received by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_received_in-review",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/received/pending" : {
      "get" : {
        "tags" : [ "Groups: Referrals Received" ],
        "summary" : "Returns a list of referrals received by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_received_pending",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/received/pending-consent" : {
      "get" : {
        "tags" : [ "Groups: Referrals Received" ],
        "summary" : "Returns a list of referrals received by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_received_pending-consent",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/received/pending-or-accepted-consent" : {
      "get" : {
        "tags" : [ "Groups: Referrals Received" ],
        "summary" : "Returns a list of referrals received by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_received_pending-or-accepted-consent",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent/accepted" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent_accepted",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent/auto-recalled" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent_auto-recalled",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent/awaiting-response" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent_awaiting-response",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent/closed" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent_closed",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent/declined-consent" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent_declined-consent",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent/in-review" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent_in-review",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent/pending-consent" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent_pending-consent",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent/recalled" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent_recalled",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent/recalled-or-auto-recalled" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent_recalled-or-auto-recalled",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/sent/rejected" : {
      "get" : {
        "tags" : [ "Groups: Referrals Sent" ],
        "summary" : "Returns a list of referrals sent by the Group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_sent_rejected",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{id}" : {
      "get" : {
        "tags" : [ "Groups: Referrals" ],
        "summary" : "Returns details for the selected referral.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Groups: Referrals" ],
        "summary" : "Updates the details of the selected referral.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_referrals_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral[description]",
          "in" : "formData",
          "description" : "Referral notes or description.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[referred_by_network_id]",
          "in" : "formData",
          "description" : "Network from which the referral will be sent.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[referred_to_network_id]",
          "in" : "formData",
          "description" : "Network to which the referral will be sent.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[service_type]",
          "in" : "formData",
          "description" : "Service type for the referral.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[documents]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups: Referrals" ],
        "summary" : "Updates the details of the selected referral.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_referrals_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral[description]",
          "in" : "formData",
          "description" : "Referral notes or description.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[referred_by_network_id]",
          "in" : "formData",
          "description" : "Network from which the referral will be sent.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[referred_to_network_id]",
          "in" : "formData",
          "description" : "Network to which the referral will be sent.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[service_type]",
          "in" : "formData",
          "description" : "Service type for the referral.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral[documents]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/activity-stream/events" : {
      "get" : {
        "tags" : [ "Referrals: Timeline Events" ],
        "summary" : "Returns a list of events for the selected Contact.",
        "description" : "\n<p>Activity Stream or Timeline events are returned loosely based on the\nActivity Stream specification (<a\nhref=\"http://activitystrea.ms\">activitystrea.ms</a>).</p>\n\n<p>Available <code>verb</code> values include: <code>accept</code>,\n<code>add</code>, <code>assign</code>, <code>close</code>,\n<code>complete</code>, <code>create</code>, <code>delete</code>,\n<code>deny</code>, <code>join</code>, <code>leave</code>,\n<code>open</code>, <code>post</code>, <code>replace</code>,\n<code>retract</code>, <code>save</code>, <code>send</code>, and\n<code>update</code>.</p>\n\n<p>Use the verb, object, and target values to determine the event that\noccurred.</p>\n",
        "operationId" : "get_v3_groups_group_id_referrals_referral_id_activity-stream_events",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/activity-stream/events/filter" : {
      "post" : {
        "tags" : [ "Referrals: Filter Timeline Events" ],
        "summary" : "Returns a list of filtered events.",
        "description" : "\n<p>Filtered activity stream or timeline events are returned loosely based on\nthe Activity Stream specification (<a\nhref=\"http://activitystrea.ms\">activitystrea.ms</a>).</p>\n\n<p>Available <code>verb</code> values include: <code>accept</code>,\n<code>add</code>, <code>assign</code>, <code>close</code>,\n<code>complete</code>, <code>create</code>, <code>delete</code>,\n<code>deny</code>, <code>join</code>, <code>leave</code>,\n<code>open</code>, <code>post</code>, <code>replace</code>,\n<code>retract</code>, <code>save</code>, <code>send</code>, and\n<code>update</code>.</p>\n\n<p>Use the verb, object, and target values to determine the event that\noccurred.</p>\n",
        "operationId" : "post_v3_groups_group_id_referrals_referral_id_activity-stream_events_filter",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[filter_names]",
          "in" : "formData",
          "description" : "Name of filter to be appliied",
          "required" : false,
          "type" : "string",
          "enum" : [ "client_updates", "closed_records", "notes", "record_updates", "network_updates", "care_team" ]
        }, {
          "name" : "page",
          "in" : "formData",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "formData",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "formData",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "formData",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/close" : {
      "put" : {
        "tags" : [ "Groups: Closed Referrals" ],
        "summary" : "Set the selected referral to closed and create a closing node",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_referrals_referral_id_close",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "closing[outcome_id]",
          "in" : "formData",
          "description" : "The id of the outcome this closing is associated with",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "closing[status]",
          "in" : "formData",
          "description" : "The status of the case; either `resolved` or `unresolved`.",
          "required" : true,
          "type" : "string",
          "enum" : [ "resolved", "unresolved" ]
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "closing[note]",
          "in" : "formData",
          "description" : "A note pertaining to the closing",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups: Closed Referrals" ],
        "summary" : "Set the selected referral to closed and create a closing node",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_referrals_referral_id_close",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "closing[outcome_id]",
          "in" : "formData",
          "description" : "The id of the outcome this closing is associated with",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "closing[status]",
          "in" : "formData",
          "description" : "The status of the case; either `resolved` or `unresolved`.",
          "required" : true,
          "type" : "string",
          "enum" : [ "resolved", "unresolved" ]
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "closing[note]",
          "in" : "formData",
          "description" : "A note pertaining to the closing",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/contact" : {
      "get" : {
        "tags" : [ "Groups: Referral Contact" ],
        "summary" : "Returns details for the contact connected to the selected referral.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_referral_id_contact",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Groups: Referral Contact" ],
        "summary" : "Updates a contact.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_referrals_referral_id_contact",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact[first_name]",
          "in" : "formData",
          "description" : "Contact's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[last_name]",
          "in" : "formData",
          "description" : "Contact's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[email]",
          "in" : "formData",
          "description" : "Contact's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[date_of_birth]",
          "in" : "formData",
          "description" : "Unix (epoch) timestamp representing the contact's date of birth.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[gender]",
          "in" : "formData",
          "description" : "Contact's specified gender.",
          "required" : false,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "contact[citizenship]",
          "in" : "formData",
          "description" : "Contact's specified citizenship.",
          "required" : false,
          "type" : "string",
          "enum" : [ "us-citizen", "us-national", "lawful-permanent-resident", "other", "undisclosed" ]
        }, {
          "name" : "contact[ethnicity]",
          "in" : "formData",
          "description" : "Contact's specified ethnicity.",
          "required" : false,
          "type" : "string",
          "enum" : [ "hispanic-or-latino", "not-hispanic-or-latino", "undisclosed" ]
        }, {
          "name" : "contact[marital_status]",
          "in" : "formData",
          "description" : "Contact's specified marital status.",
          "required" : false,
          "type" : "string",
          "enum" : [ "divorced", "domestic_partner", "married-civil-union", "single/never-married", "separated", "undisclosed", "widowed" ]
        }, {
          "name" : "contact[race]",
          "in" : "formData",
          "description" : "Contact's specified race.",
          "required" : false,
          "type" : "string",
          "enum" : [ "american-indian-alaska-native", "asian", "black-african-american", "native-hawaiian-or-pacific-islander", "other-race", "undisclosed", "white" ]
        }, {
          "name" : "contact[email_address]",
          "in" : "formData",
          "description" : "Contact's primary email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[preferred_first_name]",
          "in" : "formData",
          "description" : "Contact's preferred first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[title]",
          "in" : "formData",
          "description" : "Contact's title.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Mr.", "Miss", "Mrs.", "Ms.", "Dr." ]
        }, {
          "name" : "contact[middle_name_initial]",
          "in" : "formData",
          "description" : "Contact's middle name or initial.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[suffix]",
          "in" : "formData",
          "description" : "Contact's suffix.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Jr.", "Sr.", "III", "IV", "V", "Esq.", "Ph.D" ]
        }, {
          "name" : "contact[nicknames]",
          "in" : "formData",
          "description" : "Contact's nicknames.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[email_addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[phone_numbers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[military][affiliation]",
          "in" : "formData",
          "description" : "Military affiliation",
          "required" : false,
          "type" : "string",
          "enum" : [ "military_member_or_veteran", "spouse", "widow", "family_member", "caregiver", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][current_status]",
          "in" : "formData",
          "description" : "Current military status",
          "required" : false,
          "type" : "string",
          "enum" : [ "active_duty", "national_guard", "reserve", "retiree", "veteran", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][currently_transitioning]",
          "in" : "formData",
          "description" : "Is the contact currently transitioning?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes_12mos_before", "yes_12mos_after", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][at_least_one_day_active_duty]",
          "in" : "formData",
          "description" : "Has at least one day of active duty outside of basic training?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][branch]",
          "in" : "formData",
          "description" : "Branch of service",
          "required" : false,
          "type" : "string",
          "enum" : [ "air_force", "army", "coast_guard", "marines", "navy", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_era]",
          "in" : "formData",
          "description" : "Service era",
          "required" : false,
          "type" : "string",
          "enum" : [ "post_911", "persian_gulf", "post_vietnam", "vietnam", "post_korean", "korean_war", "pre_korean", "ww2", "merchant_marine", "ww1", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][entry_date]",
          "in" : "formData",
          "description" : "Date of entry",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][exit_date]",
          "in" : "formData",
          "description" : "Date of exit",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][deployed]",
          "in" : "formData",
          "description" : "Deployed?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][deployment_starts_at]",
          "in" : "formData",
          "description" : "Deployment start date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][deployment_ends_at]",
          "in" : "formData",
          "description" : "Deployment end date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][discharge_type]",
          "in" : "formData",
          "description" : "Discharge type",
          "required" : false,
          "type" : "string",
          "enum" : [ "honorable", "general", "other_than_honorable", "bad_conduct", "dishonorable", "uncharacterized", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][discharged_due_to_disability]",
          "in" : "formData",
          "description" : "Discharged or retired from military service for a disability incurred in the line of duty?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_connected_disability]",
          "in" : "formData",
          "description" : "Has VA-rated Service-Connected Disability?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_connected_disability_rating]",
          "in" : "formData",
          "description" : "Service-Connected Disability Rating",
          "required" : false,
          "type" : "string",
          "enum" : [ "0", "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][proof_of_veteran_status]",
          "in" : "formData",
          "description" : "Have proof of veteran status?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][proof_type]",
          "in" : "formData",
          "description" : "Proof type",
          "required" : false,
          "type" : "string",
          "enum" : [ "dd214", "va_id", "statement_of_service", "retiree_id", "drivers_license", "military_id", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[data]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups: Referral Contact" ],
        "summary" : "Updates a contact.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_referrals_referral_id_contact",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contact[first_name]",
          "in" : "formData",
          "description" : "Contact's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[last_name]",
          "in" : "formData",
          "description" : "Contact's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[email]",
          "in" : "formData",
          "description" : "Contact's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[date_of_birth]",
          "in" : "formData",
          "description" : "Unix (epoch) timestamp representing the contact's date of birth.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[gender]",
          "in" : "formData",
          "description" : "Contact's specified gender.",
          "required" : false,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "contact[citizenship]",
          "in" : "formData",
          "description" : "Contact's specified citizenship.",
          "required" : false,
          "type" : "string",
          "enum" : [ "us-citizen", "us-national", "lawful-permanent-resident", "other", "undisclosed" ]
        }, {
          "name" : "contact[ethnicity]",
          "in" : "formData",
          "description" : "Contact's specified ethnicity.",
          "required" : false,
          "type" : "string",
          "enum" : [ "hispanic-or-latino", "not-hispanic-or-latino", "undisclosed" ]
        }, {
          "name" : "contact[marital_status]",
          "in" : "formData",
          "description" : "Contact's specified marital status.",
          "required" : false,
          "type" : "string",
          "enum" : [ "divorced", "domestic_partner", "married-civil-union", "single/never-married", "separated", "undisclosed", "widowed" ]
        }, {
          "name" : "contact[race]",
          "in" : "formData",
          "description" : "Contact's specified race.",
          "required" : false,
          "type" : "string",
          "enum" : [ "american-indian-alaska-native", "asian", "black-african-american", "native-hawaiian-or-pacific-islander", "other-race", "undisclosed", "white" ]
        }, {
          "name" : "contact[email_address]",
          "in" : "formData",
          "description" : "Contact's primary email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[preferred_first_name]",
          "in" : "formData",
          "description" : "Contact's preferred first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[title]",
          "in" : "formData",
          "description" : "Contact's title.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Mr.", "Miss", "Mrs.", "Ms.", "Dr." ]
        }, {
          "name" : "contact[middle_name_initial]",
          "in" : "formData",
          "description" : "Contact's middle name or initial.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contact[suffix]",
          "in" : "formData",
          "description" : "Contact's suffix.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Jr.", "Sr.", "III", "IV", "V", "Esq.", "Ph.D" ]
        }, {
          "name" : "contact[nicknames]",
          "in" : "formData",
          "description" : "Contact's nicknames.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[email_addresses]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[phone_numbers]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "contact[military][affiliation]",
          "in" : "formData",
          "description" : "Military affiliation",
          "required" : false,
          "type" : "string",
          "enum" : [ "military_member_or_veteran", "spouse", "widow", "family_member", "caregiver", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][current_status]",
          "in" : "formData",
          "description" : "Current military status",
          "required" : false,
          "type" : "string",
          "enum" : [ "active_duty", "national_guard", "reserve", "retiree", "veteran", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][currently_transitioning]",
          "in" : "formData",
          "description" : "Is the contact currently transitioning?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes_12mos_before", "yes_12mos_after", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][at_least_one_day_active_duty]",
          "in" : "formData",
          "description" : "Has at least one day of active duty outside of basic training?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][branch]",
          "in" : "formData",
          "description" : "Branch of service",
          "required" : false,
          "type" : "string",
          "enum" : [ "air_force", "army", "coast_guard", "marines", "navy", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_era]",
          "in" : "formData",
          "description" : "Service era",
          "required" : false,
          "type" : "string",
          "enum" : [ "post_911", "persian_gulf", "post_vietnam", "vietnam", "post_korean", "korean_war", "pre_korean", "ww2", "merchant_marine", "ww1", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][entry_date]",
          "in" : "formData",
          "description" : "Date of entry",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][exit_date]",
          "in" : "formData",
          "description" : "Date of exit",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][deployed]",
          "in" : "formData",
          "description" : "Deployed?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][deployment_starts_at]",
          "in" : "formData",
          "description" : "Deployment start date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][deployment_ends_at]",
          "in" : "formData",
          "description" : "Deployment end date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "contact[military][discharge_type]",
          "in" : "formData",
          "description" : "Discharge type",
          "required" : false,
          "type" : "string",
          "enum" : [ "honorable", "general", "other_than_honorable", "bad_conduct", "dishonorable", "uncharacterized", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][discharged_due_to_disability]",
          "in" : "formData",
          "description" : "Discharged or retired from military service for a disability incurred in the line of duty?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_connected_disability]",
          "in" : "formData",
          "description" : "Has VA-rated Service-Connected Disability?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][service_connected_disability_rating]",
          "in" : "formData",
          "description" : "Service-Connected Disability Rating",
          "required" : false,
          "type" : "string",
          "enum" : [ "0", "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][proof_of_veteran_status]",
          "in" : "formData",
          "description" : "Have proof of veteran status?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[military][proof_type]",
          "in" : "formData",
          "description" : "Proof type",
          "required" : false,
          "type" : "string",
          "enum" : [ "dd214", "va_id", "statement_of_service", "retiree_id", "drivers_license", "military_id", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "contact[data]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/contact/documents/assign" : {
      "post" : {
        "tags" : [ "Documents" ],
        "summary" : "Assign existing documents to provided resources",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_referrals_referral_id_contact_documents_assign",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "options[attach_to_contact]",
          "in" : "formData",
          "description" : "A boolean specifying whether to attach documents to the contact",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "options[resource_ids]",
          "in" : "formData",
          "description" : "An array of ids for cases, referrals, intakes for a contact",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "document_ids",
          "in" : "formData",
          "description" : "The ids of existing documents",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/contact/forms/usage" : {
      "get" : {
        "tags" : [ "Referral: Forms Available for Use" ],
        "summary" : "Retrieve a complete group profile.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_referral_id_contact_forms_usage",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/contact/forms/{form_id}/response" : {
      "put" : {
        "tags" : [ "Groups: Referral Contact Respond to Form" ],
        "summary" : "Upserts a contact's response to the specified form/assessment.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_referrals_referral_id_contact_forms_form_id_response",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups: Referral Contact Respond to Form" ],
        "summary" : "Upserts a contact's response to the specified form/assessment.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_referrals_referral_id_contact_forms_form_id_response",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/contact/forms/{id}" : {
      "get" : {
        "tags" : [ "Groups: Referral Contact Forms" ],
        "summary" : "Returns form details with any existing responses spliced into the question.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_referral_id_contact_forms_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/contact/programs/{program_id}/enrollment" : {
      "get" : {
        "tags" : [ "Groups: Referral Contact Program Enrollment" ],
        "summary" : "Returns enrollment details for the contact and the selected program.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_referral_id_contact_programs_program_id_enrollment",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "program_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/documents" : {
      "get" : {
        "tags" : [ "Referrals: Documents" ],
        "summary" : "Displays a list of all the documents attached.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_referral_id_documents",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/documents/{id}" : {
      "get" : {
        "tags" : [ "Referrals: Documents" ],
        "summary" : "Displays a single document.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_referrals_referral_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Referrals: Documents" ],
        "summary" : "Updates a document.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_referrals_referral_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "document[title]",
          "in" : "formData",
          "description" : "The name associated with the document",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attach_to_id",
          "in" : "formData",
          "description" : "The ID of the object to change the document attachment to.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Referrals: Documents" ],
        "summary" : "Deletes an attached document.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_referrals_referral_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Referrals: Documents" ],
        "summary" : "Updates a document.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_referrals_referral_id_documents_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "document[title]",
          "in" : "formData",
          "description" : "The name associated with the document",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attach_to_id",
          "in" : "formData",
          "description" : "The ID of the object to change the document attachment to.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/hold" : {
      "put" : {
        "tags" : [ "Groups::Referrals: Hold" ],
        "summary" : "Places the Referral into a status of IN_REVIEW",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_referrals_referral_id_hold",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_hold[reason]",
          "in" : "formData",
          "description" : "A reason for the referral being put in review.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral_hold[note]",
          "in" : "formData",
          "description" : "A note concerning the referral being put in review.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups::Referrals: Hold" ],
        "summary" : "Places the Referral into a status of IN_REVIEW",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_referrals_referral_id_hold",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_hold[reason]",
          "in" : "formData",
          "description" : "A reason for the referral being put in review.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral_hold[note]",
          "in" : "formData",
          "description" : "A note concerning the referral being put in review.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/reassign" : {
      "put" : {
        "tags" : [ "Groups::Referrals: Reassign Program" ],
        "summary" : "Reassigns the referral to another program within the recipient group",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_referrals_referral_id_reassign",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral[referred_to_program_id]",
          "in" : "formData",
          "description" : "ID of the Program to which the referral should be assigned",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups::Referrals: Reassign Program" ],
        "summary" : "Reassigns the referral to another program within the recipient group",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_referrals_referral_id_reassign",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral[referred_to_program_id]",
          "in" : "formData",
          "description" : "ID of the Program to which the referral should be assigned",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/recall" : {
      "put" : {
        "tags" : [ "Groups::Referrals: Recall" ],
        "summary" : "Places the Referral into a status of RECALLED",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_referrals_referral_id_recall",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_recall[reason]",
          "in" : "formData",
          "description" : "A reason for the referral being recalled",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral_recall[note]",
          "in" : "formData",
          "description" : "A note concerning the referral being recalled",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups::Referrals: Recall" ],
        "summary" : "Places the Referral into a status of RECALLED",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_referrals_referral_id_recall",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_recall[reason]",
          "in" : "formData",
          "description" : "A reason for the referral being recalled",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "referral_recall[note]",
          "in" : "formData",
          "description" : "A note concerning the referral being recalled",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/referrals/{referral_id}/referral-workers/primary" : {
      "put" : {
        "tags" : [ "Referrals: Primary Referral Worker" ],
        "summary" : "Update the primary referral worker for the selected referral.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_referrals_referral_id_referral-workers_primary",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "formData",
          "description" : "The ID of the user to be set as the primary referral worker.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Referrals: Primary Referral Worker" ],
        "summary" : "Update the primary referral worker for the selected referral.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_referrals_referral_id_referral-workers_primary",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "formData",
          "description" : "The ID of the user to be set as the primary referral worker.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "referral_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/screenings/{id}" : {
      "get" : {
        "tags" : [ "Groups: Screenings" ],
        "summary" : "Retrieve a screening for a group",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_screenings_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/search" : {
      "post" : {
        "tags" : [ "Search" ],
        "summary" : "Search the group using a keyword or phrase.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_search",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "q[text]",
          "in" : "formData",
          "description" : "Text to search the index for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[include]",
          "in" : "formData",
          "description" : "An array of the types of models to include in the search. Defaults to \"any\".",
          "required" : false,
          "type" : "string",
          "enum" : [ "any", "cases_servicecase", "contact", "document", "interactions_base", "referrals_referral" ]
        }, {
          "name" : "v",
          "in" : "formData",
          "description" : "Indicates which version of search to execute. A value of \"v2\" indicates to use the \"grouped\" by type search type.",
          "required" : false,
          "type" : "string",
          "enum" : [ "v1", "v2" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/search/contacts/global" : {
      "post" : {
        "tags" : [ "Groups: Search -> Global Contacts" ],
        "summary" : "Search the group's contacts using a keyword or phrase.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_search_contacts_global",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "q[last_name]",
          "in" : "formData",
          "description" : "Last name of contact being queried.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[first_name]",
          "in" : "formData",
          "description" : "First name of the contact being queried.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[ssn]",
          "in" : "formData",
          "description" : "Complete Social Security Number of contact being queried. (not yet supported)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[ssn_last4]",
          "in" : "formData",
          "description" : "Last 4 digits of Social Security Number of contact being queried. (not yet supported)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[date_of_birth]",
          "in" : "formData",
          "description" : "UNIX timestamp representing the birth date of the contact being queried.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/service-types" : {
      "get" : {
        "tags" : [ "Groups: Service Types Offered" ],
        "summary" : "Returns all service types provided by the specified group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_service-types",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[group_id]",
          "in" : "query",
          "description" : "ID of group which should be used to filter results; defaults to current group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[program_id]",
          "in" : "query",
          "description" : "ID of program which should be used to filter results",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/service-types/with-outcomes" : {
      "get" : {
        "tags" : [ "Groups: Service Types Offered along with Outcomes scope to the Group" ],
        "summary" : "Returns all service types with outcomes provided by the specified group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_service-types_with-outcomes",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/service-types/{service_type_id}/outcomes" : {
      "get" : {
        "tags" : [ "Groups Service Types: Outcomes" ],
        "summary" : "Returns all outcomes provided by the specified groups service_type.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_service-types_service_type_id_outcomes",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_type_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/service-types/{service_type_id}/sub-types" : {
      "get" : {
        "tags" : [ "Groups: Service Types Offered: Sub-Types" ],
        "summary" : "Returns the list of sub-service/case types for the selected service/case type.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_service-types_service_type_id_sub-types",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_type_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/service-types/{service_type_id}/with-outcomes" : {
      "get" : {
        "tags" : [ "Groups: Service Types Offered along with Outcomes scope to the Group" ],
        "summary" : "Returns a specific service type with outcomes provided by the specified group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_service-types_service_type_id_with-outcomes",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_type_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/user-contact-count" : {
      "get" : {
        "tags" : [ "Groups: Users With Contacts" ],
        "summary" : "Returns a list of users and a count of their contacts with open cases or referrals",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_user-contact-count",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/users" : {
      "get" : {
        "tags" : [ "Groups: Users" ],
        "summary" : "Returns a list of users that are part of the selected group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_users",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user[profile][gender]",
          "in" : "query",
          "description" : "User's specified gender.",
          "required" : true,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[text]",
          "in" : "query",
          "description" : "Query to search user's first or last name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[employ_state]",
          "in" : "query",
          "description" : "Filter the results returned by the user's employment status with the group.",
          "required" : false,
          "type" : "string",
          "enum" : [ "is_active", "is_inactive", "any" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[email]",
          "in" : "query",
          "description" : "User's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[first_name]",
          "in" : "query",
          "description" : "User's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[last_name]",
          "in" : "query",
          "description" : "User's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password]",
          "in" : "query",
          "description" : "User's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password_confirmation]",
          "in" : "query",
          "description" : "Confirmation of user's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[profile][description]",
          "in" : "query",
          "description" : "User's profile description or bio text.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[work_title]",
          "in" : "query",
          "description" : "User's work title or position name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group_licenses",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "network_licenses",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "role_ids",
          "in" : "query",
          "description" : "Identifiers for the roles to assign to the user.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Groups: Users" ],
        "summary" : "Creates a new User, Connects it to Group and to a Groups::Role",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_users",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user[profile][gender]",
          "in" : "formData",
          "description" : "User's specified gender.",
          "required" : true,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[text]",
          "in" : "formData",
          "description" : "Query to search user's first or last name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[employ_state]",
          "in" : "formData",
          "description" : "Filter the results returned by the user's employment status with the group.",
          "required" : false,
          "type" : "string",
          "enum" : [ "is_active", "is_inactive", "any" ]
        }, {
          "name" : "page",
          "in" : "formData",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "formData",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "formData",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "formData",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[email]",
          "in" : "formData",
          "description" : "User's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[first_name]",
          "in" : "formData",
          "description" : "User's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[last_name]",
          "in" : "formData",
          "description" : "User's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password]",
          "in" : "formData",
          "description" : "User's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password_confirmation]",
          "in" : "formData",
          "description" : "Confirmation of user's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[profile][description]",
          "in" : "formData",
          "description" : "User's profile description or bio text.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[work_title]",
          "in" : "formData",
          "description" : "User's work title or position name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group_licenses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "network_licenses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "role_ids",
          "in" : "formData",
          "description" : "Identifiers for the roles to assign to the user.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/users/{user_id}" : {
      "get" : {
        "tags" : [ "Groups: Users" ],
        "summary" : "Returns details for a user that is part of the selected group.",
        "description" : "",
        "operationId" : "get_v3_groups_group_id_users_user_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Groups: Users" ],
        "summary" : "Updates a User.",
        "description" : "",
        "operationId" : "put_v3_groups_group_id_users_user_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user[profile][gender]",
          "in" : "formData",
          "description" : "User's specified gender.",
          "required" : true,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[text]",
          "in" : "formData",
          "description" : "Query to search user's first or last name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[employ_state]",
          "in" : "formData",
          "description" : "Filter the results returned by the user's employment status with the group.",
          "required" : false,
          "type" : "string",
          "enum" : [ "is_active", "is_inactive", "any" ]
        }, {
          "name" : "page",
          "in" : "formData",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "formData",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "formData",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "formData",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[email]",
          "in" : "formData",
          "description" : "User's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[first_name]",
          "in" : "formData",
          "description" : "User's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[last_name]",
          "in" : "formData",
          "description" : "User's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password]",
          "in" : "formData",
          "description" : "User's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password_confirmation]",
          "in" : "formData",
          "description" : "Confirmation of user's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[profile][description]",
          "in" : "formData",
          "description" : "User's profile description or bio text.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[work_title]",
          "in" : "formData",
          "description" : "User's work title or position name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group_licenses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "network_licenses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "role_ids",
          "in" : "formData",
          "description" : "Identifiers for the roles to assign to the user.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups: Users" ],
        "summary" : "Updates a User.",
        "description" : "",
        "operationId" : "patch_v3_groups_group_id_users_user_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user[profile][gender]",
          "in" : "formData",
          "description" : "User's specified gender.",
          "required" : true,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[text]",
          "in" : "formData",
          "description" : "Query to search user's first or last name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[employ_state]",
          "in" : "formData",
          "description" : "Filter the results returned by the user's employment status with the group.",
          "required" : false,
          "type" : "string",
          "enum" : [ "is_active", "is_inactive", "any" ]
        }, {
          "name" : "page",
          "in" : "formData",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "formData",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "formData",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "formData",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[email]",
          "in" : "formData",
          "description" : "User's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[first_name]",
          "in" : "formData",
          "description" : "User's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[last_name]",
          "in" : "formData",
          "description" : "User's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password]",
          "in" : "formData",
          "description" : "User's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password_confirmation]",
          "in" : "formData",
          "description" : "Confirmation of user's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[profile][description]",
          "in" : "formData",
          "description" : "User's profile description or bio text.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[work_title]",
          "in" : "formData",
          "description" : "User's work title or position name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group_licenses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "network_licenses",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "role_ids",
          "in" : "formData",
          "description" : "Identifiers for the roles to assign to the user.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/users/{user_id}/connections" : {
      "post" : {
        "tags" : [ "Groups::Users: Connections" ],
        "summary" : "Add a user to the selected group.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_users_user_id_connections",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups::Users: Connections" ],
        "summary" : "Remove the selected user from the selected group.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_users_user_id_connections",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{group_id}/users/{user_id}/system-roles/{system_role_id}" : {
      "post" : {
        "tags" : [ "Groups: Users - System Roles" ],
        "summary" : "Add a system-level role for the selected user within the selected group.",
        "description" : "",
        "operationId" : "post_v3_groups_group_id_users_user_id_system-roles_system_role_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "system_role_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups: Users - System Roles" ],
        "summary" : "Remove a system-level role from the selected user within the selected group.",
        "description" : "",
        "operationId" : "delete_v3_groups_group_id_users_user_id_system-roles_system_role_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "system_role_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/groups/{id}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Retrieve a complete group profile.",
        "description" : "",
        "operationId" : "get_v3_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Groups" ],
        "summary" : "Update a group profile.",
        "description" : "",
        "operationId" : "put_v3_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group[consent_enabled]",
          "in" : "formData",
          "description" : "Is consent enabled for this organization?",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group[name]",
          "in" : "formData",
          "description" : "The name of the group.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[description]",
          "in" : "formData",
          "description" : "Description of the group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[founded_year]",
          "in" : "formData",
          "description" : "The year the group was founded.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "group[logo_data_uri]",
          "in" : "formData",
          "description" : "Base64 encoded string of the image to be used for the organization logo.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[org_schedule]",
          "in" : "formData",
          "description" : "The hours of operation for the organization.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups" ],
        "summary" : "Update a group profile.",
        "description" : "",
        "operationId" : "patch_v3_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group[consent_enabled]",
          "in" : "formData",
          "description" : "Is consent enabled for this organization?",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group[name]",
          "in" : "formData",
          "description" : "The name of the group.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[description]",
          "in" : "formData",
          "description" : "Description of the group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[founded_year]",
          "in" : "formData",
          "description" : "The year the group was founded.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "group[logo_data_uri]",
          "in" : "formData",
          "description" : "Base64 encoded string of the image to be used for the organization logo.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group[org_schedule]",
          "in" : "formData",
          "description" : "The hours of operation for the organization.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/invites/groups/users/{token}" : {
      "get" : {
        "tags" : [ "Invitations: User" ],
        "summary" : "Returns details for a user using the confirmation/invite token.",
        "description" : "",
        "operationId" : "get_v3_invites_groups_users_token",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Invitations: User" ],
        "summary" : "Confirms and updates the user's account.",
        "description" : "",
        "operationId" : "put_v3_invites_groups_users_token",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user[profile][gender]",
          "in" : "formData",
          "description" : "User's specified gender.",
          "required" : true,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user[email]",
          "in" : "formData",
          "description" : "User's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[first_name]",
          "in" : "formData",
          "description" : "User's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[last_name]",
          "in" : "formData",
          "description" : "User's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password]",
          "in" : "formData",
          "description" : "User's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password_confirmation]",
          "in" : "formData",
          "description" : "Confirmation of user's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[profile][description]",
          "in" : "formData",
          "description" : "User's profile description or bio text.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[work_title]",
          "in" : "formData",
          "description" : "User's work title or position name.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Invitations: User" ],
        "summary" : "Confirms and updates the user's account.",
        "description" : "",
        "operationId" : "patch_v3_invites_groups_users_token",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user[profile][gender]",
          "in" : "formData",
          "description" : "User's specified gender.",
          "required" : true,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user[email]",
          "in" : "formData",
          "description" : "User's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[first_name]",
          "in" : "formData",
          "description" : "User's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[last_name]",
          "in" : "formData",
          "description" : "User's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password]",
          "in" : "formData",
          "description" : "User's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password_confirmation]",
          "in" : "formData",
          "description" : "Confirmation of user's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[profile][description]",
          "in" : "formData",
          "description" : "User's profile description or bio text.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[work_title]",
          "in" : "formData",
          "description" : "User's work title or position name.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/networks/{network_id}/groups" : {
      "get" : {
        "tags" : [ "Networks: Groups" ],
        "summary" : "Returns a list of groups that are participating in the selected Network.",
        "description" : "",
        "operationId" : "get_v3_networks_network_id_groups",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[service_type_ids]",
          "in" : "query",
          "description" : "An array of service type IDs to match network groups with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[name]",
          "in" : "query",
          "description" : "All or part of an organization name within the network to match.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/networks/{network_id}/groups/{group_id}/by-referral-scopes" : {
      "get" : {
        "tags" : [ "Networks: Groups by Referral Scope" ],
        "summary" : "Returns a list of groups based on the referral scopes existing for [Network, scope_to_group_id].",
        "description" : "",
        "operationId" : "get_v3_networks_network_id_groups_group_id_by-referral-scopes",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[include_home_groups]",
          "in" : "query",
          "description" : "Optionally include all groups for any provided `permitted_network` which is the same as `network_id`, regardless of its referral scope",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[permitted_networks]",
          "in" : "query",
          "description" : "Identifiers of networks that should be used to determine a referral scope.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[service_type_ids]",
          "in" : "query",
          "description" : "An array of service type IDs to match network groups with.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[name]",
          "in" : "query",
          "description" : "All or part of an organization name within the network to match.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[include_address_book]",
          "in" : "query",
          "description" : "Optionally include address book groups with in network groups for the current group",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[only_address_book]",
          "in" : "query",
          "description" : "Optionally only show address book groups for the current group",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[address_book_status]",
          "in" : "query",
          "description" : "Optionally filter address book groups by their status",
          "required" : false,
          "type" : "string",
          "enum" : [ "draft", "in_review", "published", "archived" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/networks/{network_id}/groups/{group_id}/search" : {
      "post" : {
        "tags" : [ "Search" ],
        "summary" : "Search the group using a keyword or phrase.",
        "description" : "",
        "operationId" : "post_v3_networks_network_id_groups_group_id_search",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "q[coordinates][lon]",
          "in" : "formData",
          "description" : "Longitude Coordinate",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "q[coordinates][lat]",
          "in" : "formData",
          "description" : "Latitude Coordinate",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "q[text]",
          "in" : "formData",
          "description" : "Text to search the index for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[service_type_ids]",
          "in" : "formData",
          "description" : "An array of service type IDs to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[distance]",
          "in" : "formData",
          "description" : "Either a distance w/ unit OR no distance IOT fetch `any` distance",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[languages]",
          "in" : "formData",
          "description" : "An array of Program Lanugage names to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[accessibility_options]",
          "in" : "formData",
          "description" : "An array of Program Accessibility Option names to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[caters_to]",
          "in" : "formData",
          "description" : "An array of Program Catered To Population names to filter on",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[include_home_groups]",
          "in" : "formData",
          "description" : "Optionally include all groups for any provided `permitted_network` which is the same as `network_id`, regardless of its referral scope",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[include_address_book]",
          "in" : "formData",
          "description" : "Optionally include address book groups with in network groups for the current group",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[only_address_book]",
          "in" : "formData",
          "description" : "Optionally only show address book groups for the current group",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "q[permitted_networks]",
          "in" : "formData",
          "description" : "Identifiers of networks that should be used to determine a referral scope.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "q[force_sort_by_name]",
          "in" : "formData",
          "description" : "Optionally force ordering to be a-z even when distance constraint is used",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "page",
          "in" : "formData",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "formData",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "formData",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "formData",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/networks/{network_id}/groups/{id}" : {
      "get" : {
        "tags" : [ "Networks: Groups" ],
        "summary" : "Returns details about a group participating in the selected Network.",
        "description" : "",
        "operationId" : "get_v3_networks_network_id_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/networks/{network_id}/service-types" : {
      "get" : {
        "tags" : [ "Networks: Service Types Offered" ],
        "summary" : "Returns all service types provided by the specified network.",
        "description" : "",
        "operationId" : "get_v3_networks_network_id_service-types",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/networks/{network_id}/service-types/with-outcomes" : {
      "get" : {
        "tags" : [ "Networks: Service Types Offered along with Outcomes scope to the Network" ],
        "summary" : "Returns all service types with outcomes provided by the specified network.",
        "description" : "",
        "operationId" : "get_v3_networks_network_id_service-types_with-outcomes",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/networks/{network_id}/service-types/{service_type_id}/outcomes" : {
      "get" : {
        "tags" : [ "Networks Service Types: Outcomes" ],
        "summary" : "Returns all outcomes provided by the specified network service_type.",
        "description" : "",
        "operationId" : "get_v3_networks_network_id_service-types_service_type_id_outcomes",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_type_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/networks/{network_id}/service-types/{service_type_id}/with-outcomes" : {
      "get" : {
        "tags" : [ "Networks: Service Types Offered along with Outcomes scope to the Network" ],
        "summary" : "Returns a specific service type with outcomes provided by the specified network.",
        "description" : "",
        "operationId" : "get_v3_networks_network_id_service-types_service_type_id_with-outcomes",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_type_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/networks/{network_id}/users/by-referral-scopes" : {
      "get" : {
        "tags" : [ "Networks: Users/Collaborators by Referral Scopes" ],
        "summary" : "Returns a list of users that are participating in the selected Network or referral scope networks.",
        "description" : "",
        "operationId" : "get_v3_networks_network_id_users_by-referral-scopes",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "q[group_id]",
          "in" : "query",
          "description" : "Identifier for the origin group used to find referral scopes (with network in scope as origin network)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q[text]",
          "in" : "query",
          "description" : "All or part of a user's name or email within the network to match.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q[permitted_networks]",
          "in" : "query",
          "description" : "Identifiers of networks that should be used to filter referral scopes.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/notification-preferences/contacts/{id}" : {
      "get" : {
        "tags" : [ "Global Contact Notification Settings for Users" ],
        "summary" : "Returns contact notification settings for the current user and a contact",
        "description" : "",
        "operationId" : "get_v3_notification-preferences_contacts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "new_case",
          "in" : "query",
          "description" : "new case",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "case_status_change",
          "in" : "query",
          "description" : "case status changed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "referral_made",
          "in" : "query",
          "description" : "referral made",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "referral_declined",
          "in" : "query",
          "description" : "referral declined",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "referral_or_case_assigned",
          "in" : "query",
          "description" : "referral or case assigned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_updated",
          "in" : "query",
          "description" : "contact updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_new_note",
          "in" : "query",
          "description" : "contact new note added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_case_updated",
          "in" : "query",
          "description" : "contact case updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_case_new_note",
          "in" : "query",
          "description" : "contact case new note",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_case_new_document",
          "in" : "query",
          "description" : "contact case new document",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_assessment_updated",
          "in" : "query",
          "description" : "contact assessement updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_team_member_added",
          "in" : "query",
          "description" : "care team member added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_team_member_updated",
          "in" : "query",
          "description" : "care team member updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_team_member_removed",
          "in" : "query",
          "description" : "care team member removed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "primary_worker_assigned_to_case",
          "in" : "query",
          "description" : "primary worked assigned to case",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "accepted_informed_consent",
          "in" : "query",
          "description" : "accepted informed consent",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "declined_informed_consent",
          "in" : "query",
          "description" : "declined informed consent",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_coordinator_assigned",
          "in" : "query",
          "description" : "care coordinator assigned",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Global Contact Notification Settings for Users" ],
        "summary" : "Returns contact notification settings for the current user and a contact",
        "description" : "",
        "operationId" : "put_v3_notification-preferences_contacts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "new_case",
          "in" : "formData",
          "description" : "new case",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "case_status_change",
          "in" : "formData",
          "description" : "case status changed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "referral_made",
          "in" : "formData",
          "description" : "referral made",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "referral_declined",
          "in" : "formData",
          "description" : "referral declined",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "referral_or_case_assigned",
          "in" : "formData",
          "description" : "referral or case assigned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_updated",
          "in" : "formData",
          "description" : "contact updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_new_note",
          "in" : "formData",
          "description" : "contact new note added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_case_updated",
          "in" : "formData",
          "description" : "contact case updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_case_new_note",
          "in" : "formData",
          "description" : "contact case new note",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_case_new_document",
          "in" : "formData",
          "description" : "contact case new document",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_assessment_updated",
          "in" : "formData",
          "description" : "contact assessement updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_team_member_added",
          "in" : "formData",
          "description" : "care team member added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_team_member_updated",
          "in" : "formData",
          "description" : "care team member updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_team_member_removed",
          "in" : "formData",
          "description" : "care team member removed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "primary_worker_assigned_to_case",
          "in" : "formData",
          "description" : "primary worked assigned to case",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "accepted_informed_consent",
          "in" : "formData",
          "description" : "accepted informed consent",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "declined_informed_consent",
          "in" : "formData",
          "description" : "declined informed consent",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_coordinator_assigned",
          "in" : "formData",
          "description" : "care coordinator assigned",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Global Contact Notification Settings for Users" ],
        "summary" : "Returns contact notification settings for the current user and a contact",
        "description" : "",
        "operationId" : "patch_v3_notification-preferences_contacts_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "new_case",
          "in" : "formData",
          "description" : "new case",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "case_status_change",
          "in" : "formData",
          "description" : "case status changed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "referral_made",
          "in" : "formData",
          "description" : "referral made",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "referral_declined",
          "in" : "formData",
          "description" : "referral declined",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "referral_or_case_assigned",
          "in" : "formData",
          "description" : "referral or case assigned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_updated",
          "in" : "formData",
          "description" : "contact updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_new_note",
          "in" : "formData",
          "description" : "contact new note added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_case_updated",
          "in" : "formData",
          "description" : "contact case updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_case_new_note",
          "in" : "formData",
          "description" : "contact case new note",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_case_new_document",
          "in" : "formData",
          "description" : "contact case new document",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "contact_assessment_updated",
          "in" : "formData",
          "description" : "contact assessement updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_team_member_added",
          "in" : "formData",
          "description" : "care team member added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_team_member_updated",
          "in" : "formData",
          "description" : "care team member updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_team_member_removed",
          "in" : "formData",
          "description" : "care team member removed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "primary_worker_assigned_to_case",
          "in" : "formData",
          "description" : "primary worked assigned to case",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "accepted_informed_consent",
          "in" : "formData",
          "description" : "accepted informed consent",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "declined_informed_consent",
          "in" : "formData",
          "description" : "declined informed consent",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "care_coordinator_assigned",
          "in" : "formData",
          "description" : "care coordinator assigned",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/notification-preferences/global-notification-settings/{id}" : {
      "get" : {
        "tags" : [ "Global Notification Settings for Users" ],
        "summary" : "Shows global notification settings for the user",
        "description" : "",
        "operationId" : "get_v3_notification-preferences_global-notification-settings_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email_updates_enabled",
          "in" : "query",
          "description" : "Global email on/off settings",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "update_when_someone_mentions_me",
          "in" : "query",
          "description" : "Methods to alert the user",
          "required" : false,
          "type" : "string",
          "enum" : [ "off", "email_only" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Global Notification Settings for Users" ],
        "summary" : "Updates global notification settings for the user",
        "description" : "",
        "operationId" : "put_v3_notification-preferences_global-notification-settings_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email_updates_enabled",
          "in" : "formData",
          "description" : "Global email on/off settings",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "update_when_someone_mentions_me",
          "in" : "formData",
          "description" : "Methods to alert the user",
          "required" : false,
          "type" : "string",
          "enum" : [ "off", "email_only" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Global Notification Settings for Users" ],
        "summary" : "Updates global notification settings for the user",
        "description" : "",
        "operationId" : "patch_v3_notification-preferences_global-notification-settings_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email_updates_enabled",
          "in" : "formData",
          "description" : "Global email on/off settings",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "update_when_someone_mentions_me",
          "in" : "formData",
          "description" : "Methods to alert the user",
          "required" : false,
          "type" : "string",
          "enum" : [ "off", "email_only" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/notification-preferences/groups/{id}" : {
      "get" : {
        "tags" : [ "Notification Preferences for a Group that a User belongs to" ],
        "summary" : "Returns group notification settings for the current user and a group",
        "description" : "",
        "operationId" : "get_v3_notification-preferences_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_information_updated",
          "in" : "query",
          "description" : "Group information has been updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "new_program_added",
          "in" : "query",
          "description" : "New program has been added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "group_admin_added",
          "in" : "query",
          "description" : "User has been granted administrator role",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "group_user_changes",
          "in" : "query",
          "description" : "Changes to users - added to org, removed from org, role changed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "watch_my_contacts",
          "in" : "query",
          "description" : "Updates and changes to contacts created by user",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "invitation_expired_for_user",
          "in" : "query",
          "description" : "Invitation expired for user",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "group_user_activated_their_account",
          "in" : "query",
          "description" : "User activated their account",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "no_remaining_organization_licences",
          "in" : "query",
          "description" : "Organization does not have any remaining licenses",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "new_assistance_request",
          "in" : "query",
          "description" : "New assistance request",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Notification Preferences for a Group that a User belongs to" ],
        "summary" : "Returns group notification settings for the current user and a group",
        "description" : "",
        "operationId" : "put_v3_notification-preferences_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_information_updated",
          "in" : "formData",
          "description" : "Group information has been updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "new_program_added",
          "in" : "formData",
          "description" : "New program has been added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "group_admin_added",
          "in" : "formData",
          "description" : "User has been granted administrator role",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "group_user_changes",
          "in" : "formData",
          "description" : "Changes to users - added to org, removed from org, role changed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "watch_my_contacts",
          "in" : "formData",
          "description" : "Updates and changes to contacts created by user",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "invitation_expired_for_user",
          "in" : "formData",
          "description" : "Invitation expired for user",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "group_user_activated_their_account",
          "in" : "formData",
          "description" : "User activated their account",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "no_remaining_organization_licences",
          "in" : "formData",
          "description" : "Organization does not have any remaining licenses",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "new_assistance_request",
          "in" : "formData",
          "description" : "New assistance request",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Notification Preferences for a Group that a User belongs to" ],
        "summary" : "Returns group notification settings for the current user and a group",
        "description" : "",
        "operationId" : "patch_v3_notification-preferences_groups_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_information_updated",
          "in" : "formData",
          "description" : "Group information has been updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "new_program_added",
          "in" : "formData",
          "description" : "New program has been added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "group_admin_added",
          "in" : "formData",
          "description" : "User has been granted administrator role",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "group_user_changes",
          "in" : "formData",
          "description" : "Changes to users - added to org, removed from org, role changed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "watch_my_contacts",
          "in" : "formData",
          "description" : "Updates and changes to contacts created by user",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "invitation_expired_for_user",
          "in" : "formData",
          "description" : "Invitation expired for user",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "group_user_activated_their_account",
          "in" : "formData",
          "description" : "User activated their account",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "no_remaining_organization_licences",
          "in" : "formData",
          "description" : "Organization does not have any remaining licenses",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "new_assistance_request",
          "in" : "formData",
          "description" : "New assistance request",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/notification-preferences/networks/{id}" : {
      "get" : {
        "tags" : [ "Notification Preferences for a Network that a User belongs to" ],
        "summary" : "Returns network notification settings for the current user and a network",
        "description" : "",
        "operationId" : "get_v3_notification-preferences_networks_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_information_updated",
          "in" : "query",
          "description" : "Network information has been updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "new_program_added",
          "in" : "query",
          "description" : "New program has been added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "network_admin_added",
          "in" : "query",
          "description" : "User has been granted administrator role",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "network_user_changes",
          "in" : "query",
          "description" : "Changes to users - added to org, removed from org, role changed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "watch_my_contacts",
          "in" : "query",
          "description" : "Updates and changes to contacts created by user",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Notification Preferences for a Network that a User belongs to" ],
        "summary" : "Returns network notification settings for the current user and a network",
        "description" : "",
        "operationId" : "put_v3_notification-preferences_networks_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_information_updated",
          "in" : "formData",
          "description" : "Network information has been updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "new_program_added",
          "in" : "formData",
          "description" : "New program has been added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "network_admin_added",
          "in" : "formData",
          "description" : "User has been granted administrator role",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "network_user_changes",
          "in" : "formData",
          "description" : "Changes to users - added to org, removed from org, role changed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "watch_my_contacts",
          "in" : "formData",
          "description" : "Updates and changes to contacts created by user",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Notification Preferences for a Network that a User belongs to" ],
        "summary" : "Returns network notification settings for the current user and a network",
        "description" : "",
        "operationId" : "patch_v3_notification-preferences_networks_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "network_information_updated",
          "in" : "formData",
          "description" : "Network information has been updated",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "new_program_added",
          "in" : "formData",
          "description" : "New program has been added",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "network_admin_added",
          "in" : "formData",
          "description" : "User has been granted administrator role",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "network_user_changes",
          "in" : "formData",
          "description" : "Changes to users - added to org, removed from org, role changed",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "watch_my_contacts",
          "in" : "formData",
          "description" : "Updates and changes to contacts created by user",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/registration" : {
      "post" : {
        "tags" : [ "User Registration" ],
        "summary" : "Registers a new user account for the Unite US application. The user may be required to confirm her email address.",
        "description" : "",
        "operationId" : "post_v3_registration",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user[last_name]",
          "in" : "formData",
          "description" : "User's last name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user[first_name]",
          "in" : "formData",
          "description" : "User's first name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user[password_confirmation]",
          "in" : "formData",
          "description" : "Confirmation of the user's password.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user[password]",
          "in" : "formData",
          "description" : "User's preferred password.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user[email]",
          "in" : "formData",
          "description" : "User's email address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user[title]",
          "in" : "formData",
          "description" : "User's title.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Mr.", "Miss", "Mrs.", "Ms.", "Dr." ]
        }, {
          "name" : "user[middle_name_initial]",
          "in" : "formData",
          "description" : "User's middle name or initial.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[suffix]",
          "in" : "formData",
          "description" : "User's suffix.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Jr.", "Sr.", "III", "IV", "V", "Esq.", "Ph.D" ]
        }, {
          "name" : "invitation[token]",
          "in" : "formData",
          "description" : "The invitation token used to connect the new user to other resources.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/all-time/summaries/actionables" : {
      "get" : {
        "tags" : [ "All-Time Reports: Actionables Summary" ],
        "summary" : "Returns a snapshot of the selected organization or network's actionables.",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_all-time_summaries_actionables",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/all-time/summaries/counts" : {
      "get" : {
        "tags" : [ "All-Time Reports: Counts Summary" ],
        "summary" : "Returns counts of actionables for the selected organization",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_all-time_summaries_counts",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/cases/by-service-type" : {
      "get" : {
        "tags" : [ "Service Cases by Service Type" ],
        "summary" : "Returns a snapshot of Service Cases by Service Type",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_cases_by-service-type",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/cases/by-source" : {
      "get" : {
        "tags" : [ "Service Cases by Source" ],
        "summary" : "Returns a snapshot of Service Cases by Source",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_cases_by-source",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/cases/by-status" : {
      "get" : {
        "tags" : [ "Service Cases by Status" ],
        "summary" : "Returns a snapshot of Service Cases by Status",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_cases_by-status",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/cases/closed/by-service-type" : {
      "get" : {
        "tags" : [ "Closed Service Cases by Service Type" ],
        "summary" : "Returns a snapshot of Closed Service Cases by Service Type",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_cases_closed_by-service-type",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/cases/closed/service-types/{service_type_id}/by-outcome" : {
      "get" : {
        "tags" : [ "Closed Service Cases by Service Type and Outcome" ],
        "summary" : "Returns a snapshot of Closed Service Cases by Service Type and Outcome",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_cases_closed_service-types_service_type_id_by-outcome",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_type_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/cases/closed/service-types/{service_type_id}/by-sub-type" : {
      "get" : {
        "tags" : [ "Closed Service Cases by Sub Types of Service Type" ],
        "summary" : "Returns a snapshot of Closed Service Cases by Sub Types of Service Type",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_cases_closed_service-types_service_type_id_by-sub-type",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_type_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/cases/count" : {
      "get" : {
        "tags" : [ "Organization Service Cases" ],
        "summary" : "Returns a snapshot of Organization Service Cases",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_cases_count",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/cases/service-types/{service_type_id}/by-sub-type" : {
      "get" : {
        "tags" : [ "Service Cases by Sub Types of Service Type" ],
        "summary" : "Returns a snapshot of Service Cases by Sub Types of Service Type",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_cases_service-types_service_type_id_by-sub-type",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "service_type_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/by-age" : {
      "get" : {
        "tags" : [ "Clients by Age" ],
        "summary" : "Returns a snapshot of Clients by Age",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_by-age",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/by-ethnicity" : {
      "get" : {
        "tags" : [ "Clients by Ethnicity" ],
        "summary" : "Returns a snapshot of Clients by Ethnicity",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_by-ethnicity",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/by-gender" : {
      "get" : {
        "tags" : [ "Clients by Gender" ],
        "summary" : "Returns a snapshot of Clients by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/by-race" : {
      "get" : {
        "tags" : [ "Clients by Race" ],
        "summary" : "Returns a snapshot of Clients by Race",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_by-race",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/count" : {
      "get" : {
        "tags" : [ "Unique Organization Clients Report" ],
        "summary" : "Returns a snapshot of total unique group clients",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_count",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/gender/by-age" : {
      "get" : {
        "tags" : [ "Client Gender by Age" ],
        "summary" : "Returns a snapshot of Client Gender by Age",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_gender_by-age",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/affiliation/by-gender" : {
      "get" : {
        "tags" : [ "Client Military Affiliation by Gender" ],
        "summary" : "Returns a snapshot of Client Military Affiliation by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_affiliation_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/branch-of-service/by-gender" : {
      "get" : {
        "tags" : [ "Client Military Branch of Service by Gender" ],
        "summary" : "Returns a snapshot of Client Military Branch of Service by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_branch-of-service_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/by-affiliation" : {
      "get" : {
        "tags" : [ "Clients by Military Affiliation" ],
        "summary" : "Returns a snapshot of Clients by Military Affiliation",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_by-affiliation",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/by-branch-of-service" : {
      "get" : {
        "tags" : [ "Clients by Military Branch of Service" ],
        "summary" : "Returns a snapshot of Clients by Military Branch of Service",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_by-branch-of-service",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/by-deployed" : {
      "get" : {
        "tags" : [ "Clients by Military Deployment" ],
        "summary" : "Returns a snapshot of Clients by Military Deployment",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_by-deployed",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/by-military-discharge" : {
      "get" : {
        "tags" : [ "Clients by Military Discharge" ],
        "summary" : "Returns a snapshot of Clients by Military Discharge",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_by-military-discharge",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/by-service-era" : {
      "get" : {
        "tags" : [ "Clients by Military Service Era" ],
        "summary" : "Returns a snapshot of Clients by Military Service Era",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_by-service-era",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/by-status" : {
      "get" : {
        "tags" : [ "Clients by Military Status" ],
        "summary" : "Returns a snapshot of Clients by Military Status",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_by-status",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/by-transitioning" : {
      "get" : {
        "tags" : [ "Clients by Military Transitioning Status" ],
        "summary" : "Returns a snapshot of Clients by Military Transitioning Status",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_by-transitioning",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/service-era/by-branch-of-service" : {
      "get" : {
        "tags" : [ "Client Military Service Era by Branch of Service" ],
        "summary" : "Returns a snapshot of Client Military Service Era by Branch of Service",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_service-era_by-branch-of-service",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/service-era/by-gender" : {
      "get" : {
        "tags" : [ "Client Military Service Era by Gender" ],
        "summary" : "Returns a snapshot of Client Military Service Era by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_service-era_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/status/by-gender" : {
      "get" : {
        "tags" : [ "Clients Military Status by Gender" ],
        "summary" : "Returns a snapshot of Clients Military Status by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_status_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/transitioning/by-branch-of-service" : {
      "get" : {
        "tags" : [ "Client Military Transition Status by Branch of Service" ],
        "summary" : "Returns a snapshot of Client Military Transition Status by Branch of Service",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_transitioning_by-branch-of-service",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/military/transitioning/by-gender" : {
      "get" : {
        "tags" : [ "Client Military Transitioning by Gender" ],
        "summary" : "Returns a snapshot of Client Military Transitioning by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_military_transitioning_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/groups/{group_id}/contacts/race/by-ethnicity" : {
      "get" : {
        "tags" : [ "Client Race by Ethnicity" ],
        "summary" : "Returns a snapshot of Client Race by Ethnicity",
        "description" : "",
        "operationId" : "get_v3_reports_groups_group_id_contacts_race_by-ethnicity",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/by-age" : {
      "get" : {
        "tags" : [ "Network Contacts By Age Report" ],
        "summary" : "Returns a snapshot of network contacts by age",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_by-age",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/by-ethnicity" : {
      "get" : {
        "tags" : [ "Network Contacts By Ethnicity Report" ],
        "summary" : "Returns a snapshot of network contacts by ethnicity",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_by-ethnicity",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/by-gender" : {
      "get" : {
        "tags" : [ "Network Contacts By Gender Report" ],
        "summary" : "Returns a snapshot of network contacts by gender",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/by-race" : {
      "get" : {
        "tags" : [ "Network Contacts By Race Report" ],
        "summary" : "Returns a snapshot of network contacts by race",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_by-race",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/count" : {
      "get" : {
        "tags" : [ "Unique Network Contacts Report" ],
        "summary" : "Returns a snapshot of total unique network contacts",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_count",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/gender/by-age" : {
      "get" : {
        "tags" : [ "Contacts Gender by Age Report" ],
        "summary" : "Returns a snapshot of network contacts gender by age",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_gender_by-age",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/affiliation/by-gender" : {
      "get" : {
        "tags" : [ "Network Client Military Affiliation by Gender" ],
        "summary" : "Returns a snapshot of Network Client Military Affiliation by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_affiliation_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/branch-of-service/by-gender" : {
      "get" : {
        "tags" : [ "Network Client Military Branch of Service by Gender" ],
        "summary" : "Returns a snapshot of Network Client Military Branch of Service by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_branch-of-service_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/by-affiliation" : {
      "get" : {
        "tags" : [ "Network Clients by Military Affiliation" ],
        "summary" : "Returns a snapshot of Network Clients by Military Affiliation",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_by-affiliation",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/by-branch-of-service" : {
      "get" : {
        "tags" : [ "Network Clients by Military Branch of Service" ],
        "summary" : "Returns a snapshot of Network Clients by Military Branch of Service",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_by-branch-of-service",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/by-deployed" : {
      "get" : {
        "tags" : [ "Network Clients by Military Deployment" ],
        "summary" : "Returns a snapshot of Network Clients by Military Deployment",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_by-deployed",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/by-military-discharge" : {
      "get" : {
        "tags" : [ "Network Clients by Military Discharge" ],
        "summary" : "Returns a snapshot of Network Clients by Military Discharge",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_by-military-discharge",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/by-service-era" : {
      "get" : {
        "tags" : [ "Network Clients by Military Service Era" ],
        "summary" : "Returns a snapshot of Network Clients by Military Service Era",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_by-service-era",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/by-status" : {
      "get" : {
        "tags" : [ "Network Clients by Military Status" ],
        "summary" : "Returns a snapshot of Network Clients by Military Status",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_by-status",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/by-transitioning" : {
      "get" : {
        "tags" : [ "Network Clients by Military Transitioning Status" ],
        "summary" : "Returns a snapshot of Network Clients by Military Transitioning Status",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_by-transitioning",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/service-era/by-branch-of-service" : {
      "get" : {
        "tags" : [ "Network Client Military Service Era by Branch of Service" ],
        "summary" : "Returns a snapshot of Network Client Military Service Era by Branch of Service",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_service-era_by-branch-of-service",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/service-era/by-gender" : {
      "get" : {
        "tags" : [ "Network Client Military Service Era by Gender" ],
        "summary" : "Returns a snapshot of Network Client Military Service Era by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_service-era_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/status/by-gender" : {
      "get" : {
        "tags" : [ "Network Clients Military Status by Gender" ],
        "summary" : "Returns a snapshot of Network Clients Military Status by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_status_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/transitioning/by-branch-of-service" : {
      "get" : {
        "tags" : [ "Network Client Military Transition Status by Branch of Service" ],
        "summary" : "Returns a snapshot of Network Client Military Transition Status by Branch of Service",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_transitioning_by-branch-of-service",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/military/transitioning/by-gender" : {
      "get" : {
        "tags" : [ "Network Client Military Transitioning by Gender" ],
        "summary" : "Returns a snapshot of Network Client Military Transitioning by Gender",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_military_transitioning_by-gender",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/contacts/race/by-ethnicity" : {
      "get" : {
        "tags" : [ "Client Race by Ethnicity" ],
        "summary" : "Returns a snapshot of Client Race by Ethnicity",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_contacts_race_by-ethnicity",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/groups/count" : {
      "get" : {
        "tags" : [ "Unique Network Organizations Report" ],
        "summary" : "Returns a snapshot of total unique network groups",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_groups_count",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/referrals/received/by-organization" : {
      "get" : {
        "tags" : [ "Received Referrals by Organization" ],
        "summary" : "Returns a snapshot of Received Referrals by Organizations",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_referrals_received_by-organization",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/referrals/sent/by-organization" : {
      "get" : {
        "tags" : [ "Sent Referrals by Organization" ],
        "summary" : "Returns a snapshot of Sent Referrals by Organizations",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_referrals_sent_by-organization",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/reports/networks/{network_id}/users/count" : {
      "get" : {
        "tags" : [ "Unique Network Users Report" ],
        "summary" : "Returns a snapshot of total unique network Users",
        "description" : "",
        "operationId" : "get_v3_reports_networks_network_id_users_count",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/session/checks" : {
      "post" : {
        "tags" : [ "Authentication: Validate Token" ],
        "summary" : "Validates the supplied authentication token.",
        "description" : "\n<p>Validates the supplied authentication token to allow a client to determine\nif the token is valid or not. A <code>200 OK</code> response will be issued\nto indicate the token is valid. A <code>401 UNAUTHORIZED</code> response\nwill be issued to indicate the token is not valid.</p>\n",
        "operationId" : "post_v3_session_checks",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "formData",
          "description" : "Bearer token to validate. Should be formatted as 'Bearer TOKEN_VALUE'",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/session/support" : {
      "get" : {
        "tags" : [ "Apiv3securesessionssupports" ],
        "summary" : "Return supporting information about the user's current session",
        "description" : "",
        "operationId" : "get_v3_session_support",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/users/me/support/zendesk" : {
      "get" : {
        "tags" : [ "Users: Zendesk Support" ],
        "summary" : "Retrieve a user's Zendesk login URL.",
        "description" : "",
        "operationId" : "get_v3_users_me_support_zendesk",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/users/{id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Retrieve a complete user profile.",
        "description" : "",
        "operationId" : "get_v3_users_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Updates the user's account.",
        "description" : "",
        "operationId" : "put_v3_users_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user[profile][gender]",
          "in" : "formData",
          "description" : "User's specified gender.",
          "required" : true,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user[email]",
          "in" : "formData",
          "description" : "User's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[first_name]",
          "in" : "formData",
          "description" : "User's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[last_name]",
          "in" : "formData",
          "description" : "User's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password]",
          "in" : "formData",
          "description" : "User's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password_confirmation]",
          "in" : "formData",
          "description" : "Confirmation of user's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[profile][description]",
          "in" : "formData",
          "description" : "User's profile description or bio text.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[title]",
          "in" : "formData",
          "description" : "User's work title or position name.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Users" ],
        "summary" : "Updates the user's account.",
        "description" : "",
        "operationId" : "patch_v3_users_id",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user[profile][gender]",
          "in" : "formData",
          "description" : "User's specified gender.",
          "required" : true,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user[email]",
          "in" : "formData",
          "description" : "User's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[first_name]",
          "in" : "formData",
          "description" : "User's first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[last_name]",
          "in" : "formData",
          "description" : "User's last name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password]",
          "in" : "formData",
          "description" : "User's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[password_confirmation]",
          "in" : "formData",
          "description" : "Confirmation of user's preferred password, only if changing it.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[profile][description]",
          "in" : "formData",
          "description" : "User's profile description or bio text.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user[title]",
          "in" : "formData",
          "description" : "User's work title or position name.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/users/{user_id}/2fa" : {
      "post" : {
        "tags" : [ "Users: Two-Factor Authentication (2FA)" ],
        "summary" : "Enable a user account to use two-factor authentication (2FA).",
        "description" : "\n<p>Registers the user with the two-factor authentication service to enable 2FA\non the account. A successful registration will return a <code>201\nCREATED</code> response to the client.</p>\n",
        "operationId" : "post_v3_users_user_id_2fa",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "phone_number[phone_number]",
          "in" : "formData",
          "description" : "The user's mobile phone number. It must be SMS-capable.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "phone_number[country_code]",
          "in" : "formData",
          "description" : "The user's country code. Defaults to <tt>1</tt>, for United States.",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Users: Two-Factor Authentication (2FA)" ],
        "summary" : "Disable two-factor authentication (2FA) for the user's account.",
        "description" : "\n<p>De-registers the user&#39;s account with the two-factor authentication\nservice and removes the 2FA setting for their Unite US account. Successful\nde-registration will return a <code>204 NO CONTENT</code> response.</p>\n",
        "operationId" : "delete_v3_users_user_id_2fa",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/users/{user_id}/2fa/confirmations" : {
      "post" : {
        "tags" : [ "Confirming Two-Factor Authentication (2FA) Registration" ],
        "summary" : "Resend two-factor authentication (2FA) token to the user's phone number.",
        "description" : "\n<p>Resends a token to the user&#39;s phone number in order to confirm their\nregistration process. A successful resend will return a <code>200\nSUCCESS</code> response to the client.</p>\n",
        "operationId" : "post_v3_users_user_id_2fa_confirmations",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "put" : {
        "tags" : [ "Confirming Two-Factor Authentication (2FA) Registration" ],
        "summary" : "Confirms a user's 2FA registration.",
        "description" : "\n<p>Takes a confirmation token from the client and verifies that token with\nAuthy API. A successful confirmation will return a <code>200 SUCCESS</code>\nresponse to the client.</p>\n",
        "operationId" : "put_v3_users_user_id_2fa_confirmations",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "formData",
          "description" : "The token the user received via SMS.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "patch" : {
        "tags" : [ "Confirming Two-Factor Authentication (2FA) Registration" ],
        "summary" : "Confirms a user's 2FA registration.",
        "description" : "\n<p>Takes a confirmation token from the client and verifies that token with\nAuthy API. A successful confirmation will return a <code>200 SUCCESS</code>\nresponse to the client.</p>\n",
        "operationId" : "patch_v3_users_user_id_2fa_confirmations",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "formData",
          "description" : "The token the user received via SMS.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/users/{user_id}/accept-end-user-license-agreements" : {
      "post" : {
        "tags" : [ "Users: License Agreements (EULA)" ],
        "summary" : "Accept license to use software.",
        "description" : "\n<p>Accepts the license agreement for the user. A successful registration will\nreturn a <code>201 CREATED</code> response to the client.</p>\n",
        "operationId" : "post_v3_users_user_id_accept-end-user-license-agreements",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/users/{user_id}/access-tokens" : {
      "get" : {
        "tags" : [ "Users: Active Session Management" ],
        "summary" : "Returns a list of active API Access Tokens for the current user.",
        "description" : "",
        "operationId" : "get_v3_users_user_id_access-tokens",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "delete" : {
        "tags" : [ "Users: Active Session Management" ],
        "summary" : "Invalidates the selected token, thus destroying that session.",
        "description" : "\n<p>Should be used to selectively invalidate active API tokens for the current\nuser. If successful, a <code>204 NO CONTENT</code> response will be\nreturned.</p>\n",
        "operationId" : "delete_v3_users_user_id_access-tokens",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "formData",
          "description" : "The token to destroy.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/v3/users/{user_id}/addresses" : {
      "get" : {
        "tags" : [ "Users: Addresses" ],
        "summary" : "Returns a list of addresses attached to the user's account.",
        "description" : "",
        "operationId" : "get_v3_users_user_id_addresses",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page of results to be returned.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "per",
          "in" : "query",
          "description" : "The number of records to be returned per page.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "sord",
          "in" : "query",
          "description" : "The order to sort the results.",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "sidx",
          "in" : "query",
          "description" : "The attribute to sort the results by.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/widgets/assistance-requests" : {
      "get" : {
        "tags" : [ "Widgets: Assistance Requests" ],
        "summary" : "Retrieve the assistance request form configuration for the group specified by the provided access token.",
        "description" : "",
        "operationId" : "get_widgets_assistance-requests",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Widgets: Assistance Requests" ],
        "summary" : "Submit a new assistance request.",
        "description" : "",
        "operationId" : "post_widgets_assistance-requests",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "assistance_request[requestor][phone_number][phone_number]",
          "in" : "formData",
          "description" : "The phone number itself. Minimum 7 digits, only numbers will be stored.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][address][country]",
          "in" : "formData",
          "description" : "Country for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][address][state]",
          "in" : "formData",
          "description" : "State or province for the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][address][postal_code]",
          "in" : "formData",
          "description" : "Postal or ZIP code for the address. Minimum 5 characters in length, maximum 15.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][address][city]",
          "in" : "formData",
          "description" : "City or town of the address.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][address][line_1]",
          "in" : "formData",
          "description" : "Address line 1",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][address][address_type]",
          "in" : "formData",
          "description" : "Type of address.",
          "required" : true,
          "type" : "string",
          "enum" : [ "home", "mailing", "work", "unknown" ]
        }, {
          "name" : "assistance_request[requestor][email_address][email_address]",
          "in" : "formData",
          "description" : "A valid email address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][last_name]",
          "in" : "formData",
          "description" : "Requestor's last name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][first_name]",
          "in" : "formData",
          "description" : "Requestor's first name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[service_type_id]",
          "in" : "formData",
          "description" : "Identifier of the type of service requested.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[description]",
          "in" : "formData",
          "description" : "Full-text of the assistance request.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][email]",
          "in" : "formData",
          "description" : "Requestor's email address.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][date_of_birth]",
          "in" : "formData",
          "description" : "Unix (epoch) timestamp representing the requestor's date of birth.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "assistance_request[requestor][gender]",
          "in" : "formData",
          "description" : "Requestor's specified gender.",
          "required" : false,
          "type" : "string",
          "enum" : [ "male", "female", "undisclosed", "non-binary", "other" ]
        }, {
          "name" : "assistance_request[requestor][citizenship]",
          "in" : "formData",
          "description" : "Requestor's specified citizenship.",
          "required" : false,
          "type" : "string",
          "enum" : [ "us-citizen", "us-national", "lawful-permanent-resident", "other", "undisclosed" ]
        }, {
          "name" : "assistance_request[requestor][ethnicity]",
          "in" : "formData",
          "description" : "Requestor's specified ethnicity.",
          "required" : false,
          "type" : "string",
          "enum" : [ "hispanic-or-latino", "not-hispanic-or-latino", "undisclosed" ]
        }, {
          "name" : "assistance_request[requestor][marital_status]",
          "in" : "formData",
          "description" : "Requestor's specified marital status.",
          "required" : false,
          "type" : "string",
          "enum" : [ "divorced", "domestic_partner", "married-civil-union", "single/never-married", "separated", "undisclosed", "widowed" ]
        }, {
          "name" : "assistance_request[requestor][race]",
          "in" : "formData",
          "description" : "Requestor's specified race.",
          "required" : false,
          "type" : "string",
          "enum" : [ "american-indian-alaska-native", "asian", "black-african-american", "native-hawaiian-or-pacific-islander", "other-race", "undisclosed", "white" ]
        }, {
          "name" : "assistance_request[requestor][email_address][is_primary]",
          "in" : "formData",
          "description" : "Is this email address the primary one for the requestor.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "assistance_request[requestor][preferred_first_name]",
          "in" : "formData",
          "description" : "Requestor's preferred first name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][title]",
          "in" : "formData",
          "description" : "Requestor's title.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Mr.", "Miss", "Mrs.", "Ms.", "Dr." ]
        }, {
          "name" : "assistance_request[requestor][middle_name_initial]",
          "in" : "formData",
          "description" : "Requestor's middle name or initial.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][suffix]",
          "in" : "formData",
          "description" : "Requestor's suffix.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Jr.", "Sr.", "III", "IV", "V", "Esq.", "Ph.D" ]
        }, {
          "name" : "assistance_request[requestor][address][line_2]",
          "in" : "formData",
          "description" : "Additional address details, ex. apartment, suite, etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][address][is_mailing_address]",
          "in" : "formData",
          "description" : "Is this a mailing address.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "assistance_request[requestor][phone_number][is_primary]",
          "in" : "formData",
          "description" : "Is this phone number the requestor's primary requestor number.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "assistance_request[requestor][phone_number][phone_type]",
          "in" : "formData",
          "description" : "Type of phone number.",
          "required" : false,
          "type" : "string",
          "enum" : [ "mobile", "home", "work", "fax", "unknown" ]
        }, {
          "name" : "assistance_request[requestor][phone_number][can_sms]",
          "in" : "formData",
          "description" : "Can this phone number receive SMS?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "assistance_request[requestor][phone_number][country_code]",
          "in" : "formData",
          "description" : "Country code for the phone number. Defaults to <tt>1</tt>, if not specified.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][military][affiliation]",
          "in" : "formData",
          "description" : "Military affiliation",
          "required" : false,
          "type" : "string",
          "enum" : [ "military_member_or_veteran", "spouse", "widow", "family_member", "caregiver", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][current_status]",
          "in" : "formData",
          "description" : "Current military status",
          "required" : false,
          "type" : "string",
          "enum" : [ "active_duty", "national_guard", "reserve", "retiree", "veteran", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][currently_transitioning]",
          "in" : "formData",
          "description" : "Is the requestor currently transitioning?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes_12mos_before", "yes_12mos_after", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][at_least_one_day_active_duty]",
          "in" : "formData",
          "description" : "Has at least one day of active duty outside of basic training?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][branch]",
          "in" : "formData",
          "description" : "Branch of service",
          "required" : false,
          "type" : "string",
          "enum" : [ "air_force", "army", "coast_guard", "marines", "navy", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][service_era]",
          "in" : "formData",
          "description" : "Service era",
          "required" : false,
          "type" : "string",
          "enum" : [ "post_911", "persian_gulf", "post_vietnam", "vietnam", "post_korean", "korean_war", "pre_korean", "ww2", "merchant_marine", "ww1", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][entry_date]",
          "in" : "formData",
          "description" : "Date of entry",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "assistance_request[requestor][military][exit_date]",
          "in" : "formData",
          "description" : "Date of exit",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "assistance_request[requestor][military][deployed]",
          "in" : "formData",
          "description" : "Deployed?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][deployment_starts_at]",
          "in" : "formData",
          "description" : "Deployment start date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "assistance_request[requestor][military][deployment_ends_at]",
          "in" : "formData",
          "description" : "Deployment end date",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "assistance_request[requestor][military][discharge_type]",
          "in" : "formData",
          "description" : "Discharge type",
          "required" : false,
          "type" : "string",
          "enum" : [ "honorable", "general", "other_than_honorable", "bad_conduct", "dishonorable", "uncharacterized", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][discharged_due_to_disability]",
          "in" : "formData",
          "description" : "Discharged or retired from military service for a disability incurred in the line of duty?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][service_connected_disability]",
          "in" : "formData",
          "description" : "Has VA-rated Service-Connected Disability?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][service_connected_disability_rating]",
          "in" : "formData",
          "description" : "Service-Connected Disability Rating",
          "required" : false,
          "type" : "string",
          "enum" : [ "0", "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][proof_of_veteran_status]",
          "in" : "formData",
          "description" : "Have proof of veteran status?",
          "required" : false,
          "type" : "string",
          "enum" : [ "yes", "no", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][military][proof_type]",
          "in" : "formData",
          "description" : "Proof type",
          "required" : false,
          "type" : "string",
          "enum" : [ "dd214", "va_id", "statement_of_service", "retiree_id", "drivers_license", "military_id", "other", "prefer_not_to_disclose" ]
        }, {
          "name" : "assistance_request[requestor][form_response][form_id]",
          "in" : "formData",
          "description" : "The identifier of the assistance request form.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assistance_request[requestor][form_response][data]",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "assistance_request[consent][signature_image]",
          "in" : "formData",
          "description" : "Base64 of the signature image",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    }
  },
  "definitions" : { }
}